<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SqlServer.SmoExtended.11.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftSqlServerSmoExtendedDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Microsoft.SqlServer.SmoExtended</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.AsyncStatus</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.#ctor(Microsoft.SqlServer.Management.Smo.AsyncStatus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.Constructor">
            <summary>Sets the shim of AsyncStatus.AsyncStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.ConstructorExecutionStatusException">
            <summary>Sets the shim of AsyncStatus.AsyncStatus(ExecutionStatus executionStatus, Exception lastException)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.ExecutionStatusGet">
            <summary>Sets the shim of AsyncStatus.get_ExecutionStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.LastExceptionGet">
            <summary>Sets the shim of AsyncStatus.get_LastException()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.AllInstances.ExecutionStatusGet">
            <summary>Sets the shim of AsyncStatus.get_ExecutionStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimAsyncStatus.AllInstances.LastExceptionGet">
            <summary>Sets the shim of AsyncStatus.get_LastException()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.Backup</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.#ctor(Microsoft.SqlServer.Management.Smo.Backup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ActionGet">
            <summary>Sets the shim of Backup.get_Action()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ActionSetBackupActionType">
            <summary>Sets the shim of Backup.set_Action(BackupActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BackupSetDescriptionGet">
            <summary>Sets the shim of Backup.get_BackupSetDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BackupSetDescriptionSetString">
            <summary>Sets the shim of Backup.set_BackupSetDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BackupSetNameGet">
            <summary>Sets the shim of Backup.get_BackupSetName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.BackupSetNameSetString">
            <summary>Sets the shim of Backup.set_BackupSetName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.CompressionOptionGet">
            <summary>Sets the shim of Backup.get_CompressionOption()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.CompressionOptionSetBackupCompressionOptions">
            <summary>Sets the shim of Backup.set_CompressionOption(BackupCompressionOptions value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.Constructor">
            <summary>Sets the shim of Backup.Backup()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ConstructorBoolean">
            <summary>Sets the shim of Backup.Backup(Boolean checkForHADRMaintPlan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.CopyOnlyGet">
            <summary>Sets the shim of Backup.get_CopyOnly()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.CopyOnlySetBoolean">
            <summary>Sets the shim of Backup.set_CopyOnly(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ExpirationDateGet">
            <summary>Sets the shim of Backup.get_ExpirationDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ExpirationDateSetDateTime">
            <summary>Sets the shim of Backup.set_ExpirationDate(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.FormatMediaGet">
            <summary>Sets the shim of Backup.get_FormatMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.FormatMediaSetBoolean">
            <summary>Sets the shim of Backup.set_FormatMedia(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.GetMaintPlanBackupTSQLForRightReplicaString">
            <summary>Sets the shim of Backup.GetMaintPlanBackupTSQLForRightReplica(String backupSqlStatement)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.IgnoreReplicaTypeGet">
            <summary>Sets the shim of Backup.get_IgnoreReplicaType()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.IgnoreReplicaTypeSetBoolean">
            <summary>Sets the shim of Backup.set_IgnoreReplicaType(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.IncrementalGet">
            <summary>Sets the shim of Backup.get_Incremental()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.IncrementalSetBoolean">
            <summary>Sets the shim of Backup.set_Incremental(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.InitializeGet">
            <summary>Sets the shim of Backup.get_Initialize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.InitializeSetBoolean">
            <summary>Sets the shim of Backup.set_Initialize(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.LogTruncationGet">
            <summary>Sets the shim of Backup.get_LogTruncation()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.LogTruncationSetBackupTruncateLogType">
            <summary>Sets the shim of Backup.set_LogTruncation(BackupTruncateLogType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.MediaDescriptionGet">
            <summary>Sets the shim of Backup.get_MediaDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.MediaDescriptionSetString">
            <summary>Sets the shim of Backup.set_MediaDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.MirrorsGet">
            <summary>Sets the shim of Backup.get_Mirrors()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.MirrorsSetBackupDeviceListArray">
            <summary>Sets the shim of Backup.set_Mirrors(BackupDeviceList[] value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.RetainDaysGet">
            <summary>Sets the shim of Backup.get_RetainDays()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.RetainDaysSetInt32">
            <summary>Sets the shim of Backup.set_RetainDays(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ScriptServer">
            <summary>Sets the shim of Backup.Script(Server targetServer)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.SkipTapeHeaderGet">
            <summary>Sets the shim of Backup.get_SkipTapeHeader()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.SkipTapeHeaderSetBoolean">
            <summary>Sets the shim of Backup.set_SkipTapeHeader(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.SqlBackupAsyncServer">
            <summary>Sets the shim of Backup.SqlBackupAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.SqlBackupServer">
            <summary>Sets the shim of Backup.SqlBackup(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.StaticConstructor">
            <summary>Sets the shim of Backup.Backup()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.ThrowIfUsingRemovedFeatureServer">
            <summary>Sets the shim of Backup.ThrowIfUsingRemovedFeature(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.UndoFileNameGet">
            <summary>Sets the shim of Backup.get_UndoFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.UndoFileNameSetString">
            <summary>Sets the shim of Backup.set_UndoFileName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ActionGet">
            <summary>Sets the shim of Backup.get_Action()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ActionSetBackupActionType">
            <summary>Sets the shim of Backup.set_Action(BackupActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.BackupSetDescriptionGet">
            <summary>Sets the shim of Backup.get_BackupSetDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.BackupSetDescriptionSetString">
            <summary>Sets the shim of Backup.set_BackupSetDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.BackupSetNameGet">
            <summary>Sets the shim of Backup.get_BackupSetName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.BackupSetNameSetString">
            <summary>Sets the shim of Backup.set_BackupSetName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.CompressionOptionGet">
            <summary>Sets the shim of Backup.get_CompressionOption()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.CompressionOptionSetBackupCompressionOptions">
            <summary>Sets the shim of Backup.set_CompressionOption(BackupCompressionOptions value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.CopyOnlyGet">
            <summary>Sets the shim of Backup.get_CopyOnly()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.CopyOnlySetBoolean">
            <summary>Sets the shim of Backup.set_CopyOnly(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ExpirationDateGet">
            <summary>Sets the shim of Backup.get_ExpirationDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ExpirationDateSetDateTime">
            <summary>Sets the shim of Backup.set_ExpirationDate(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.FormatMediaGet">
            <summary>Sets the shim of Backup.get_FormatMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.FormatMediaSetBoolean">
            <summary>Sets the shim of Backup.set_FormatMedia(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.GetMaintPlanBackupTSQLForRightReplicaString">
            <summary>Sets the shim of Backup.GetMaintPlanBackupTSQLForRightReplica(String backupSqlStatement)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.IgnoreReplicaTypeGet">
            <summary>Sets the shim of Backup.get_IgnoreReplicaType()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.IgnoreReplicaTypeSetBoolean">
            <summary>Sets the shim of Backup.set_IgnoreReplicaType(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.IncrementalGet">
            <summary>Sets the shim of Backup.get_Incremental()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.IncrementalSetBoolean">
            <summary>Sets the shim of Backup.set_Incremental(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.InitializeGet">
            <summary>Sets the shim of Backup.get_Initialize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.InitializeSetBoolean">
            <summary>Sets the shim of Backup.set_Initialize(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.LogTruncationGet">
            <summary>Sets the shim of Backup.get_LogTruncation()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.LogTruncationSetBackupTruncateLogType">
            <summary>Sets the shim of Backup.set_LogTruncation(BackupTruncateLogType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.MediaDescriptionGet">
            <summary>Sets the shim of Backup.get_MediaDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.MediaDescriptionSetString">
            <summary>Sets the shim of Backup.set_MediaDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.MirrorsGet">
            <summary>Sets the shim of Backup.get_Mirrors()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.MirrorsSetBackupDeviceListArray">
            <summary>Sets the shim of Backup.set_Mirrors(BackupDeviceList[] value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.RetainDaysGet">
            <summary>Sets the shim of Backup.get_RetainDays()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.RetainDaysSetInt32">
            <summary>Sets the shim of Backup.set_RetainDays(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ScriptServer">
            <summary>Sets the shim of Backup.Script(Server targetServer)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.SkipTapeHeaderGet">
            <summary>Sets the shim of Backup.get_SkipTapeHeader()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.SkipTapeHeaderSetBoolean">
            <summary>Sets the shim of Backup.set_SkipTapeHeader(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.SqlBackupAsyncServer">
            <summary>Sets the shim of Backup.SqlBackupAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.SqlBackupServer">
            <summary>Sets the shim of Backup.SqlBackup(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.ThrowIfUsingRemovedFeatureServer">
            <summary>Sets the shim of Backup.ThrowIfUsingRemovedFeature(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.UndoFileNameGet">
            <summary>Sets the shim of Backup.get_UndoFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackup.AllInstances.UndoFileNameSetString">
            <summary>Sets the shim of Backup.set_UndoFileName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.BackupDeviceItem</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.#ctor(Microsoft.SqlServer.Management.Smo.BackupDeviceItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.BackupMediaGet">
            <summary>Sets the shim of BackupDeviceItem.get_BackupMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.CheckTypeObjectStringObject">
            <summary>Sets the shim of BackupDeviceItem.CheckType(Object obj, String operation, Object thisptr)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.CompareToObject">
            <summary>Sets the shim of BackupDeviceItem.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.Constructor">
            <summary>Sets the shim of BackupDeviceItem.BackupDeviceItem()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.ConstructorStringDeviceType">
            <summary>Sets the shim of BackupDeviceItem.BackupDeviceItem(String name, DeviceType deviceType)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.DeviceHeaderServer">
            <summary>Sets the shim of BackupDeviceItem.DeviceHeader(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.DeviceLabelServer">
            <summary>Sets the shim of BackupDeviceItem.DeviceLabel(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.DeviceTypeGet">
            <summary>Sets the shim of BackupDeviceItem.get_DeviceType()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.DeviceTypeSetDeviceType">
            <summary>Sets the shim of BackupDeviceItem.set_DeviceType(DeviceType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.EqualityOpBackupDeviceItemBackupDeviceItem">
            <summary>Sets the shim of BackupDeviceItem.op_Equality(BackupDeviceItem r1, BackupDeviceItem r2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.EqualsObject">
            <summary>Sets the shim of BackupDeviceItem.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.GetHashCode">
            <summary>Sets the shim of BackupDeviceItem.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.GreaterThanOpBackupDeviceItemBackupDeviceItem">
            <summary>Sets the shim of BackupDeviceItem.op_GreaterThan(BackupDeviceItem r1, BackupDeviceItem r2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.InequalityOpBackupDeviceItemBackupDeviceItem">
            <summary>Sets the shim of BackupDeviceItem.op_Inequality(BackupDeviceItem r1, BackupDeviceItem r2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.LessThanOpBackupDeviceItemBackupDeviceItem">
            <summary>Sets the shim of BackupDeviceItem.op_LessThan(BackupDeviceItem r1, BackupDeviceItem r2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.NameGet">
            <summary>Sets the shim of BackupDeviceItem.get_Name()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.NameSetString">
            <summary>Sets the shim of BackupDeviceItem.set_Name(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.BackupMediaGet">
            <summary>Sets the shim of BackupDeviceItem.get_BackupMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.CompareToObject">
            <summary>Sets the shim of BackupDeviceItem.CompareTo(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.DeviceHeaderServer">
            <summary>Sets the shim of BackupDeviceItem.DeviceHeader(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.DeviceLabelServer">
            <summary>Sets the shim of BackupDeviceItem.DeviceLabel(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.DeviceTypeGet">
            <summary>Sets the shim of BackupDeviceItem.get_DeviceType()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.DeviceTypeSetDeviceType">
            <summary>Sets the shim of BackupDeviceItem.set_DeviceType(DeviceType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.EqualsObject">
            <summary>Sets the shim of BackupDeviceItem.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.GetHashCode01">
            <summary>Sets the shim of BackupDeviceItem.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.NameGet">
            <summary>Sets the shim of BackupDeviceItem.get_Name()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceItem.AllInstances.NameSetString">
            <summary>Sets the shim of BackupDeviceItem.set_Name(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.BackupDeviceList</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.#ctor(Microsoft.SqlServer.Management.Smo.BackupDeviceList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.Generic.ICollection{Microsoft.SqlServer.Management.Smo.BackupDeviceItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.Smo.BackupDeviceItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Bind(System.Collections.Generic.IList{Microsoft.SqlServer.Management.Smo.BackupDeviceItem})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.AddDeviceStringDeviceType">
            <summary>Sets the shim of BackupDeviceList.AddDevice(String name, DeviceType deviceType)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.Constructor">
            <summary>Sets the shim of BackupDeviceList.BackupDeviceList()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.ConstructorIEnumerableOfBackupDeviceItem">
            <summary>Sets the shim of BackupDeviceList.BackupDeviceList(IEnumerable`1&lt;BackupDeviceItem&gt; collection)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.ConstructorInt32">
            <summary>Sets the shim of BackupDeviceList.BackupDeviceList(Int32 capacity)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupDeviceList.AllInstances.AddDeviceStringDeviceType">
            <summary>Sets the shim of BackupDeviceList.AddDevice(String name, DeviceType deviceType)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.BackupRestoreBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.#ctor(Microsoft.SqlServer.Management.Smo.BackupRestoreBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.Abort">
            <summary>Sets the shim of BackupRestoreBase.Abort()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AddMediaPasswordServerVersionStringBuilderBooleanBoolean">
            <summary>Sets the shim of BackupRestoreBase.AddMediaPassword(ServerVersion targetVersion, StringBuilder sb, Boolean withCommaStart, Boolean withCommaEnd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AddPasswordServerVersionStringBuilderBooleanBoolean">
            <summary>Sets the shim of BackupRestoreBase.AddPassword(ServerVersion targetVersion, StringBuilder sb, Boolean withCommaStart, Boolean withCommaEnd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AsyncStatusGet">
            <summary>Sets the shim of BackupRestoreBase.get_AsyncStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BlockSizeGet">
            <summary>Sets the shim of BackupRestoreBase.get_BlockSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BlockSizeSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_BlockSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BufferCountGet">
            <summary>Sets the shim of BackupRestoreBase.get_BufferCount()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.BufferCountSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_BufferCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.CheckNewBackupFileServerString">
            <summary>Sets the shim of BackupRestoreBase.CheckNewBackupFile(Server server, String file)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ChecksumGet">
            <summary>Sets the shim of BackupRestoreBase.get_Checksum()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ChecksumSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_Checksum(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.CompleteAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.CompleteRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.Constructor">
            <summary>Sets the shim of BackupRestoreBase.BackupRestoreBase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ContinueAfterErrorGet">
            <summary>Sets the shim of BackupRestoreBase.get_ContinueAfterError()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ContinueAfterErrorSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_ContinueAfterError(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.DatabaseFileGroupsGet">
            <summary>Sets the shim of BackupRestoreBase.get_DatabaseFileGroups()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.DatabaseFilesGet">
            <summary>Sets the shim of BackupRestoreBase.get_DatabaseFiles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.DatabaseGet">
            <summary>Sets the shim of BackupRestoreBase.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.DatabaseSetString">
            <summary>Sets the shim of BackupRestoreBase.set_Database(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.DevicesGet">
            <summary>Sets the shim of BackupRestoreBase.get_Devices()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ExecuteSqlAsyncServerStringCollection">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSqlAsync(Server server, StringCollection queries)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ExecuteSqlServerStringCollection">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSql(Server server, StringCollection queries)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ExecuteSqlWithResultsServerString">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSqlWithResults(Server server, String cmd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.GetDevicesScriptStringBuilderBackupDeviceListServerVersion">
            <summary>Sets the shim of BackupRestoreBase.GetDevicesScript(StringBuilder query, BackupDeviceList devices, ServerVersion targetVersion)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.InformationAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.InformationRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.IsStringValidString">
            <summary>Sets the shim of BackupRestoreBase.IsStringValid(String s)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.MaxTransferSizeGet">
            <summary>Sets the shim of BackupRestoreBase.get_MaxTransferSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.MaxTransferSizeSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_MaxTransferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.MediaNameGet">
            <summary>Sets the shim of BackupRestoreBase.get_MediaName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.MediaNameSetString">
            <summary>Sets the shim of BackupRestoreBase.set_MediaName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NextMediaAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NextMediaRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NoRecoveryGet">
            <summary>Sets the shim of BackupRestoreBase.get_NoRecovery()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NoRecoverySetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_NoRecovery(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NoRewindGet">
            <summary>Sets the shim of BackupRestoreBase.get_NoRewind()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.NoRewindSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_NoRewind(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of BackupRestoreBase.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.PercentCompleteAddPercentCompleteEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.PercentCompleteNotificationGet">
            <summary>Sets the shim of BackupRestoreBase.get_PercentCompleteNotification()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.PercentCompleteNotificationSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_PercentCompleteNotification(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.PercentCompleteRemovePercentCompleteEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.ResetServer">
            <summary>Sets the shim of BackupRestoreBase.ResetServer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.RestartGet">
            <summary>Sets the shim of BackupRestoreBase.get_Restart()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.RestartSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_Restart(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.SetMediaPasswordSecureString">
            <summary>Sets the shim of BackupRestoreBase.SetMediaPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.SetMediaPasswordString">
            <summary>Sets the shim of BackupRestoreBase.SetMediaPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.SetPasswordSecureString">
            <summary>Sets the shim of BackupRestoreBase.SetPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.SetPasswordString">
            <summary>Sets the shim of BackupRestoreBase.SetPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.SetServerServer">
            <summary>Sets the shim of BackupRestoreBase.SetServer(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.UnloadTapeAfterGet">
            <summary>Sets the shim of BackupRestoreBase.get_UnloadTapeAfter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.UnloadTapeAfterSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_UnloadTapeAfter(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.Wait">
            <summary>Sets the shim of BackupRestoreBase.Wait()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.Abort">
            <summary>Sets the shim of BackupRestoreBase.Abort()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.AddMediaPasswordServerVersionStringBuilderBooleanBoolean">
            <summary>Sets the shim of BackupRestoreBase.AddMediaPassword(ServerVersion targetVersion, StringBuilder sb, Boolean withCommaStart, Boolean withCommaEnd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.AddPasswordServerVersionStringBuilderBooleanBoolean">
            <summary>Sets the shim of BackupRestoreBase.AddPassword(ServerVersion targetVersion, StringBuilder sb, Boolean withCommaStart, Boolean withCommaEnd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.AsyncStatusGet">
            <summary>Sets the shim of BackupRestoreBase.get_AsyncStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.BlockSizeGet">
            <summary>Sets the shim of BackupRestoreBase.get_BlockSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.BlockSizeSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_BlockSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.BufferCountGet">
            <summary>Sets the shim of BackupRestoreBase.get_BufferCount()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.BufferCountSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_BufferCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ChecksumGet">
            <summary>Sets the shim of BackupRestoreBase.get_Checksum()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ChecksumSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_Checksum(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.CompleteAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.CompleteRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ContinueAfterErrorGet">
            <summary>Sets the shim of BackupRestoreBase.get_ContinueAfterError()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ContinueAfterErrorSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_ContinueAfterError(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.DatabaseFileGroupsGet">
            <summary>Sets the shim of BackupRestoreBase.get_DatabaseFileGroups()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.DatabaseFilesGet">
            <summary>Sets the shim of BackupRestoreBase.get_DatabaseFiles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.DatabaseGet">
            <summary>Sets the shim of BackupRestoreBase.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.DatabaseSetString">
            <summary>Sets the shim of BackupRestoreBase.set_Database(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.DevicesGet">
            <summary>Sets the shim of BackupRestoreBase.get_Devices()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ExecuteSqlAsyncServerStringCollection">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSqlAsync(Server server, StringCollection queries)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ExecuteSqlServerStringCollection">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSql(Server server, StringCollection queries)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ExecuteSqlWithResultsServerString">
            <summary>Sets the shim of BackupRestoreBase.ExecuteSqlWithResults(Server server, String cmd)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.GetDevicesScriptStringBuilderBackupDeviceListServerVersion">
            <summary>Sets the shim of BackupRestoreBase.GetDevicesScript(StringBuilder query, BackupDeviceList devices, ServerVersion targetVersion)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.InformationAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.InformationRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.IsStringValidString">
            <summary>Sets the shim of BackupRestoreBase.IsStringValid(String s)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.MaxTransferSizeGet">
            <summary>Sets the shim of BackupRestoreBase.get_MaxTransferSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.MaxTransferSizeSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_MaxTransferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.MediaNameGet">
            <summary>Sets the shim of BackupRestoreBase.get_MediaName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.MediaNameSetString">
            <summary>Sets the shim of BackupRestoreBase.set_MediaName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NextMediaAddServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NextMediaRemoveServerMessageEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NoRecoveryGet">
            <summary>Sets the shim of BackupRestoreBase.get_NoRecovery()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NoRecoverySetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_NoRecovery(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NoRewindGet">
            <summary>Sets the shim of BackupRestoreBase.get_NoRewind()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.NoRewindSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_NoRewind(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of BackupRestoreBase.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.PercentCompleteAddPercentCompleteEventHandler">
            <summary>Sets the shim of BackupRestoreBase.add_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.PercentCompleteNotificationGet">
            <summary>Sets the shim of BackupRestoreBase.get_PercentCompleteNotification()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.PercentCompleteNotificationSetInt32">
            <summary>Sets the shim of BackupRestoreBase.set_PercentCompleteNotification(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.PercentCompleteRemovePercentCompleteEventHandler">
            <summary>Sets the shim of BackupRestoreBase.remove_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.ResetServer">
            <summary>Sets the shim of BackupRestoreBase.ResetServer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.RestartGet">
            <summary>Sets the shim of BackupRestoreBase.get_Restart()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.RestartSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_Restart(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.SetMediaPasswordSecureString">
            <summary>Sets the shim of BackupRestoreBase.SetMediaPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.SetMediaPasswordString">
            <summary>Sets the shim of BackupRestoreBase.SetMediaPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.SetPasswordSecureString">
            <summary>Sets the shim of BackupRestoreBase.SetPassword(SecureString value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.SetPasswordString">
            <summary>Sets the shim of BackupRestoreBase.SetPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.SetServerServer">
            <summary>Sets the shim of BackupRestoreBase.SetServer(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.UnloadTapeAfterGet">
            <summary>Sets the shim of BackupRestoreBase.get_UnloadTapeAfter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.UnloadTapeAfterSetBoolean">
            <summary>Sets the shim of BackupRestoreBase.set_UnloadTapeAfter(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimBackupRestoreBase.AllInstances.Wait">
            <summary>Sets the shim of BackupRestoreBase.Wait()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.DataTransferBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.#ctor(Microsoft.SqlServer.Management.Smo.DataTransferBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.Constructor">
            <summary>Sets the shim of DataTransferBase.DataTransferBase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.ConstructorDatabase">
            <summary>Sets the shim of DataTransferBase.DataTransferBase(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.GetModelDatabasePrimaryFileSizeServer">
            <summary>Sets the shim of DataTransferBase.GetModelDatabasePrimaryFileSize(Server destServer)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.LogTransferDumpsGet">
            <summary>Sets the shim of DataTransferBase.get_LogTransferDumps()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.LogTransferDumpsSetBoolean">
            <summary>Sets the shim of DataTransferBase.set_LogTransferDumps(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.ProcessObjectListUrnCollection">
            <summary>Sets the shim of DataTransferBase.ProcessObjectList(UrnCollection urnList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.ResetDatabaseForDestinationScriptingNullableOfDoubleDictionaryOfStringStringDictionaryOfStringStringDictionaryOfStringDouble">
            <summary>Sets the shim of DataTransferBase.ResetDatabaseForDestinationScripting(Nullable`1&lt;Double&gt; modelSize, Dictionary`2&lt;String,String&gt; strAryOldDbFileNames, Dictionary`2&lt;String,String&gt; strAryOldLogFileNames, Dictionary`2&lt;String,Double&gt; oldFileSizes)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.SetTargetServerInfoAndGetModelSize">
            <summary>Sets the shim of DataTransferBase.SetTargetServerInfoAndGetModelSize()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.GetModelDatabasePrimaryFileSizeServer">
            <summary>Sets the shim of DataTransferBase.GetModelDatabasePrimaryFileSize(Server destServer)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.LogTransferDumpsGet">
            <summary>Sets the shim of DataTransferBase.get_LogTransferDumps()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.LogTransferDumpsSetBoolean">
            <summary>Sets the shim of DataTransferBase.set_LogTransferDumps(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.ProcessObjectListUrnCollection">
            <summary>Sets the shim of DataTransferBase.ProcessObjectList(UrnCollection urnList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.ResetDatabaseForDestinationScriptingNullableOfDoubleDictionaryOfStringStringDictionaryOfStringStringDictionaryOfStringDouble">
            <summary>Sets the shim of DataTransferBase.ResetDatabaseForDestinationScripting(Nullable`1&lt;Double&gt; modelSize, Dictionary`2&lt;String,String&gt; strAryOldDbFileNames, Dictionary`2&lt;String,String&gt; strAryOldLogFileNames, Dictionary`2&lt;String,Double&gt; oldFileSizes)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDataTransferBase.AllInstances.SetTargetServerInfoAndGetModelSize">
            <summary>Sets the shim of DataTransferBase.SetTargetServerInfoAndGetModelSize()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.DatabaseRestorePlanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BackupMediaListGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupMediaList()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BackupSetsGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupSets()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BackupTailLogGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupTailLog()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.BackupTailLogSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_BackupTailLog(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ConstructorServer">
            <summary>Sets the shim of DatabaseRestorePlanner.DatabaseRestorePlanner(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ConstructorServerString">
            <summary>Sets the shim of DatabaseRestorePlanner.DatabaseRestorePlanner(Server server, String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ConstructorServerStringDateTimeString">
            <summary>Sets the shim of DatabaseRestorePlanner.DatabaseRestorePlanner(Server server, String databaseName, DateTime pointInTime, String tailLogBackupFile)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.CreateRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.CreateRestorePlan()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.CreateRestorePlanRestoreOptions">
            <summary>Sets the shim of DatabaseRestorePlanner.CreateRestorePlan(RestoreOptions ro)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.DatabaseNameGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_DatabaseName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.DatabaseNameSetString">
            <summary>Sets the shim of DatabaseRestorePlanner.set_DatabaseName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.GetBackupDeviceReadErrors">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupDeviceReadErrors()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.GetBackupSetFromDevices">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupSetFromDevices()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.GetBackupSetFromMSDB">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupSetFromMSDB()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.GetLastRestoreDateTime">
            <summary>Sets the shim of DatabaseRestorePlanner.GetLastRestoreDateTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.GetMediaSetGuidBackupDeviceItem">
            <summary>Sets the shim of DatabaseRestorePlanner.GetMediaSetGuid(BackupDeviceItem bkDeviceItem)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.IsTailLogBackupPossibleString">
            <summary>Sets the shim of DatabaseRestorePlanner.IsTailLogBackupPossible(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.IsTailLogBackupWithNoRecoveryPossibleString">
            <summary>Sets the shim of DatabaseRestorePlanner.IsTailLogBackupWithNoRecoveryPossible(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.LogStartTimeBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.LogStartTime(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ReadHeaderFromMediaGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_ReadHeaderFromMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ReadHeaderFromMediaSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_ReadHeaderFromMedia(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.RefreshBackupSets">
            <summary>Sets the shim of DatabaseRestorePlanner.RefreshBackupSets()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.RestoreToLastBackupGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_RestoreToLastBackup()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.RestoreToLastBackupSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_RestoreToLastBackup(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.RestoreToPointInTimeGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_RestoreToPointInTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.RestoreToPointInTimeSetDateTime">
            <summary>Sets the shim of DatabaseRestorePlanner.set_RestoreToPointInTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.SelectBackupSetsForPlanRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.SelectBackupSetsForPlan(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ServerGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.ServerSetServer">
            <summary>Sets the shim of DatabaseRestorePlanner.set_Server(Server value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TailLogBackupFileGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_TailLogBackupFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TailLogBackupFileSetString">
            <summary>Sets the shim of DatabaseRestorePlanner.set_TailLogBackupFile(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TailLogStartTime">
            <summary>Sets the shim of DatabaseRestorePlanner.TailLogStartTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TailLogWithNoRecoveryGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_TailLogWithNoRecovery()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TailLogWithNoRecoverySetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_TailLogWithNoRecovery(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TakeTailLogBackupRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.TakeTailLogBackup(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.TakeTailLogRestoreRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.TakeTailLogRestore(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__58BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__58(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__59BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__59(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__5aBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__5a(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__5cBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__5c(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__5dBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__5d(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._LogStartTimeb__5eBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;LogStartTime&gt;b__5e(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__2cBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__2c(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__2dBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__2d(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__2eBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__2e(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__2fBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__2f(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__30BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__30(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__31BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__31(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__32BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__32(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__33BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__33(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__34BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__34(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__35BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__35(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__36BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__36(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__37BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__37(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__38BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__38(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__39BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__39(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__3aBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__3a(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__3bBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__3b(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__3dBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__3d(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__3eBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__3e(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._SelectBackupSetsForPlanb__3fBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__3f(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._TailLogStartTimeb__6aBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;TailLogStartTime&gt;b__6a(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._TailLogStartTimeb__6bBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;TailLogStartTime&gt;b__6b(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._TailLogStartTimeb__6dBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;TailLogStartTime&gt;b__6d(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._TailLogStartTimeb__6eBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;TailLogStartTime&gt;b__6e(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__0BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__0(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__10BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__10(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__11BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__11(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__12BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__12(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__13BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__13(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__14BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__14(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__1BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__1(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__2BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__2(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__3BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__3(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__4BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__4(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__5BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__5(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__7BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__7(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__8BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__8(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__aBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__a(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__bBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__b(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__dBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__d(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner._createShilohPlanb__eBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__e(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.backupMediaObjectListListOfBackupDeviceItem">
            <summary>Sets the shim of DatabaseRestorePlanner.backupMediaObjectList(List`1&lt;BackupDeviceItem&gt; list)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.createShilohPlanBackupSetCollection">
            <summary>Sets the shim of DatabaseRestorePlanner.createShilohPlan(BackupSetCollection backupsets)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.BackupMediaListGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupMediaList()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.BackupSetsGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupSets()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.BackupTailLogGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_BackupTailLog()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.BackupTailLogSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_BackupTailLog(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.CreateRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.CreateRestorePlan()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.CreateRestorePlanRestoreOptions">
            <summary>Sets the shim of DatabaseRestorePlanner.CreateRestorePlan(RestoreOptions ro)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.DatabaseNameGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_DatabaseName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.DatabaseNameSetString">
            <summary>Sets the shim of DatabaseRestorePlanner.set_DatabaseName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.GetBackupDeviceReadErrors">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupDeviceReadErrors()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.GetBackupSetFromDevices">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupSetFromDevices()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.GetBackupSetFromMSDB">
            <summary>Sets the shim of DatabaseRestorePlanner.GetBackupSetFromMSDB()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.GetLastRestoreDateTime">
            <summary>Sets the shim of DatabaseRestorePlanner.GetLastRestoreDateTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.GetMediaSetGuidBackupDeviceItem">
            <summary>Sets the shim of DatabaseRestorePlanner.GetMediaSetGuid(BackupDeviceItem bkDeviceItem)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.IsTailLogBackupPossibleString">
            <summary>Sets the shim of DatabaseRestorePlanner.IsTailLogBackupPossible(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.IsTailLogBackupWithNoRecoveryPossibleString">
            <summary>Sets the shim of DatabaseRestorePlanner.IsTailLogBackupWithNoRecoveryPossible(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.LogStartTimeBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.LogStartTime(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.ReadHeaderFromMediaGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_ReadHeaderFromMedia()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.ReadHeaderFromMediaSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_ReadHeaderFromMedia(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.RefreshBackupSets">
            <summary>Sets the shim of DatabaseRestorePlanner.RefreshBackupSets()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.RestoreToLastBackupGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_RestoreToLastBackup()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.RestoreToLastBackupSetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_RestoreToLastBackup(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.RestoreToPointInTimeGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_RestoreToPointInTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.RestoreToPointInTimeSetDateTime">
            <summary>Sets the shim of DatabaseRestorePlanner.set_RestoreToPointInTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.SelectBackupSetsForPlanRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.SelectBackupSetsForPlan(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.ServerGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.ServerSetServer">
            <summary>Sets the shim of DatabaseRestorePlanner.set_Server(Server value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TailLogBackupFileGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_TailLogBackupFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TailLogBackupFileSetString">
            <summary>Sets the shim of DatabaseRestorePlanner.set_TailLogBackupFile(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TailLogStartTime">
            <summary>Sets the shim of DatabaseRestorePlanner.TailLogStartTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TailLogWithNoRecoveryGet">
            <summary>Sets the shim of DatabaseRestorePlanner.get_TailLogWithNoRecovery()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TailLogWithNoRecoverySetBoolean">
            <summary>Sets the shim of DatabaseRestorePlanner.set_TailLogWithNoRecovery(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TakeTailLogBackupRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.TakeTailLogBackup(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.TakeTailLogRestoreRestorePlan">
            <summary>Sets the shim of DatabaseRestorePlanner.TakeTailLogRestore(RestorePlan plan)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances._SelectBackupSetsForPlanb__2cBackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__2c(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances._SelectBackupSetsForPlanb__30BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__30(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances._SelectBackupSetsForPlanb__38BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;SelectBackupSetsForPlan&gt;b__38(BackupSet b)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances._createShilohPlanb__12BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__12(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances._createShilohPlanb__3BackupSet">
            <summary>Sets the shim of DatabaseRestorePlanner.&lt;createShilohPlan&gt;b__3(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.backupMediaObjectListListOfBackupDeviceItem">
            <summary>Sets the shim of DatabaseRestorePlanner.backupMediaObjectList(List`1&lt;BackupDeviceItem&gt; list)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimDatabaseRestorePlanner.AllInstances.createShilohPlanBackupSetCollection">
            <summary>Sets the shim of DatabaseRestorePlanner.createShilohPlan(BackupSetCollection backupsets)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.InvalidRestorePlanException</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.#ctor(Microsoft.SqlServer.Management.Smo.InvalidRestorePlanException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.ConstructorObjectString">
            <summary>Sets the shim of InvalidRestorePlanException.InvalidRestorePlanException(Object source, String reason)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimInvalidRestorePlanException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.#ctor(Microsoft.SqlServer.Management.Smo.NextRestoreEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BackupSetDescriptionGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_BackupSetDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BackupSetDescriptionSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_BackupSetDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BackupSetNameGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_BackupSetName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.BackupSetNameSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_BackupSetName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.ConstructorStringStringStringInt32">
            <summary>Sets the shim of NextRestoreEventArgs.NextRestoreEventArgs(String backupSetName, String backupSetDescription, String deviceName, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.ContinueGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_Continue()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.ContinueSetBoolean">
            <summary>Sets the shim of NextRestoreEventArgs.set_Continue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.CountGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_Count()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.CountSetInt32">
            <summary>Sets the shim of NextRestoreEventArgs.set_Count(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.DevicesNameGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_DevicesName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.DevicesNameSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_DevicesName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.BackupSetDescriptionGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_BackupSetDescription()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.BackupSetDescriptionSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_BackupSetDescription(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.BackupSetNameGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_BackupSetName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.BackupSetNameSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_BackupSetName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.ContinueGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_Continue()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.ContinueSetBoolean">
            <summary>Sets the shim of NextRestoreEventArgs.set_Continue(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.CountGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_Count()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.CountSetInt32">
            <summary>Sets the shim of NextRestoreEventArgs.set_Count(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.DevicesNameGet">
            <summary>Sets the shim of NextRestoreEventArgs.get_DevicesName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimNextRestoreEventArgs.AllInstances.DevicesNameSetString">
            <summary>Sets the shim of NextRestoreEventArgs.set_DevicesName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.PageRestorePlanner</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.#ctor(Microsoft.SqlServer.Management.Smo.PageRestorePlanner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AddTailLogBackupRestoreRestorePlanBackupSetCollection">
            <summary>Sets the shim of PageRestorePlanner.AddTailLogBackupRestore(RestorePlan plan, BackupSetCollection backupSets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.CheckDuplicateSuspectPages">
            <summary>Sets the shim of PageRestorePlanner.CheckDuplicateSuspectPages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.CheckPageRestorePossible">
            <summary>Sets the shim of PageRestorePlanner.CheckPageRestorePossible()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.ConstructorDatabase">
            <summary>Sets the shim of PageRestorePlanner.PageRestorePlanner(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.ConstructorDatabaseString">
            <summary>Sets the shim of PageRestorePlanner.PageRestorePlanner(Database database, String tailLogBackupFileName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.CreatePageRestorePlanBackupSetCollection">
            <summary>Sets the shim of PageRestorePlanner.CreatePageRestorePlan(BackupSetCollection backupsets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.CreateRestorePlan">
            <summary>Sets the shim of PageRestorePlanner.CreateRestorePlan()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.DatabaseGet">
            <summary>Sets the shim of PageRestorePlanner.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.DatabaseSetDatabase">
            <summary>Sets the shim of PageRestorePlanner.set_Database(Database value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.GetSuspectPagesDatabase">
            <summary>Sets the shim of PageRestorePlanner.GetSuspectPages(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.ServerGet">
            <summary>Sets the shim of PageRestorePlanner.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.SuspectPagesGet">
            <summary>Sets the shim of PageRestorePlanner.get_SuspectPages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.TailLogBackupFileGet">
            <summary>Sets the shim of PageRestorePlanner.get_TailLogBackupFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.TailLogBackupFileSetString">
            <summary>Sets the shim of PageRestorePlanner.set_TailLogBackupFile(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner._CreatePageRestorePlanb__0BackupSet">
            <summary>Sets the shim of PageRestorePlanner.&lt;CreatePageRestorePlan&gt;b__0(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner._CreatePageRestorePlanb__1BackupSet">
            <summary>Sets the shim of PageRestorePlanner.&lt;CreatePageRestorePlan&gt;b__1(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner._CreatePageRestorePlanb__2BackupSet">
            <summary>Sets the shim of PageRestorePlanner.&lt;CreatePageRestorePlan&gt;b__2(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner._CreatePageRestorePlanb__4BackupSet">
            <summary>Sets the shim of PageRestorePlanner.&lt;CreatePageRestorePlan&gt;b__4(BackupSet bkset)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner._CreatePageRestorePlanb__5BackupSet">
            <summary>Sets the shim of PageRestorePlanner.&lt;CreatePageRestorePlan&gt;b__5(BackupSet bkset)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.AddTailLogBackupRestoreRestorePlanBackupSetCollection">
            <summary>Sets the shim of PageRestorePlanner.AddTailLogBackupRestore(RestorePlan plan, BackupSetCollection backupSets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.CheckDuplicateSuspectPages">
            <summary>Sets the shim of PageRestorePlanner.CheckDuplicateSuspectPages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.CheckPageRestorePossible">
            <summary>Sets the shim of PageRestorePlanner.CheckPageRestorePossible()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.CreatePageRestorePlanBackupSetCollection">
            <summary>Sets the shim of PageRestorePlanner.CreatePageRestorePlan(BackupSetCollection backupsets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.CreateRestorePlan">
            <summary>Sets the shim of PageRestorePlanner.CreateRestorePlan()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.DatabaseGet">
            <summary>Sets the shim of PageRestorePlanner.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.DatabaseSetDatabase">
            <summary>Sets the shim of PageRestorePlanner.set_Database(Database value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.ServerGet">
            <summary>Sets the shim of PageRestorePlanner.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.SuspectPagesGet">
            <summary>Sets the shim of PageRestorePlanner.get_SuspectPages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.TailLogBackupFileGet">
            <summary>Sets the shim of PageRestorePlanner.get_TailLogBackupFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPageRestorePlanner.AllInstances.TailLogBackupFileSetString">
            <summary>Sets the shim of PageRestorePlanner.set_TailLogBackupFile(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.#ctor(Microsoft.SqlServer.Management.Smo.PercentCompleteEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.ConstructorSqlError">
            <summary>Sets the shim of PercentCompleteEventArgs.PercentCompleteEventArgs(SqlError error)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.ConstructorSqlErrorString">
            <summary>Sets the shim of PercentCompleteEventArgs.PercentCompleteEventArgs(SqlError error, String message)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.MessageGet">
            <summary>Sets the shim of PercentCompleteEventArgs.get_Message()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.PercentGet">
            <summary>Sets the shim of PercentCompleteEventArgs.get_Percent()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.AllInstances.MessageGet">
            <summary>Sets the shim of PercentCompleteEventArgs.get_Message()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimPercentCompleteEventArgs.AllInstances.PercentGet">
            <summary>Sets the shim of PercentCompleteEventArgs.get_Percent()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.RelocateFile</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.#ctor(Microsoft.SqlServer.Management.Smo.RelocateFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.Constructor">
            <summary>Sets the shim of RelocateFile.RelocateFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.ConstructorStringString">
            <summary>Sets the shim of RelocateFile.RelocateFile(String logicalFileName, String physicalFileName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.LogicalFileNameGet">
            <summary>Sets the shim of RelocateFile.get_LogicalFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.LogicalFileNameSetString">
            <summary>Sets the shim of RelocateFile.set_LogicalFileName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.PhysicalFileNameGet">
            <summary>Sets the shim of RelocateFile.get_PhysicalFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.PhysicalFileNameSetString">
            <summary>Sets the shim of RelocateFile.set_PhysicalFileName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.AllInstances.LogicalFileNameGet">
            <summary>Sets the shim of RelocateFile.get_LogicalFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.AllInstances.LogicalFileNameSetString">
            <summary>Sets the shim of RelocateFile.set_LogicalFileName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.AllInstances.PhysicalFileNameGet">
            <summary>Sets the shim of RelocateFile.get_PhysicalFileName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRelocateFile.AllInstances.PhysicalFileNameSetString">
            <summary>Sets the shim of RelocateFile.set_PhysicalFileName(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.Restore</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.#ctor(Microsoft.SqlServer.Management.Smo.Restore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ActionGet">
            <summary>Sets the shim of Restore.get_Action()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ActionSetRestoreActionType">
            <summary>Sets the shim of Restore.set_Action(RestoreActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ClearSuspectPageTableAfterRestoreGet">
            <summary>Sets the shim of Restore.get_ClearSuspectPageTableAfterRestore()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ClearSuspectPageTableAfterRestoreSetBoolean">
            <summary>Sets the shim of Restore.set_ClearSuspectPageTableAfterRestore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ClearSuspectPageTableServer">
            <summary>Sets the shim of Restore.ClearSuspectPageTable(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.Constructor">
            <summary>Sets the shim of Restore.Restore()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ConstructorStringBackupSet">
            <summary>Sets the shim of Restore.Restore(String DestinationDatabaseName, BackupSet backupSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.DatabasePagesGet">
            <summary>Sets the shim of Restore.get_DatabasePages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.FileNumberGet">
            <summary>Sets the shim of Restore.get_FileNumber()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.FileNumberSetInt32">
            <summary>Sets the shim of Restore.set_FileNumber(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.GetBackupTypeNameSqlVerifyAction">
            <summary>Sets the shim of Restore.GetBackupTypeName(SqlVerifyAction sqlVerifyAction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.GetDbFileFilterStringBuilder">
            <summary>Sets the shim of Restore.GetDbFileFilter(StringBuilder selectStmt)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.KeepReplicationGet">
            <summary>Sets the shim of Restore.get_KeepReplication()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.KeepReplicationSetBoolean">
            <summary>Sets the shim of Restore.set_KeepReplication(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.OffsetGet">
            <summary>Sets the shim of Restore.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.OffsetSetInt64Array">
            <summary>Sets the shim of Restore.set_Offset(Int64[] value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.OnBeforeSqlVerifyObjectEventArgs">
            <summary>Sets the shim of Restore.OnBeforeSqlVerify(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of Restore.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.PartialGet">
            <summary>Sets the shim of Restore.get_Partial()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.PartialSetBoolean">
            <summary>Sets the shim of Restore.set_Partial(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReadBackupHeaderServer">
            <summary>Sets the shim of Restore.ReadBackupHeader(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReadFileListServer">
            <summary>Sets the shim of Restore.ReadFileList(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReadMediaHeaderServer">
            <summary>Sets the shim of Restore.ReadMediaHeader(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReadSuspectPageTableServer">
            <summary>Sets the shim of Restore.ReadSuspectPageTable(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.RelocateFilesGet">
            <summary>Sets the shim of Restore.get_RelocateFiles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.RemoveLastCommaStringBuilder">
            <summary>Sets the shim of Restore.RemoveLastComma(StringBuilder sb)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReplaceDatabaseGet">
            <summary>Sets the shim of Restore.get_ReplaceDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ReplaceDatabaseSetBoolean">
            <summary>Sets the shim of Restore.set_ReplaceDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.RestrictedUserGet">
            <summary>Sets the shim of Restore.get_RestrictedUser()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.RestrictedUserSetBoolean">
            <summary>Sets the shim of Restore.set_RestrictedUser(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ScriptServer">
            <summary>Sets the shim of Restore.Script(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ScriptVerifyServerBoolean">
            <summary>Sets the shim of Restore.ScriptVerify(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ScriptVerifyServerBooleanBoolean">
            <summary>Sets the shim of Restore.ScriptVerify(Server srv, Boolean loadHistory, Boolean ignoreFileNumber)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlRestoreAsyncServer">
            <summary>Sets the shim of Restore.SqlRestoreAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlRestoreServer">
            <summary>Sets the shim of Restore.SqlRestore(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyAsyncServer">
            <summary>Sets the shim of Restore.SqlVerifyAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyAsyncServerBoolean">
            <summary>Sets the shim of Restore.SqlVerifyAsync(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyLatestServer">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyLatestServerSqlVerifyAction">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, SqlVerifyAction sqlVerifyAction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyLatestServerSqlVerifyActionStringOut">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, SqlVerifyAction sqlVerifyAction, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyLatestServerStringOut">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyServer">
            <summary>Sets the shim of Restore.SqlVerify(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyServerBoolean">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyServerBooleanStringOut">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, Boolean loadHistory, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyServerStringOut">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.SqlVerifyWorkerServerStringCollectionStringOut">
            <summary>Sets the shim of Restore.SqlVerifyWorker(Server srv, StringCollection queries, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StandbyFileGet">
            <summary>Sets the shim of Restore.get_StandbyFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StandbyFileSetString">
            <summary>Sets the shim of Restore.set_StandbyFile(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopAtMarkAfterDateGet">
            <summary>Sets the shim of Restore.get_StopAtMarkAfterDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopAtMarkAfterDateSetString">
            <summary>Sets the shim of Restore.set_StopAtMarkAfterDate(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopAtMarkNameGet">
            <summary>Sets the shim of Restore.get_StopAtMarkName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopAtMarkNameSetString">
            <summary>Sets the shim of Restore.set_StopAtMarkName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopBeforeMarkAfterDateGet">
            <summary>Sets the shim of Restore.get_StopBeforeMarkAfterDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopBeforeMarkAfterDateSetString">
            <summary>Sets the shim of Restore.set_StopBeforeMarkAfterDate(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopBeforeMarkNameGet">
            <summary>Sets the shim of Restore.get_StopBeforeMarkName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.StopBeforeMarkNameSetString">
            <summary>Sets the shim of Restore.set_StopBeforeMarkName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ToPointInTimeGet">
            <summary>Sets the shim of Restore.get_ToPointInTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.ToPointInTimeSetString">
            <summary>Sets the shim of Restore.set_ToPointInTime(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore._ctorb__1BackupMedia">
            <summary>Sets the shim of Restore.&lt;.ctor&gt;b__1(BackupMedia bkMedia)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ActionGet">
            <summary>Sets the shim of Restore.get_Action()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ActionSetRestoreActionType">
            <summary>Sets the shim of Restore.set_Action(RestoreActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ClearSuspectPageTableAfterRestoreGet">
            <summary>Sets the shim of Restore.get_ClearSuspectPageTableAfterRestore()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ClearSuspectPageTableAfterRestoreSetBoolean">
            <summary>Sets the shim of Restore.set_ClearSuspectPageTableAfterRestore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ClearSuspectPageTableServer">
            <summary>Sets the shim of Restore.ClearSuspectPageTable(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.DatabasePagesGet">
            <summary>Sets the shim of Restore.get_DatabasePages()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.FileNumberGet">
            <summary>Sets the shim of Restore.get_FileNumber()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.FileNumberSetInt32">
            <summary>Sets the shim of Restore.set_FileNumber(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.GetBackupTypeNameSqlVerifyAction">
            <summary>Sets the shim of Restore.GetBackupTypeName(SqlVerifyAction sqlVerifyAction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.GetDbFileFilterStringBuilder">
            <summary>Sets the shim of Restore.GetDbFileFilter(StringBuilder selectStmt)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.KeepReplicationGet">
            <summary>Sets the shim of Restore.get_KeepReplication()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.KeepReplicationSetBoolean">
            <summary>Sets the shim of Restore.set_KeepReplication(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.OffsetGet">
            <summary>Sets the shim of Restore.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.OffsetSetInt64Array">
            <summary>Sets the shim of Restore.set_Offset(Int64[] value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.OnBeforeSqlVerifyObjectEventArgs">
            <summary>Sets the shim of Restore.OnBeforeSqlVerify(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of Restore.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.PartialGet">
            <summary>Sets the shim of Restore.get_Partial()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.PartialSetBoolean">
            <summary>Sets the shim of Restore.set_Partial(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReadBackupHeaderServer">
            <summary>Sets the shim of Restore.ReadBackupHeader(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReadFileListServer">
            <summary>Sets the shim of Restore.ReadFileList(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReadMediaHeaderServer">
            <summary>Sets the shim of Restore.ReadMediaHeader(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReadSuspectPageTableServer">
            <summary>Sets the shim of Restore.ReadSuspectPageTable(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.RelocateFilesGet">
            <summary>Sets the shim of Restore.get_RelocateFiles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.RemoveLastCommaStringBuilder">
            <summary>Sets the shim of Restore.RemoveLastComma(StringBuilder sb)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReplaceDatabaseGet">
            <summary>Sets the shim of Restore.get_ReplaceDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ReplaceDatabaseSetBoolean">
            <summary>Sets the shim of Restore.set_ReplaceDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.RestrictedUserGet">
            <summary>Sets the shim of Restore.get_RestrictedUser()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.RestrictedUserSetBoolean">
            <summary>Sets the shim of Restore.set_RestrictedUser(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ScriptServer">
            <summary>Sets the shim of Restore.Script(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ScriptVerifyServerBoolean">
            <summary>Sets the shim of Restore.ScriptVerify(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ScriptVerifyServerBooleanBoolean">
            <summary>Sets the shim of Restore.ScriptVerify(Server srv, Boolean loadHistory, Boolean ignoreFileNumber)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlRestoreAsyncServer">
            <summary>Sets the shim of Restore.SqlRestoreAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlRestoreServer">
            <summary>Sets the shim of Restore.SqlRestore(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyAsyncServer">
            <summary>Sets the shim of Restore.SqlVerifyAsync(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyAsyncServerBoolean">
            <summary>Sets the shim of Restore.SqlVerifyAsync(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyLatestServer">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyLatestServerSqlVerifyAction">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, SqlVerifyAction sqlVerifyAction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyLatestServerSqlVerifyActionStringOut">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, SqlVerifyAction sqlVerifyAction, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyLatestServerStringOut">
            <summary>Sets the shim of Restore.SqlVerifyLatest(Server srv, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyServer">
            <summary>Sets the shim of Restore.SqlVerify(Server srv)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyServerBoolean">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, Boolean loadHistory)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyServerBooleanStringOut">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, Boolean loadHistory, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyServerStringOut">
            <summary>Sets the shim of Restore.SqlVerify(Server srv, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.SqlVerifyWorkerServerStringCollectionStringOut">
            <summary>Sets the shim of Restore.SqlVerifyWorker(Server srv, StringCollection queries, String&amp; errorMessage)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StandbyFileGet">
            <summary>Sets the shim of Restore.get_StandbyFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StandbyFileSetString">
            <summary>Sets the shim of Restore.set_StandbyFile(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopAtMarkAfterDateGet">
            <summary>Sets the shim of Restore.get_StopAtMarkAfterDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopAtMarkAfterDateSetString">
            <summary>Sets the shim of Restore.set_StopAtMarkAfterDate(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopAtMarkNameGet">
            <summary>Sets the shim of Restore.get_StopAtMarkName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopAtMarkNameSetString">
            <summary>Sets the shim of Restore.set_StopAtMarkName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopBeforeMarkAfterDateGet">
            <summary>Sets the shim of Restore.get_StopBeforeMarkAfterDate()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopBeforeMarkAfterDateSetString">
            <summary>Sets the shim of Restore.set_StopBeforeMarkAfterDate(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopBeforeMarkNameGet">
            <summary>Sets the shim of Restore.get_StopBeforeMarkName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.StopBeforeMarkNameSetString">
            <summary>Sets the shim of Restore.set_StopBeforeMarkName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ToPointInTimeGet">
            <summary>Sets the shim of Restore.get_ToPointInTime()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestore.AllInstances.ToPointInTimeSetString">
            <summary>Sets the shim of Restore.set_ToPointInTime(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.RestoreOptions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.#ctor(Microsoft.SqlServer.Management.Smo.RestoreOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BlocksizeGet">
            <summary>Sets the shim of RestoreOptions.get_Blocksize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BlocksizeSetInt32">
            <summary>Sets the shim of RestoreOptions.set_Blocksize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BufferCountGet">
            <summary>Sets the shim of RestoreOptions.get_BufferCount()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.BufferCountSetInt32">
            <summary>Sets the shim of RestoreOptions.set_BufferCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ClearSuspectPageTableAfterRestoreGet">
            <summary>Sets the shim of RestoreOptions.get_ClearSuspectPageTableAfterRestore()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ClearSuspectPageTableAfterRestoreSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ClearSuspectPageTableAfterRestore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.Constructor">
            <summary>Sets the shim of RestoreOptions.RestoreOptions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ContinueAfterErrorGet">
            <summary>Sets the shim of RestoreOptions.get_ContinueAfterError()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ContinueAfterErrorSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ContinueAfterError(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.KeepReplicationGet">
            <summary>Sets the shim of RestoreOptions.get_KeepReplication()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.KeepReplicationSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_KeepReplication(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.MaxTransferSizeGet">
            <summary>Sets the shim of RestoreOptions.get_MaxTransferSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.MaxTransferSizeSetInt32">
            <summary>Sets the shim of RestoreOptions.set_MaxTransferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.PercentCompleteNotificationGet">
            <summary>Sets the shim of RestoreOptions.get_PercentCompleteNotification()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.PercentCompleteNotificationSetInt32">
            <summary>Sets the shim of RestoreOptions.set_PercentCompleteNotification(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.RecoveryStateGet">
            <summary>Sets the shim of RestoreOptions.get_RecoveryState()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.RecoveryStateSetDatabaseRecoveryState">
            <summary>Sets the shim of RestoreOptions.set_RecoveryState(DatabaseRecoveryState value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ReplaceDatabaseGet">
            <summary>Sets the shim of RestoreOptions.get_ReplaceDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.ReplaceDatabaseSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ReplaceDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.SetRestrictedUserGet">
            <summary>Sets the shim of RestoreOptions.get_SetRestrictedUser()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.SetRestrictedUserSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_SetRestrictedUser(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.StandByFileGet">
            <summary>Sets the shim of RestoreOptions.get_StandByFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.StandByFileSetString">
            <summary>Sets the shim of RestoreOptions.set_StandByFile(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.BlocksizeGet">
            <summary>Sets the shim of RestoreOptions.get_Blocksize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.BlocksizeSetInt32">
            <summary>Sets the shim of RestoreOptions.set_Blocksize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.BufferCountGet">
            <summary>Sets the shim of RestoreOptions.get_BufferCount()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.BufferCountSetInt32">
            <summary>Sets the shim of RestoreOptions.set_BufferCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ClearSuspectPageTableAfterRestoreGet">
            <summary>Sets the shim of RestoreOptions.get_ClearSuspectPageTableAfterRestore()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ClearSuspectPageTableAfterRestoreSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ClearSuspectPageTableAfterRestore(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ContinueAfterErrorGet">
            <summary>Sets the shim of RestoreOptions.get_ContinueAfterError()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ContinueAfterErrorSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ContinueAfterError(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.KeepReplicationGet">
            <summary>Sets the shim of RestoreOptions.get_KeepReplication()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.KeepReplicationSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_KeepReplication(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.MaxTransferSizeGet">
            <summary>Sets the shim of RestoreOptions.get_MaxTransferSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.MaxTransferSizeSetInt32">
            <summary>Sets the shim of RestoreOptions.set_MaxTransferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.PercentCompleteNotificationGet">
            <summary>Sets the shim of RestoreOptions.get_PercentCompleteNotification()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.PercentCompleteNotificationSetInt32">
            <summary>Sets the shim of RestoreOptions.set_PercentCompleteNotification(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.RecoveryStateGet">
            <summary>Sets the shim of RestoreOptions.get_RecoveryState()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.RecoveryStateSetDatabaseRecoveryState">
            <summary>Sets the shim of RestoreOptions.set_RecoveryState(DatabaseRecoveryState value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ReplaceDatabaseGet">
            <summary>Sets the shim of RestoreOptions.get_ReplaceDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.ReplaceDatabaseSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_ReplaceDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.SetRestrictedUserGet">
            <summary>Sets the shim of RestoreOptions.get_SetRestrictedUser()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.SetRestrictedUserSetBoolean">
            <summary>Sets the shim of RestoreOptions.set_SetRestrictedUser(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.StandByFileGet">
            <summary>Sets the shim of RestoreOptions.get_StandByFile()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestoreOptions.AllInstances.StandByFileSetString">
            <summary>Sets the shim of RestoreOptions.set_StandByFile(String value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.RestorePlan</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.RestorePlan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AddRestoreOperationBackupSet">
            <summary>Sets the shim of RestorePlan.AddRestoreOperation(BackupSet backupSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AddRestoreOperationListOfBackupSet">
            <summary>Sets the shim of RestorePlan.AddRestoreOperation(List`1&lt;BackupSet&gt; backupSets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AsyncStatusGet">
            <summary>Sets the shim of RestorePlan.get_AsyncStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CanDropExistingConnectionsString">
            <summary>Sets the shim of RestorePlan.CanDropExistingConnections(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CheckBackupSetsExistence">
            <summary>Sets the shim of RestorePlan.CheckBackupSetsExistence()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CloseExistingConnectionsGet">
            <summary>Sets the shim of RestorePlan.get_CloseExistingConnections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CloseExistingConnectionsSetBoolean">
            <summary>Sets the shim of RestorePlan.set_CloseExistingConnections(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CompleteAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.CompleteRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ConstructorDatabase">
            <summary>Sets the shim of RestorePlan.RestorePlan(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ConstructorServer">
            <summary>Sets the shim of RestorePlan.RestorePlan(Server server)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ConstructorServerString">
            <summary>Sets the shim of RestorePlan.RestorePlan(Server server, String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.DatabaseNameGet">
            <summary>Sets the shim of RestorePlan.get_DatabaseName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.DatabaseNameSetString">
            <summary>Sets the shim of RestorePlan.set_DatabaseName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.Execute">
            <summary>Sets the shim of RestorePlan.Execute()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ExecuteAsync">
            <summary>Sets the shim of RestorePlan.ExecuteAsync()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.InformationAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.InformationRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.NextMediaAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.NextMediaRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.NextRestoreAddNextRestoreEventHandler">
            <summary>Sets the shim of RestorePlan.add_NextRestore(NextRestoreEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.NextRestoreRemoveNextRestoreEventHandler">
            <summary>Sets the shim of RestorePlan.remove_NextRestore(NextRestoreEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of RestorePlan.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.PercentCompleteAddPercentCompleteEventHandler">
            <summary>Sets the shim of RestorePlan.add_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.PercentCompleteRemovePercentCompleteEventHandler">
            <summary>Sets the shim of RestorePlan.remove_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.RefreshOENodeString">
            <summary>Sets the shim of RestorePlan.RefreshOENode(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.RestoreActionGet">
            <summary>Sets the shim of RestorePlan.get_RestoreAction()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.RestoreActionSetRestoreActionType">
            <summary>Sets the shim of RestorePlan.set_RestoreAction(RestoreActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.RestoreOperationsGet">
            <summary>Sets the shim of RestorePlan.get_RestoreOperations()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.Script">
            <summary>Sets the shim of RestorePlan.Script()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ScriptPostRestoreStringCollectionNullableOfDatabaseUserAccess">
            <summary>Sets the shim of RestorePlan.ScriptPostRestore(StringCollection script, Nullable`1&lt;DatabaseUserAccess&gt; dbUserAccess)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ScriptPreRestoreStringCollection">
            <summary>Sets the shim of RestorePlan.ScriptPreRestore(StringCollection script)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ScriptRestoreStringCollection">
            <summary>Sets the shim of RestorePlan.ScriptRestore(StringCollection script)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ServerGet">
            <summary>Sets the shim of RestorePlan.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.ServerSetServer">
            <summary>Sets the shim of RestorePlan.set_Server(Server value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.SetRestoreOptionsRestoreOptions">
            <summary>Sets the shim of RestorePlan.SetRestoreOptions(RestoreOptions restoreOptions)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.TailLogBackupOperationGet">
            <summary>Sets the shim of RestorePlan.get_TailLogBackupOperation()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.TailLogBackupOperationSetBackup">
            <summary>Sets the shim of RestorePlan.set_TailLogBackupOperation(Backup value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.VerifyBoolean">
            <summary>Sets the shim of RestorePlan.Verify(Boolean checkBackupMediaIntegrity)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan._Verifyb__0Restore">
            <summary>Sets the shim of RestorePlan.&lt;Verify&gt;b__0(Restore restoreObj)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.AddRestoreOperationBackupSet">
            <summary>Sets the shim of RestorePlan.AddRestoreOperation(BackupSet backupSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.AddRestoreOperationListOfBackupSet">
            <summary>Sets the shim of RestorePlan.AddRestoreOperation(List`1&lt;BackupSet&gt; backupSets)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.AsyncStatusGet">
            <summary>Sets the shim of RestorePlan.get_AsyncStatus()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CanDropExistingConnectionsString">
            <summary>Sets the shim of RestorePlan.CanDropExistingConnections(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CheckBackupSetsExistence">
            <summary>Sets the shim of RestorePlan.CheckBackupSetsExistence()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CloseExistingConnectionsGet">
            <summary>Sets the shim of RestorePlan.get_CloseExistingConnections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CloseExistingConnectionsSetBoolean">
            <summary>Sets the shim of RestorePlan.set_CloseExistingConnections(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CompleteAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.CompleteRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_Complete(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.DatabaseNameGet">
            <summary>Sets the shim of RestorePlan.get_DatabaseName()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.DatabaseNameSetString">
            <summary>Sets the shim of RestorePlan.set_DatabaseName(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.Execute">
            <summary>Sets the shim of RestorePlan.Execute()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ExecuteAsync">
            <summary>Sets the shim of RestorePlan.ExecuteAsync()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.InformationAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.InformationRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_Information(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.NextMediaAddServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.add_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.NextMediaRemoveServerMessageEventHandler">
            <summary>Sets the shim of RestorePlan.remove_NextMedia(ServerMessageEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.NextRestoreAddNextRestoreEventHandler">
            <summary>Sets the shim of RestorePlan.add_NextRestore(NextRestoreEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.NextRestoreRemoveNextRestoreEventHandler">
            <summary>Sets the shim of RestorePlan.remove_NextRestore(NextRestoreEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.OnInfoMessageObjectServerMessageEventArgs">
            <summary>Sets the shim of RestorePlan.OnInfoMessage(Object sender, ServerMessageEventArgs e)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.PercentCompleteAddPercentCompleteEventHandler">
            <summary>Sets the shim of RestorePlan.add_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.PercentCompleteRemovePercentCompleteEventHandler">
            <summary>Sets the shim of RestorePlan.remove_PercentComplete(PercentCompleteEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.RefreshOENodeString">
            <summary>Sets the shim of RestorePlan.RefreshOENode(String databaseName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.RestoreActionGet">
            <summary>Sets the shim of RestorePlan.get_RestoreAction()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.RestoreActionSetRestoreActionType">
            <summary>Sets the shim of RestorePlan.set_RestoreAction(RestoreActionType value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.RestoreOperationsGet">
            <summary>Sets the shim of RestorePlan.get_RestoreOperations()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.Script">
            <summary>Sets the shim of RestorePlan.Script()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ScriptPostRestoreStringCollectionNullableOfDatabaseUserAccess">
            <summary>Sets the shim of RestorePlan.ScriptPostRestore(StringCollection script, Nullable`1&lt;DatabaseUserAccess&gt; dbUserAccess)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ScriptPreRestoreStringCollection">
            <summary>Sets the shim of RestorePlan.ScriptPreRestore(StringCollection script)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ScriptRestoreStringCollection">
            <summary>Sets the shim of RestorePlan.ScriptRestore(StringCollection script)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ServerGet">
            <summary>Sets the shim of RestorePlan.get_Server()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.ServerSetServer">
            <summary>Sets the shim of RestorePlan.set_Server(Server value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.SetRestoreOptionsRestoreOptions">
            <summary>Sets the shim of RestorePlan.SetRestoreOptions(RestoreOptions restoreOptions)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.TailLogBackupOperationGet">
            <summary>Sets the shim of RestorePlan.get_TailLogBackupOperation()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.TailLogBackupOperationSetBackup">
            <summary>Sets the shim of RestorePlan.set_TailLogBackupOperation(Backup value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimRestorePlan.AllInstances.VerifyBoolean">
            <summary>Sets the shim of RestorePlan.Verify(Boolean checkBackupMediaIntegrity)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.SuspectPage</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.#ctor(Microsoft.SqlServer.Management.Smo.SuspectPage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.Bind(System.IComparable{Microsoft.SqlServer.Management.Smo.SuspectPage})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.CompareToSuspectPage">
            <summary>Sets the shim of SuspectPage.CompareTo(SuspectPage other)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.ConstructorInt32Int64">
            <summary>Sets the shim of SuspectPage.SuspectPage(Int32 fileID, Int64 pageID)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.EqualsObject">
            <summary>Sets the shim of SuspectPage.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.FileIDGet">
            <summary>Sets the shim of SuspectPage.get_FileID()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.FileIDSetInt32">
            <summary>Sets the shim of SuspectPage.set_FileID(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.GetHashCode">
            <summary>Sets the shim of SuspectPage.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.PageIDGet">
            <summary>Sets the shim of SuspectPage.get_PageID()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.PageIDSetInt64">
            <summary>Sets the shim of SuspectPage.set_PageID(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.ToString">
            <summary>Sets the shim of SuspectPage.ToString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.Validate">
            <summary>Sets the shim of SuspectPage.Validate()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.CompareToSuspectPage">
            <summary>Sets the shim of SuspectPage.CompareTo(SuspectPage other)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.EqualsObject">
            <summary>Sets the shim of SuspectPage.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.FileIDGet">
            <summary>Sets the shim of SuspectPage.get_FileID()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.FileIDSetInt32">
            <summary>Sets the shim of SuspectPage.set_FileID(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.GetHashCode01">
            <summary>Sets the shim of SuspectPage.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.PageIDGet">
            <summary>Sets the shim of SuspectPage.get_PageID()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.PageIDSetInt64">
            <summary>Sets the shim of SuspectPage.set_PageID(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.ToString01">
            <summary>Sets the shim of SuspectPage.ToString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimSuspectPage.AllInstances.Validate">
            <summary>Sets the shim of SuspectPage.Validate()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.Transfer</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.#ctor(Microsoft.SqlServer.Management.Smo.Transfer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.Bind(Microsoft.SqlServer.Management.Common.ITransferMetadataProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetTempFileOf1StringStringStringRefFuncOfStringM0``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftSqlServerSmoExtendedDelegates.Ref2Func5{System.String,System.String,System.String,System.Func{System.String,``0},``0})">
            <summary>Sets the shim of Transfer.GetTempFile(String directory, String mask, String&amp; fileName, Func`2&lt;String,!!0&gt; createFile)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AddDependencyListOfUrnDictionaryOfUrnObjectDependency">
            <summary>Sets the shim of Transfer.AddDependency(List`1&lt;Urn&gt; objectsInOrder, Dictionary`2&lt;Urn,Object&gt; lookupTable, Dependency dependency)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BatchSizeGet">
            <summary>Sets the shim of Transfer.get_BatchSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BatchSizeSetInt32">
            <summary>Sets the shim of Transfer.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BreakCyclesDictionaryOfDependencyBooleanArray">
            <summary>Sets the shim of Transfer.BreakCycles(Dictionary`2&lt;Dependency,Boolean[]&gt; BrokenLinks)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BulkCopyTimeoutGet">
            <summary>Sets the shim of Transfer.get_BulkCopyTimeout()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.BulkCopyTimeoutSetInt32">
            <summary>Sets the shim of Transfer.set_BulkCopyTimeout(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.Constructor">
            <summary>Sets the shim of Transfer.Transfer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.ConstructorDatabase">
            <summary>Sets the shim of Transfer.Transfer(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.DataTransferEventAddDataTransferEventHandler">
            <summary>Sets the shim of Transfer.add_DataTransferEvent(DataTransferEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.DataTransferEventRemoveDataTransferEventHandler">
            <summary>Sets the shim of Transfer.remove_DataTransferEvent(DataTransferEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.DataTransferInformationEventString">
            <summary>Sets the shim of Transfer.DataTransferInformationEvent(String message)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.DataTransferProgressEventString">
            <summary>Sets the shim of Transfer.DataTransferProgressEvent(String statement)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.DumpWriterContentStringIEnumerableOfStringStreamWriterStreamWriter">
            <summary>Sets the shim of Transfer.DumpWriterContent(String label, IEnumerable`1&lt;String&gt; strings, StreamWriter outfile, StreamWriter outfile2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.ExecuteStatementsSqlConnectionIEnumerableOfStringSqlTransaction">
            <summary>Sets the shim of Transfer.ExecuteStatements(SqlConnection destinationConnection, IEnumerable`1&lt;String&gt; statements, SqlTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.FindCyclesDependencyChainCollectionServerBooleanBooleanDictionaryOfDependencyBooleanArray">
            <summary>Sets the shim of Transfer.FindCycles(DependencyChainCollection dependencyChain, Server server, Boolean isDataOnly, Boolean isCreateOrder, Dictionary`2&lt;Dependency,Boolean[]&gt; BrokenLinks)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetDestinationConnectionString">
            <summary>Sets the shim of Transfer.GetDestinationConnectionString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetNodeIdForWhichToBreakLinkInt32Int32Boolean">
            <summary>Sets the shim of Transfer.GetNodeIdForWhichToBreakLink(Int32 nodeId, Int32 cycleLength, Boolean isCreateOrder)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetSourceConnectionString">
            <summary>Sets the shim of Transfer.GetSourceConnectionString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetStreamWriterString">
            <summary>Sets the shim of Transfer.GetStreamWriter(String fileName)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetTempDir">
            <summary>Sets the shim of Transfer.GetTempDir()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.GetTransferProvider">
            <summary>Sets the shim of Transfer.GetTransferProvider()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.MarkFalseDependencyDependencyBooleanArrayBoolean">
            <summary>Sets the shim of Transfer.MarkFalseDependency(Dependency d1, Boolean[] b, Boolean isDataOnly)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.MarkNodeForBreakingDependencyArrayServerBooleanBooleanDictionaryOfDependencyBooleanArray">
            <summary>Sets the shim of Transfer.MarkNodeForBreaking(Dependency[] cycle, Server server, Boolean isDataOnly, Boolean isCreateOrder, Dictionary`2&lt;Dependency,Boolean[]&gt; BrokenLinks)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.MicrosoftSqlServerManagementCommonITransferMetadataProviderGetOptions">
            <summary>Sets the shim of Transfer.Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.GetOptions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.MicrosoftSqlServerManagementCommonITransferMetadataProviderSaveMetadata">
            <summary>Sets the shim of Transfer.Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.SaveMetadata()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.OnDataTransferProgressDataTransferEventTypeString">
            <summary>Sets the shim of Transfer.OnDataTransferProgress(DataTransferEventType dataTransferEventType, String message)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.ProcessDependencyChainServerDependencyChainCollectionBooleanBoolean">
            <summary>Sets the shim of Transfer.ProcessDependencyChain(Server server, DependencyChainCollection dependencyChain, Boolean isDataOnly, Boolean isCreateOrder)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.SetCoulmnNameAndMappingTableSqlBulkCopy">
            <summary>Sets the shim of Transfer.SetCoulmnNameAndMapping(Table table, SqlBulkCopy bulkCopy)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.TemporaryPackageDirectoryGet">
            <summary>Sets the shim of Transfer.get_TemporaryPackageDirectory()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.TemporaryPackageDirectorySetString">
            <summary>Sets the shim of Transfer.set_TemporaryPackageDirectory(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.TransferData">
            <summary>Sets the shim of Transfer.TransferData()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.VisitDependencyListOfDependencyDictionaryOfUrnObjectServerBooleanBooleanDictionaryOfDependencyBooleanArray">
            <summary>Sets the shim of Transfer.Visit(Dependency dependency, List`1&lt;Dependency&gt; currentChain, Dictionary`2&lt;Urn,Object&gt; visitedUrns, Server server, Boolean isDataOnly, Boolean isCreateOrder, Dictionary`2&lt;Dependency,Boolean[]&gt; BrokenLinks)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.BatchSizeGet">
            <summary>Sets the shim of Transfer.get_BatchSize()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.BatchSizeSetInt32">
            <summary>Sets the shim of Transfer.set_BatchSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.BulkCopyTimeoutGet">
            <summary>Sets the shim of Transfer.get_BulkCopyTimeout()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.BulkCopyTimeoutSetInt32">
            <summary>Sets the shim of Transfer.set_BulkCopyTimeout(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.DataTransferEventAddDataTransferEventHandler">
            <summary>Sets the shim of Transfer.add_DataTransferEvent(DataTransferEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.DataTransferEventRemoveDataTransferEventHandler">
            <summary>Sets the shim of Transfer.remove_DataTransferEvent(DataTransferEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.DataTransferInformationEventString">
            <summary>Sets the shim of Transfer.DataTransferInformationEvent(String message)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.DataTransferProgressEventString">
            <summary>Sets the shim of Transfer.DataTransferProgressEvent(String statement)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.DumpWriterContentStringIEnumerableOfStringStreamWriterStreamWriter">
            <summary>Sets the shim of Transfer.DumpWriterContent(String label, IEnumerable`1&lt;String&gt; strings, StreamWriter outfile, StreamWriter outfile2)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.ExecuteStatementsSqlConnectionIEnumerableOfStringSqlTransaction">
            <summary>Sets the shim of Transfer.ExecuteStatements(SqlConnection destinationConnection, IEnumerable`1&lt;String&gt; statements, SqlTransaction transaction)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.GetDestinationConnectionString">
            <summary>Sets the shim of Transfer.GetDestinationConnectionString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.GetSourceConnectionString">
            <summary>Sets the shim of Transfer.GetSourceConnectionString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.GetTempDir">
            <summary>Sets the shim of Transfer.GetTempDir()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.GetTransferProvider">
            <summary>Sets the shim of Transfer.GetTransferProvider()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.MicrosoftSqlServerManagementCommonITransferMetadataProviderGetOptions">
            <summary>Sets the shim of Transfer.Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.GetOptions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.MicrosoftSqlServerManagementCommonITransferMetadataProviderSaveMetadata">
            <summary>Sets the shim of Transfer.Microsoft.SqlServer.Management.Common.ITransferMetadataProvider.SaveMetadata()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.OnDataTransferProgressDataTransferEventTypeString">
            <summary>Sets the shim of Transfer.OnDataTransferProgress(DataTransferEventType dataTransferEventType, String message)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.SetCoulmnNameAndMappingTableSqlBulkCopy">
            <summary>Sets the shim of Transfer.SetCoulmnNameAndMapping(Table table, SqlBulkCopy bulkCopy)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.TemporaryPackageDirectoryGet">
            <summary>Sets the shim of Transfer.get_TemporaryPackageDirectory()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.TemporaryPackageDirectorySetString">
            <summary>Sets the shim of Transfer.set_TemporaryPackageDirectory(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransfer.AllInstances.TransferData">
            <summary>Sets the shim of Transfer.TransferData()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.TransferBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.#ctor(Microsoft.SqlServer.Management.Smo.TransferBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddAllNonSystemObjectsOf1ICollectionOfUrnSmoCollectionBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.ICollection{Microsoft.SqlServer.Management.Sdk.Sfc.Urn},Microsoft.SqlServer.Management.Smo.SmoCollectionBase})">
            <summary>Sets the shim of TransferBase.AddAllNonSystemObjects(ICollection`1&lt;Urn&gt; List, SmoCollectionBase collection)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddAllObjectsOf1ICollectionOfUrnSmoCollectionBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.ICollection{Microsoft.SqlServer.Management.Sdk.Sfc.Urn},Microsoft.SqlServer.Management.Smo.SmoCollectionBase})">
            <summary>Sets the shim of TransferBase.AddAllObjects(ICollection`1&lt;Urn&gt; List, SmoCollectionBase collection)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddDiscoverableObjectsHashSetOfUrnDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.AddDiscoverableObjects(HashSet`1&lt;Urn&gt; depDiscInputList, Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddDiscoveryUnsupportedObjectsHashSetOfUrnHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddDiscoveryUnsupportedObjects(HashSet`1&lt;Urn&gt; list, HashSet`1&lt;Urn&gt; nonDepDiscList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddSecurityObjectsInOrderDependencyCollectionDictionaryOfStringHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddSecurityObjectsInOrder(DependencyCollection depList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddSecurityObjectsWithoutOrderDependencyCollectionDictionaryOfStringHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddSecurityObjectsWithoutOrder(DependencyCollection depList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddWithoutDependencyDiscoveryCollectionDependencyCollectionHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddWithoutDependencyDiscoveryCollection(DependencyCollection depList, HashSet`1&lt;Urn&gt; nonDepHashSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AddWithoutDependencyDiscoveryDependencyCollectionDependencyCollectionNode">
            <summary>Sets the shim of TransferBase.AddWithoutDependencyDiscovery(DependencyCollection depList, DependencyCollectionNode node)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CheckDownLevelScriptingDependencyCollection">
            <summary>Sets the shim of TransferBase.CheckDownLevelScripting(DependencyCollection depList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.Constructor">
            <summary>Sets the shim of TransferBase.TransferBase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ConstructorDatabase">
            <summary>Sets the shim of TransferBase.TransferBase(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllDatabaseTriggersGet">
            <summary>Sets the shim of TransferBase.get_CopyAllDatabaseTriggers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllDatabaseTriggersSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllDatabaseTriggers(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllDefaultsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllDefaults()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllDefaultsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllDefaults(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllFullTextCatalogsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllFullTextCatalogs()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllFullTextCatalogsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllFullTextCatalogs(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllFullTextStopListsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllFullTextStopLists()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllFullTextStopListsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllFullTextStopLists(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllLoginsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllLogins()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllLoginsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllLogins(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllObjectsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllObjectsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllObjects(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPartitionFunctionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPartitionFunctions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPartitionFunctionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPartitionFunctions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPartitionSchemesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPartitionSchemes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPartitionSchemesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPartitionSchemes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPlanGuidesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPlanGuides()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllPlanGuidesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPlanGuides(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllRolesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllRoles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllRolesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllRoles(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllRulesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllRules()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllRulesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllRules(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSchemasGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSchemas()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSchemasSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSchemas(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSearchPropertyListsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSearchPropertyLists()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSearchPropertyListsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSearchPropertyLists(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSequencesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSequences()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSequencesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSequences(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSqlAssembliesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSqlAssemblies()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSqlAssembliesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSqlAssemblies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllStoredProceduresGet">
            <summary>Sets the shim of TransferBase.get_CopyAllStoredProcedures()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllStoredProceduresSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllStoredProcedures(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSynonymsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSynonyms()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllSynonymsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSynonyms(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllTablesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllTables()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllTablesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllTables(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedAggregatesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedAggregates()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedAggregatesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedAggregates(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedDataTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedDataTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedDataTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedDataTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedFunctionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedFunctions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedFunctionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedFunctions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedTableTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedTableTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedTableTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedTableTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUserDefinedTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUsersGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUsers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllUsersSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUsers(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllViewsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllViews()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllViewsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllViews(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllXmlSchemaCollectionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllXmlSchemaCollections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyAllXmlSchemaCollectionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllXmlSchemaCollections(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyDataGet">
            <summary>Sets the shim of TransferBase.get_CopyData()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopyDataSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyData(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopySchemaGet">
            <summary>Sets the shim of TransferBase.get_CopySchema()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CopySchemaSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopySchema(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CreateTargetDatabaseGet">
            <summary>Sets the shim of TransferBase.get_CreateTargetDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.CreateTargetDatabaseSetBoolean">
            <summary>Sets the shim of TransferBase.set_CreateTargetDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DatabaseFileMappingsGet">
            <summary>Sets the shim of TransferBase.get_DatabaseFileMappings()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DatabaseFileMappingsSetDatabaseFileMappingsDictionary">
            <summary>Sets the shim of TransferBase.set_DatabaseFileMappings(DatabaseFileMappingsDictionary value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DatabaseGet">
            <summary>Sets the shim of TransferBase.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DatabaseSetDatabase">
            <summary>Sets the shim of TransferBase.set_Database(Database value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationDatabaseGet">
            <summary>Sets the shim of TransferBase.get_DestinationDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationDatabaseSetString">
            <summary>Sets the shim of TransferBase.set_DestinationDatabase(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationLoginGet">
            <summary>Sets the shim of TransferBase.get_DestinationLogin()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationLoginSecureGet">
            <summary>Sets the shim of TransferBase.get_DestinationLoginSecure()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationLoginSecureSetBoolean">
            <summary>Sets the shim of TransferBase.set_DestinationLoginSecure(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationLoginSetString">
            <summary>Sets the shim of TransferBase.set_DestinationLogin(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationPasswordGet">
            <summary>Sets the shim of TransferBase.get_DestinationPassword()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationPasswordSetString">
            <summary>Sets the shim of TransferBase.set_DestinationPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationServerGet">
            <summary>Sets the shim of TransferBase.get_DestinationServer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationServerSetString">
            <summary>Sets the shim of TransferBase.set_DestinationServer(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationTranslateCharGet">
            <summary>Sets the shim of TransferBase.get_DestinationTranslateChar()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DestinationTranslateCharSetBoolean">
            <summary>Sets the shim of TransferBase.set_DestinationTranslateChar(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DiscoverDependenciesHashSetOfUrn">
            <summary>Sets the shim of TransferBase.DiscoverDependencies(HashSet`1&lt;Urn&gt; depDiscInputList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DiscoveryProgressAddProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.add_DiscoveryProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DiscoveryProgressRemoveProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.remove_DiscoveryProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DropDestinationObjectsFirstGet">
            <summary>Sets the shim of TransferBase.get_DropDestinationObjectsFirst()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.DropDestinationObjectsFirstSetBoolean">
            <summary>Sets the shim of TransferBase.set_DropDestinationObjectsFirst(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.EnumObjects">
            <summary>Sets the shim of TransferBase.EnumObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.EnumObjectsBoolean">
            <summary>Sets the shim of TransferBase.EnumObjects(Boolean ordered)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.EnumScriptTransfer">
            <summary>Sets the shim of TransferBase.EnumScriptTransfer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.GetDependencyOrderedCollectionHashSetOfUrn">
            <summary>Sets the shim of TransferBase.GetDependencyOrderedCollection(HashSet`1&lt;Urn&gt; transferSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.GetObjectListBoolean">
            <summary>Sets the shim of TransferBase.GetObjectList(Boolean ordered)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.GetServerVersionStringInt32Ref">
            <summary>Sets the shim of TransferBase.GetServerVersion(String serverName, Int32&amp; minorVersion)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.Init">
            <summary>Sets the shim of TransferBase.Init()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ObjectListGet">
            <summary>Sets the shim of TransferBase.get_ObjectList()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ObjectListSetArrayList">
            <summary>Sets the shim of TransferBase.set_ObjectList(ArrayList value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.OptionsGet">
            <summary>Sets the shim of TransferBase.get_Options()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.OptionsSetScriptingOptions">
            <summary>Sets the shim of TransferBase.set_Options(ScriptingOptions value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PrefetchObjectsGet">
            <summary>Sets the shim of TransferBase.get_PrefetchObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PrefetchObjectsSetBoolean">
            <summary>Sets the shim of TransferBase.set_PrefetchObjects(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PrefetchSecurityObjectsDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.PrefetchSecurityObjects(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PreserveDboGet">
            <summary>Sets the shim of TransferBase.get_PreserveDbo()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PreserveDboSetBoolean">
            <summary>Sets the shim of TransferBase.set_PreserveDbo(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PreserveLoginsGet">
            <summary>Sets the shim of TransferBase.get_PreserveLogins()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.PreserveLoginsSetBoolean">
            <summary>Sets the shim of TransferBase.set_PreserveLogins(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.RestoreDefaultInitFieldsDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.RestoreDefaultInitFields(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScriptTransfer">
            <summary>Sets the shim of TransferBase.ScriptTransfer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScripterGet">
            <summary>Sets the shim of TransferBase.get_Scripter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScriptingErrorAddScriptingErrorEventHandler">
            <summary>Sets the shim of TransferBase.add_ScriptingError(ScriptingErrorEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScriptingErrorRemoveScriptingErrorEventHandler">
            <summary>Sets the shim of TransferBase.remove_ScriptingError(ScriptingErrorEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScriptingProgressAddProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.add_ScriptingProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.ScriptingProgressRemoveProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.remove_ScriptingProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SeparateDiscoverySupportedObjectsHashSetOfUrnHashSetOfUrnDictionaryOfStringHashSetOfUrnHashSetOfUrn">
            <summary>Sets the shim of TransferBase.SeparateDiscoverySupportedObjects(HashSet`1&lt;Urn&gt; depDiscInputList, HashSet`1&lt;Urn&gt; nonDepDiscList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary, HashSet`1&lt;Urn&gt; nonDepList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SetDatabaseDatabase">
            <summary>Sets the shim of TransferBase.SetDatabase(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SetDefaultInitFieldsDictionaryOfTypeStringCollectionTypeStringArray">
            <summary>Sets the shim of TransferBase.SetDefaultInitFields(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields, Type type, String[] fields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SetTargetServerInfo">
            <summary>Sets the shim of TransferBase.SetTargetServerInfo()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SourceTranslateCharGet">
            <summary>Sets the shim of TransferBase.get_SourceTranslateChar()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.SourceTranslateCharSetBoolean">
            <summary>Sets the shim of TransferBase.set_SourceTranslateChar(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.TargetDatabaseFilePathGet">
            <summary>Sets the shim of TransferBase.get_TargetDatabaseFilePath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.TargetDatabaseFilePathSetString">
            <summary>Sets the shim of TransferBase.set_TargetDatabaseFilePath(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.TargetLogFilePathGet">
            <summary>Sets the shim of TransferBase.get_TargetLogFilePath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.TargetLogFilePathSetString">
            <summary>Sets the shim of TransferBase.set_TargetLogFilePath(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.TreeTraversalDependencyTreeNodeHashSetOfUrn">
            <summary>Sets the shim of TransferBase.TreeTraversal(DependencyTreeNode node, HashSet`1&lt;Urn&gt; visitedUrns)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.UseDestinationTransactionGet">
            <summary>Sets the shim of TransferBase.get_UseDestinationTransaction()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.UseDestinationTransactionSetBoolean">
            <summary>Sets the shim of TransferBase.set_UseDestinationTransaction(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddAllNonSystemObjectsOf1ICollectionOfUrnSmoCollectionBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.SqlServer.Management.Smo.TransferBase,System.Collections.Generic.ICollection{Microsoft.SqlServer.Management.Sdk.Sfc.Urn},Microsoft.SqlServer.Management.Smo.SmoCollectionBase})">
            <summary>Sets the shim of TransferBase.AddAllNonSystemObjects(ICollection`1&lt;Urn&gt; List, SmoCollectionBase collection)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddAllObjectsOf1ICollectionOfUrnSmoCollectionBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.SqlServer.Management.Smo.TransferBase,System.Collections.Generic.ICollection{Microsoft.SqlServer.Management.Sdk.Sfc.Urn},Microsoft.SqlServer.Management.Smo.SmoCollectionBase})">
            <summary>Sets the shim of TransferBase.AddAllObjects(ICollection`1&lt;Urn&gt; List, SmoCollectionBase collection)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddDiscoverableObjectsHashSetOfUrnDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.AddDiscoverableObjects(HashSet`1&lt;Urn&gt; depDiscInputList, Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddDiscoveryUnsupportedObjectsHashSetOfUrnHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddDiscoveryUnsupportedObjects(HashSet`1&lt;Urn&gt; list, HashSet`1&lt;Urn&gt; nonDepDiscList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddSecurityObjectsInOrderDependencyCollectionDictionaryOfStringHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddSecurityObjectsInOrder(DependencyCollection depList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddSecurityObjectsWithoutOrderDependencyCollectionDictionaryOfStringHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddSecurityObjectsWithoutOrder(DependencyCollection depList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddWithoutDependencyDiscoveryCollectionDependencyCollectionHashSetOfUrn">
            <summary>Sets the shim of TransferBase.AddWithoutDependencyDiscoveryCollection(DependencyCollection depList, HashSet`1&lt;Urn&gt; nonDepHashSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.AddWithoutDependencyDiscoveryDependencyCollectionDependencyCollectionNode">
            <summary>Sets the shim of TransferBase.AddWithoutDependencyDiscovery(DependencyCollection depList, DependencyCollectionNode node)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CheckDownLevelScriptingDependencyCollection">
            <summary>Sets the shim of TransferBase.CheckDownLevelScripting(DependencyCollection depList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllDatabaseTriggersGet">
            <summary>Sets the shim of TransferBase.get_CopyAllDatabaseTriggers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllDatabaseTriggersSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllDatabaseTriggers(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllDefaultsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllDefaults()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllDefaultsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllDefaults(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllFullTextCatalogsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllFullTextCatalogs()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllFullTextCatalogsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllFullTextCatalogs(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllFullTextStopListsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllFullTextStopLists()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllFullTextStopListsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllFullTextStopLists(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllLoginsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllLogins()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllLoginsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllLogins(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllObjectsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllObjectsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllObjects(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPartitionFunctionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPartitionFunctions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPartitionFunctionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPartitionFunctions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPartitionSchemesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPartitionSchemes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPartitionSchemesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPartitionSchemes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPlanGuidesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllPlanGuides()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllPlanGuidesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllPlanGuides(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllRolesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllRoles()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllRolesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllRoles(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllRulesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllRules()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllRulesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllRules(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSchemasGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSchemas()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSchemasSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSchemas(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSearchPropertyListsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSearchPropertyLists()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSearchPropertyListsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSearchPropertyLists(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSequencesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSequences()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSequencesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSequences(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSqlAssembliesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSqlAssemblies()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSqlAssembliesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSqlAssemblies(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllStoredProceduresGet">
            <summary>Sets the shim of TransferBase.get_CopyAllStoredProcedures()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllStoredProceduresSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllStoredProcedures(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSynonymsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllSynonyms()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllSynonymsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllSynonyms(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllTablesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllTables()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllTablesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllTables(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedAggregatesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedAggregates()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedAggregatesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedAggregates(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedDataTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedDataTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedDataTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedDataTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedFunctionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedFunctions()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedFunctionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedFunctions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedTableTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedTableTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedTableTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedTableTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedTypesGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUserDefinedTypes()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUserDefinedTypesSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUserDefinedTypes(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUsersGet">
            <summary>Sets the shim of TransferBase.get_CopyAllUsers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllUsersSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllUsers(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllViewsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllViews()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllViewsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllViews(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllXmlSchemaCollectionsGet">
            <summary>Sets the shim of TransferBase.get_CopyAllXmlSchemaCollections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyAllXmlSchemaCollectionsSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyAllXmlSchemaCollections(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyDataGet">
            <summary>Sets the shim of TransferBase.get_CopyData()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopyDataSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopyData(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopySchemaGet">
            <summary>Sets the shim of TransferBase.get_CopySchema()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CopySchemaSetBoolean">
            <summary>Sets the shim of TransferBase.set_CopySchema(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CreateTargetDatabaseGet">
            <summary>Sets the shim of TransferBase.get_CreateTargetDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.CreateTargetDatabaseSetBoolean">
            <summary>Sets the shim of TransferBase.set_CreateTargetDatabase(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DatabaseFileMappingsGet">
            <summary>Sets the shim of TransferBase.get_DatabaseFileMappings()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DatabaseFileMappingsSetDatabaseFileMappingsDictionary">
            <summary>Sets the shim of TransferBase.set_DatabaseFileMappings(DatabaseFileMappingsDictionary value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DatabaseGet">
            <summary>Sets the shim of TransferBase.get_Database()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DatabaseSetDatabase">
            <summary>Sets the shim of TransferBase.set_Database(Database value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationDatabaseGet">
            <summary>Sets the shim of TransferBase.get_DestinationDatabase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationDatabaseSetString">
            <summary>Sets the shim of TransferBase.set_DestinationDatabase(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationLoginGet">
            <summary>Sets the shim of TransferBase.get_DestinationLogin()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationLoginSecureGet">
            <summary>Sets the shim of TransferBase.get_DestinationLoginSecure()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationLoginSecureSetBoolean">
            <summary>Sets the shim of TransferBase.set_DestinationLoginSecure(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationLoginSetString">
            <summary>Sets the shim of TransferBase.set_DestinationLogin(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationPasswordGet">
            <summary>Sets the shim of TransferBase.get_DestinationPassword()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationPasswordSetString">
            <summary>Sets the shim of TransferBase.set_DestinationPassword(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationServerGet">
            <summary>Sets the shim of TransferBase.get_DestinationServer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationServerSetString">
            <summary>Sets the shim of TransferBase.set_DestinationServer(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationTranslateCharGet">
            <summary>Sets the shim of TransferBase.get_DestinationTranslateChar()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DestinationTranslateCharSetBoolean">
            <summary>Sets the shim of TransferBase.set_DestinationTranslateChar(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DiscoverDependenciesHashSetOfUrn">
            <summary>Sets the shim of TransferBase.DiscoverDependencies(HashSet`1&lt;Urn&gt; depDiscInputList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DiscoveryProgressAddProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.add_DiscoveryProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DiscoveryProgressRemoveProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.remove_DiscoveryProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DropDestinationObjectsFirstGet">
            <summary>Sets the shim of TransferBase.get_DropDestinationObjectsFirst()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.DropDestinationObjectsFirstSetBoolean">
            <summary>Sets the shim of TransferBase.set_DropDestinationObjectsFirst(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.EnumObjects">
            <summary>Sets the shim of TransferBase.EnumObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.EnumObjectsBoolean">
            <summary>Sets the shim of TransferBase.EnumObjects(Boolean ordered)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.EnumScriptTransfer">
            <summary>Sets the shim of TransferBase.EnumScriptTransfer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.GetDependencyOrderedCollectionHashSetOfUrn">
            <summary>Sets the shim of TransferBase.GetDependencyOrderedCollection(HashSet`1&lt;Urn&gt; transferSet)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.GetObjectListBoolean">
            <summary>Sets the shim of TransferBase.GetObjectList(Boolean ordered)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.GetServerVersionStringInt32Ref">
            <summary>Sets the shim of TransferBase.GetServerVersion(String serverName, Int32&amp; minorVersion)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.Init">
            <summary>Sets the shim of TransferBase.Init()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ObjectListGet">
            <summary>Sets the shim of TransferBase.get_ObjectList()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ObjectListSetArrayList">
            <summary>Sets the shim of TransferBase.set_ObjectList(ArrayList value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.OptionsGet">
            <summary>Sets the shim of TransferBase.get_Options()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.OptionsSetScriptingOptions">
            <summary>Sets the shim of TransferBase.set_Options(ScriptingOptions value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PrefetchObjectsGet">
            <summary>Sets the shim of TransferBase.get_PrefetchObjects()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PrefetchObjectsSetBoolean">
            <summary>Sets the shim of TransferBase.set_PrefetchObjects(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PrefetchSecurityObjectsDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.PrefetchSecurityObjects(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PreserveDboGet">
            <summary>Sets the shim of TransferBase.get_PreserveDbo()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PreserveDboSetBoolean">
            <summary>Sets the shim of TransferBase.set_PreserveDbo(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PreserveLoginsGet">
            <summary>Sets the shim of TransferBase.get_PreserveLogins()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.PreserveLoginsSetBoolean">
            <summary>Sets the shim of TransferBase.set_PreserveLogins(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.RestoreDefaultInitFieldsDictionaryOfTypeStringCollection">
            <summary>Sets the shim of TransferBase.RestoreDefaultInitFields(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScriptTransfer">
            <summary>Sets the shim of TransferBase.ScriptTransfer()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScripterGet">
            <summary>Sets the shim of TransferBase.get_Scripter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScriptingErrorAddScriptingErrorEventHandler">
            <summary>Sets the shim of TransferBase.add_ScriptingError(ScriptingErrorEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScriptingErrorRemoveScriptingErrorEventHandler">
            <summary>Sets the shim of TransferBase.remove_ScriptingError(ScriptingErrorEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScriptingProgressAddProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.add_ScriptingProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.ScriptingProgressRemoveProgressReportEventHandler">
            <summary>Sets the shim of TransferBase.remove_ScriptingProgress(ProgressReportEventHandler value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SeparateDiscoverySupportedObjectsHashSetOfUrnHashSetOfUrnDictionaryOfStringHashSetOfUrnHashSetOfUrn">
            <summary>Sets the shim of TransferBase.SeparateDiscoverySupportedObjects(HashSet`1&lt;Urn&gt; depDiscInputList, HashSet`1&lt;Urn&gt; nonDepDiscList, Dictionary`2&lt;String,HashSet`1&lt;Urn&gt;&gt; nonDepListDictionary, HashSet`1&lt;Urn&gt; nonDepList)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SetDatabaseDatabase">
            <summary>Sets the shim of TransferBase.SetDatabase(Database database)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SetDefaultInitFieldsDictionaryOfTypeStringCollectionTypeStringArray">
            <summary>Sets the shim of TransferBase.SetDefaultInitFields(Dictionary`2&lt;Type,StringCollection&gt; originalDefaultFields, Type type, String[] fields)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SetTargetServerInfo">
            <summary>Sets the shim of TransferBase.SetTargetServerInfo()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SourceTranslateCharGet">
            <summary>Sets the shim of TransferBase.get_SourceTranslateChar()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.SourceTranslateCharSetBoolean">
            <summary>Sets the shim of TransferBase.set_SourceTranslateChar(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.TargetDatabaseFilePathGet">
            <summary>Sets the shim of TransferBase.get_TargetDatabaseFilePath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.TargetDatabaseFilePathSetString">
            <summary>Sets the shim of TransferBase.set_TargetDatabaseFilePath(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.TargetLogFilePathGet">
            <summary>Sets the shim of TransferBase.get_TargetLogFilePath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.TargetLogFilePathSetString">
            <summary>Sets the shim of TransferBase.set_TargetLogFilePath(String value)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.TreeTraversalDependencyTreeNodeHashSetOfUrn">
            <summary>Sets the shim of TransferBase.TreeTraversal(DependencyTreeNode node, HashSet`1&lt;Urn&gt; visitedUrns)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.UseDestinationTransactionGet">
            <summary>Sets the shim of TransferBase.get_UseDestinationTransaction()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimTransferBase.AllInstances.UseDestinationTransactionSetBoolean">
            <summary>Sets the shim of TransferBase.set_UseDestinationTransaction(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.#ctor(Microsoft.SqlServer.Management.Smo.VerifyCompleteEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.ConstructorBoolean">
            <summary>Sets the shim of VerifyCompleteEventArgs.VerifyCompleteEventArgs(Boolean verifySuccess)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.VerifySuccessGet">
            <summary>Sets the shim of VerifyCompleteEventArgs.get_VerifySuccess()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.ShimVerifyCompleteEventArgs.AllInstances.VerifySuccessGet">
            <summary>Sets the shim of VerifyCompleteEventArgs.get_VerifySuccess()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.BackupDeviceItem</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.#ctor(System.String,Microsoft.SqlServer.Management.Smo.DeviceType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.Equals(System.Object)">
            <summary>Sets the stub of BackupDeviceItem.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.EqualsObject">
            <summary>Sets the stub of BackupDeviceItem.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.GetHashCode">
            <summary>Sets the stub of BackupDeviceItem.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.GetHashCode01">
            <summary>Sets the stub of BackupDeviceItem.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.InitializeStub">
            <summary>Initializes a new instance of type StubBackupDeviceItem</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.BackupDeviceList</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.SqlServer.Management.Smo.BackupDeviceItem})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.InitializeStub">
            <summary>Initializes a new instance of type StubBackupDeviceList</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupDeviceList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.BackupRestoreBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase.InitializeStub">
            <summary>Initializes a new instance of type StubBackupRestoreBase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubBackupRestoreBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.DataTransferBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.InitializeStub">
            <summary>Initializes a new instance of type StubDataTransferBase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubDataTransferBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.RelocateFile</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.InitializeStub">
            <summary>Initializes a new instance of type StubRelocateFile</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRelocateFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.RestoreOptions</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions.InitializeStub">
            <summary>Initializes a new instance of type StubRestoreOptions</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestoreOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.RestorePlan</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Server)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.#ctor(Microsoft.SqlServer.Management.Smo.Server,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.InitializeStub">
            <summary>Initializes a new instance of type StubRestorePlan</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubRestorePlan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.SuspectPage</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.#ctor(System.Int32,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.Equals(System.Object)">
            <summary>Sets the stub of SuspectPage.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.EqualsObject">
            <summary>Sets the stub of SuspectPage.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.GetHashCode">
            <summary>Sets the stub of SuspectPage.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.GetHashCode01">
            <summary>Sets the stub of SuspectPage.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.InitializeStub">
            <summary>Initializes a new instance of type StubSuspectPage</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.ToString">
            <summary>Sets the stub of SuspectPage.ToString()</summary>
        </member>
        <member name="F:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.ToString01">
            <summary>Sets the stub of SuspectPage.ToString()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubSuspectPage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.Transfer</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.InitializeStub">
            <summary>Initializes a new instance of type StubTransfer</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransfer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase">
            <summary>Stub type of Microsoft.SqlServer.Management.Smo.TransferBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.#ctor(Microsoft.SqlServer.Management.Smo.Database)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.InitializeStub">
            <summary>Initializes a new instance of type StubTransferBase</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.Fakes.StubTransferBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase">
            <summary>Shim type of Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.#ctor(Microsoft.SqlServer.Management.Smo.RegisteredServers.ServerGroupBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Bind(Microsoft.SqlServer.Management.Common.IAlterable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Bind(Microsoft.SqlServer.Management.Common.ICreatable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Bind(Microsoft.SqlServer.Management.Common.IDroppable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Bind(Microsoft.SqlServer.Management.Sdk.Sfc.ISfcValidate)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Alter">
            <summary>Sets the shim of ServerGroupBase.Alter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.ClearCollections">
            <summary>Sets the shim of ServerGroupBase.ClearCollections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.CollectionPathGet">
            <summary>Sets the shim of ServerGroupBase.get_CollectionPath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Constructor">
            <summary>Sets the shim of ServerGroupBase.ServerGroupBase()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.ConstructorRegSvrCollectionBaseString">
            <summary>Sets the shim of ServerGroupBase.ServerGroupBase(RegSvrCollectionBase parentColl, String name)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Create">
            <summary>Sets the shim of ServerGroupBase.Create()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.Drop">
            <summary>Sets the shim of ServerGroupBase.Drop()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.GetSmoObjectRecUrn">
            <summary>Sets the shim of ServerGroupBase.GetSmoObjectRec(Urn urn)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.GetSmoObjectUrn">
            <summary>Sets the shim of ServerGroupBase.GetSmoObject(Urn urn)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.RegisteredServersGet">
            <summary>Sets the shim of ServerGroupBase.get_RegisteredServers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.ServerGroupsGet">
            <summary>Sets the shim of ServerGroupBase.get_ServerGroups()</summary>
        </member>
        <member name="T:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.Alter">
            <summary>Sets the shim of ServerGroupBase.Alter()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.ClearCollections">
            <summary>Sets the shim of ServerGroupBase.ClearCollections()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.CollectionPathGet">
            <summary>Sets the shim of ServerGroupBase.get_CollectionPath()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.Create">
            <summary>Sets the shim of ServerGroupBase.Create()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.Drop">
            <summary>Sets the shim of ServerGroupBase.Drop()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.GetSmoObjectRecUrn">
            <summary>Sets the shim of ServerGroupBase.GetSmoObjectRec(Urn urn)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.GetSmoObjectUrn">
            <summary>Sets the shim of ServerGroupBase.GetSmoObject(Urn urn)</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.RegisteredServersGet">
            <summary>Sets the shim of ServerGroupBase.get_RegisteredServers()</summary>
        </member>
        <member name="P:Microsoft.SqlServer.Management.Smo.RegisteredServers.Fakes.ShimServerGroupBase.AllInstances.ServerGroupsGet">
            <summary>Sets the shim of ServerGroupBase.get_ServerGroups()</summary>
        </member>
    </members>
</doc>
