//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace Nephrite.Web.ReplicationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Replication", Namespace="http://nephritetech.com/tessera/integration/1.0")]
    public partial class Replication : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private UserCredentials userCredentialsValueField;
        
        private System.Threading.SendOrPostCallback RunDynamicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReplicationObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmReplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectsByPropertyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunTasksOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Replication() {
            this.Url = global::Nephrite.Web.Properties.Settings.Default.Nephrite_Web_ReplicationService_Replication;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public UserCredentials UserCredentialsValue {
            get {
                return this.userCredentialsValueField;
            }
            set {
                this.userCredentialsValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RunDynamicCompletedEventHandler RunDynamicCompleted;
        
        /// <remarks/>
        public event GetVersionRecordsCompletedEventHandler GetVersionRecordsCompleted;
        
        /// <remarks/>
        public event GetRecordCompletedEventHandler GetRecordCompleted;
        
        /// <remarks/>
        public event GetVersionRecordCompletedEventHandler GetVersionRecordCompleted;
        
        /// <remarks/>
        public event GetFileContentCompletedEventHandler GetFileContentCompleted;
        
        /// <remarks/>
        public event GetFileCompletedEventHandler GetFileCompleted;
        
        /// <remarks/>
        public event GetReplicationObjectsCompletedEventHandler GetReplicationObjectsCompleted;
        
        /// <remarks/>
        public event ConfirmReplicationCompletedEventHandler ConfirmReplicationCompleted;
        
        /// <remarks/>
        public event ImportObjectCompletedEventHandler ImportObjectCompleted;
        
        /// <remarks/>
        public event GetObjectsByPropertyValueCompletedEventHandler GetObjectsByPropertyValueCompleted;
        
        /// <remarks/>
        public event GetObjectsListCompletedEventHandler GetObjectsListCompleted;
        
        /// <remarks/>
        public event RunTasksCompletedEventHandler RunTasksCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/RunDynamic", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RunDynamic(string type, string method, string data) {
            object[] results = this.Invoke("RunDynamic", new object[] {
                        type,
                        method,
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunDynamicAsync(string type, string method, string data) {
            this.RunDynamicAsync(type, method, data, null);
        }
        
        /// <remarks/>
        public void RunDynamicAsync(string type, string method, string data, object userState) {
            if ((this.RunDynamicOperationCompleted == null)) {
                this.RunDynamicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunDynamicOperationCompleted);
            }
            this.InvokeAsync("RunDynamic", new object[] {
                        type,
                        method,
                        data}, this.RunDynamicOperationCompleted, userState);
        }
        
        private void OnRunDynamicOperationCompleted(object arg) {
            if ((this.RunDynamicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunDynamicCompleted(this, new RunDynamicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetVersionRecords", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetVersionRecords(string objectType, string objectID, System.DateTime startDate) {
            object[] results = this.Invoke("GetVersionRecords", new object[] {
                        objectType,
                        objectID,
                        startDate});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionRecordsAsync(string objectType, string objectID, System.DateTime startDate) {
            this.GetVersionRecordsAsync(objectType, objectID, startDate, null);
        }
        
        /// <remarks/>
        public void GetVersionRecordsAsync(string objectType, string objectID, System.DateTime startDate, object userState) {
            if ((this.GetVersionRecordsOperationCompleted == null)) {
                this.GetVersionRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionRecordsOperationCompleted);
            }
            this.InvokeAsync("GetVersionRecords", new object[] {
                        objectType,
                        objectID,
                        startDate}, this.GetVersionRecordsOperationCompleted, userState);
        }
        
        private void OnGetVersionRecordsOperationCompleted(object arg) {
            if ((this.GetVersionRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionRecordsCompleted(this, new GetVersionRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetRecord", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRecord(string objectType, string id) {
            object[] results = this.Invoke("GetRecord", new object[] {
                        objectType,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordAsync(string objectType, string id) {
            this.GetRecordAsync(objectType, id, null);
        }
        
        /// <remarks/>
        public void GetRecordAsync(string objectType, string id, object userState) {
            if ((this.GetRecordOperationCompleted == null)) {
                this.GetRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordOperationCompleted);
            }
            this.InvokeAsync("GetRecord", new object[] {
                        objectType,
                        id}, this.GetRecordOperationCompleted, userState);
        }
        
        private void OnGetRecordOperationCompleted(object arg) {
            if ((this.GetRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordCompleted(this, new GetRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetVersionRecord", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersionRecord(string objectType, string versionid) {
            object[] results = this.Invoke("GetVersionRecord", new object[] {
                        objectType,
                        versionid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionRecordAsync(string objectType, string versionid) {
            this.GetVersionRecordAsync(objectType, versionid, null);
        }
        
        /// <remarks/>
        public void GetVersionRecordAsync(string objectType, string versionid, object userState) {
            if ((this.GetVersionRecordOperationCompleted == null)) {
                this.GetVersionRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionRecordOperationCompleted);
            }
            this.InvokeAsync("GetVersionRecord", new object[] {
                        objectType,
                        versionid}, this.GetVersionRecordOperationCompleted, userState);
        }
        
        private void OnGetVersionRecordOperationCompleted(object arg) {
            if ((this.GetVersionRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionRecordCompleted(this, new GetVersionRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetFileContent", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileContent(System.Guid fileGuid) {
            object[] results = this.Invoke("GetFileContent", new object[] {
                        fileGuid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileContentAsync(System.Guid fileGuid) {
            this.GetFileContentAsync(fileGuid, null);
        }
        
        /// <remarks/>
        public void GetFileContentAsync(System.Guid fileGuid, object userState) {
            if ((this.GetFileContentOperationCompleted == null)) {
                this.GetFileContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileContentOperationCompleted);
            }
            this.InvokeAsync("GetFileContent", new object[] {
                        fileGuid}, this.GetFileContentOperationCompleted, userState);
        }
        
        private void OnGetFileContentOperationCompleted(object arg) {
            if ((this.GetFileContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileContentCompleted(this, new GetFileContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetFile", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFile(System.Guid fileGuid) {
            object[] results = this.Invoke("GetFile", new object[] {
                        fileGuid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileAsync(System.Guid fileGuid) {
            this.GetFileAsync(fileGuid, null);
        }
        
        /// <remarks/>
        public void GetFileAsync(System.Guid fileGuid, object userState) {
            if ((this.GetFileOperationCompleted == null)) {
                this.GetFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileOperationCompleted);
            }
            this.InvokeAsync("GetFile", new object[] {
                        fileGuid}, this.GetFileOperationCompleted, userState);
        }
        
        private void OnGetFileOperationCompleted(object arg) {
            if ((this.GetFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileCompleted(this, new GetFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetReplicationObjects", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplicationObject[] GetReplicationObjects(int maxCount) {
            object[] results = this.Invoke("GetReplicationObjects", new object[] {
                        maxCount});
            return ((ReplicationObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReplicationObjectsAsync(int maxCount) {
            this.GetReplicationObjectsAsync(maxCount, null);
        }
        
        /// <remarks/>
        public void GetReplicationObjectsAsync(int maxCount, object userState) {
            if ((this.GetReplicationObjectsOperationCompleted == null)) {
                this.GetReplicationObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReplicationObjectsOperationCompleted);
            }
            this.InvokeAsync("GetReplicationObjects", new object[] {
                        maxCount}, this.GetReplicationObjectsOperationCompleted, userState);
        }
        
        private void OnGetReplicationObjectsOperationCompleted(object arg) {
            if ((this.GetReplicationObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReplicationObjectsCompleted(this, new GetReplicationObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/ConfirmReplication", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmReplication(string objectType, int id, long ticks) {
            this.Invoke("ConfirmReplication", new object[] {
                        objectType,
                        id,
                        ticks});
        }
        
        /// <remarks/>
        public void ConfirmReplicationAsync(string objectType, int id, long ticks) {
            this.ConfirmReplicationAsync(objectType, id, ticks, null);
        }
        
        /// <remarks/>
        public void ConfirmReplicationAsync(string objectType, int id, long ticks, object userState) {
            if ((this.ConfirmReplicationOperationCompleted == null)) {
                this.ConfirmReplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmReplicationOperationCompleted);
            }
            this.InvokeAsync("ConfirmReplication", new object[] {
                        objectType,
                        id,
                        ticks}, this.ConfirmReplicationOperationCompleted, userState);
        }
        
        private void OnConfirmReplicationOperationCompleted(object arg) {
            if ((this.ConfirmReplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmReplicationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/ImportObject", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ImportObject(string xmlData) {
            object[] results = this.Invoke("ImportObject", new object[] {
                        xmlData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ImportObjectAsync(string xmlData) {
            this.ImportObjectAsync(xmlData, null);
        }
        
        /// <remarks/>
        public void ImportObjectAsync(string xmlData, object userState) {
            if ((this.ImportObjectOperationCompleted == null)) {
                this.ImportObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportObjectOperationCompleted);
            }
            this.InvokeAsync("ImportObject", new object[] {
                        xmlData}, this.ImportObjectOperationCompleted, userState);
        }
        
        private void OnImportObjectOperationCompleted(object arg) {
            if ((this.ImportObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportObjectCompleted(this, new ImportObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetObjectsByPropertyValue", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetObjectsByPropertyValue(string objectType, string propertyName, string id) {
            object[] results = this.Invoke("GetObjectsByPropertyValue", new object[] {
                        objectType,
                        propertyName,
                        id});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectsByPropertyValueAsync(string objectType, string propertyName, string id) {
            this.GetObjectsByPropertyValueAsync(objectType, propertyName, id, null);
        }
        
        /// <remarks/>
        public void GetObjectsByPropertyValueAsync(string objectType, string propertyName, string id, object userState) {
            if ((this.GetObjectsByPropertyValueOperationCompleted == null)) {
                this.GetObjectsByPropertyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectsByPropertyValueOperationCompleted);
            }
            this.InvokeAsync("GetObjectsByPropertyValue", new object[] {
                        objectType,
                        propertyName,
                        id}, this.GetObjectsByPropertyValueOperationCompleted, userState);
        }
        
        private void OnGetObjectsByPropertyValueOperationCompleted(object arg) {
            if ((this.GetObjectsByPropertyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectsByPropertyValueCompleted(this, new GetObjectsByPropertyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/GetObjectsList", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetObjectsList(string objectType, string controllerMethod, string[] parameters) {
            object[] results = this.Invoke("GetObjectsList", new object[] {
                        objectType,
                        controllerMethod,
                        parameters});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectsListAsync(string objectType, string controllerMethod, string[] parameters) {
            this.GetObjectsListAsync(objectType, controllerMethod, parameters, null);
        }
        
        /// <remarks/>
        public void GetObjectsListAsync(string objectType, string controllerMethod, string[] parameters, object userState) {
            if ((this.GetObjectsListOperationCompleted == null)) {
                this.GetObjectsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectsListOperationCompleted);
            }
            this.InvokeAsync("GetObjectsList", new object[] {
                        objectType,
                        controllerMethod,
                        parameters}, this.GetObjectsListOperationCompleted, userState);
        }
        
        private void OnGetObjectsListOperationCompleted(object arg) {
            if ((this.GetObjectsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectsListCompleted(this, new GetObjectsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://nephritetech.com/tessera/integration/1.0/RunTasks", RequestNamespace="http://nephritetech.com/tessera/integration/1.0", ResponseNamespace="http://nephritetech.com/tessera/integration/1.0", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RunTasks() {
            this.Invoke("RunTasks", new object[0]);
        }
        
        /// <remarks/>
        public void RunTasksAsync() {
            this.RunTasksAsync(null);
        }
        
        /// <remarks/>
        public void RunTasksAsync(object userState) {
            if ((this.RunTasksOperationCompleted == null)) {
                this.RunTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunTasksOperationCompleted);
            }
            this.InvokeAsync("RunTasks", new object[0], this.RunTasksOperationCompleted, userState);
        }
        
        private void OnRunTasksOperationCompleted(object arg) {
            if ((this.RunTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunTasksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://nephritetech.com/tessera/integration/1.0")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://nephritetech.com/tessera/integration/1.0", IsNullable=false)]
    public partial class UserCredentials : System.Web.Services.Protocols.SoapHeader {
        
        private string loginField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://nephritetech.com/tessera/integration/1.0")]
    public partial class ReplicationObject {
        
        private string objectTypeField;
        
        private int objectIDField;
        
        private long ticksField;
        
        /// <remarks/>
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public int ObjectID {
            get {
                return this.objectIDField;
            }
            set {
                this.objectIDField = value;
            }
        }
        
        /// <remarks/>
        public long Ticks {
            get {
                return this.ticksField;
            }
            set {
                this.ticksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RunDynamicCompletedEventHandler(object sender, RunDynamicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetVersionRecordsCompletedEventHandler(object sender, GetVersionRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetRecordCompletedEventHandler(object sender, GetRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetVersionRecordCompletedEventHandler(object sender, GetVersionRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFileContentCompletedEventHandler(object sender, GetFileContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFileCompletedEventHandler(object sender, GetFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetReplicationObjectsCompletedEventHandler(object sender, GetReplicationObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReplicationObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReplicationObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReplicationObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReplicationObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ConfirmReplicationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ImportObjectCompletedEventHandler(object sender, ImportObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetObjectsByPropertyValueCompletedEventHandler(object sender, GetObjectsByPropertyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectsByPropertyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectsByPropertyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetObjectsListCompletedEventHandler(object sender, GetObjectsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RunTasksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591