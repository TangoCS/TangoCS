#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
namespace Nephrite.Metamodel.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="erms")]
	public partial class modelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMM_FormFieldAttribute(MM_FormFieldAttribute instance);
    partial void UpdateMM_FormFieldAttribute(MM_FormFieldAttribute instance);
    partial void DeleteMM_FormFieldAttribute(MM_FormFieldAttribute instance);
    partial void InsertC_Language(C_Language instance);
    partial void UpdateC_Language(C_Language instance);
    partial void DeleteC_Language(C_Language instance);
    partial void InsertMM_TaggedValueType(MM_TaggedValueType instance);
    partial void UpdateMM_TaggedValueType(MM_TaggedValueType instance);
    partial void DeleteMM_TaggedValueType(MM_TaggedValueType instance);
    partial void InsertMM_Package(MM_Package instance);
    partial void UpdateMM_Package(MM_Package instance);
    partial void DeleteMM_Package(MM_Package instance);
    partial void InsertMM_ObjectProperty(MM_ObjectProperty instance);
    partial void UpdateMM_ObjectProperty(MM_ObjectProperty instance);
    partial void DeleteMM_ObjectProperty(MM_ObjectProperty instance);
    partial void InsertSPM_Action(SPM_Action instance);
    partial void UpdateSPM_Action(SPM_Action instance);
    partial void DeleteSPM_Action(SPM_Action instance);
    partial void InsertMM_FormField(MM_FormField instance);
    partial void UpdateMM_FormField(MM_FormField instance);
    partial void DeleteMM_FormField(MM_FormField instance);
    partial void InsertMM_CodifierValue(MM_CodifierValue instance);
    partial void UpdateMM_CodifierValue(MM_CodifierValue instance);
    partial void DeleteMM_CodifierValue(MM_CodifierValue instance);
    partial void InsertMM_Codifier(MM_Codifier instance);
    partial void UpdateMM_Codifier(MM_Codifier instance);
    partial void DeleteMM_Codifier(MM_Codifier instance);
    partial void InsertMM_MethodGroup(MM_MethodGroup instance);
    partial void UpdateMM_MethodGroup(MM_MethodGroup instance);
    partial void DeleteMM_MethodGroup(MM_MethodGroup instance);
    partial void InsertMM_MethodGroupItem(MM_MethodGroupItem instance);
    partial void UpdateMM_MethodGroupItem(MM_MethodGroupItem instance);
    partial void DeleteMM_MethodGroupItem(MM_MethodGroupItem instance);
    partial void InsertMM_Method(MM_Method instance);
    partial void UpdateMM_Method(MM_Method instance);
    partial void DeleteMM_Method(MM_Method instance);
    partial void InsertMM_FormFieldGroup(MM_FormFieldGroup instance);
    partial void UpdateMM_FormFieldGroup(MM_FormFieldGroup instance);
    partial void DeleteMM_FormFieldGroup(MM_FormFieldGroup instance);
    partial void InsertMM_ObjectType(MM_ObjectType instance);
    partial void UpdateMM_ObjectType(MM_ObjectType instance);
    partial void DeleteMM_ObjectType(MM_ObjectType instance);
    partial void InsertN_ReplicationObject(N_ReplicationObject instance);
    partial void UpdateN_ReplicationObject(N_ReplicationObject instance);
    partial void DeleteN_ReplicationObject(N_ReplicationObject instance);
    partial void InsertSPM_ActionAsso(SPM_ActionAsso instance);
    partial void UpdateSPM_ActionAsso(SPM_ActionAsso instance);
    partial void DeleteSPM_ActionAsso(SPM_ActionAsso instance);
    partial void InsertMM_DataValidation(MM_DataValidation instance);
    partial void UpdateMM_DataValidation(MM_DataValidation instance);
    partial void DeleteMM_DataValidation(MM_DataValidation instance);
    partial void InsertN_RssFeed(N_RssFeed instance);
    partial void UpdateN_RssFeed(N_RssFeed instance);
    partial void DeleteN_RssFeed(N_RssFeed instance);
    partial void InsertMM_FormView(MM_FormView instance);
    partial void UpdateMM_FormView(MM_FormView instance);
    partial void DeleteMM_FormView(MM_FormView instance);
    partial void InsertN_Cache(N_Cache instance);
    partial void UpdateN_Cache(N_Cache instance);
    partial void DeleteN_Cache(N_Cache instance);
    partial void InsertHST_MM_FormView(HST_MM_FormView instance);
    partial void UpdateHST_MM_FormView(HST_MM_FormView instance);
    partial void DeleteHST_MM_FormView(HST_MM_FormView instance);
    partial void InsertMMS_ClassStereotype(MMS_ClassStereotype instance);
    partial void UpdateMMS_ClassStereotype(MMS_ClassStereotype instance);
    partial void DeleteMMS_ClassStereotype(MMS_ClassStereotype instance);
    partial void InsertMM_ObjectTypeStereotype(MM_ObjectTypeStereotype instance);
    partial void UpdateMM_ObjectTypeStereotype(MM_ObjectTypeStereotype instance);
    partial void DeleteMM_ObjectTypeStereotype(MM_ObjectTypeStereotype instance);
    partial void InsertWF_Activity(WF_Activity instance);
    partial void UpdateWF_Activity(WF_Activity instance);
    partial void DeleteWF_Activity(WF_Activity instance);
    partial void InsertWF_Transition(WF_Transition instance);
    partial void UpdateWF_Transition(WF_Transition instance);
    partial void DeleteWF_Transition(WF_Transition instance);
    partial void InsertWF_Workflow(WF_Workflow instance);
    partial void UpdateWF_Workflow(WF_Workflow instance);
    partial void DeleteWF_Workflow(WF_Workflow instance);
    #endregion
		
		public modelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public modelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public modelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public modelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public modelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MM_FormFieldAttribute> MM_FormFieldAttributes
		{
			get
			{
				return this.GetTable<MM_FormFieldAttribute>();
			}
		}
		
		public System.Data.Linq.Table<C_Language> C_Languages
		{
			get
			{
				return this.GetTable<C_Language>();
			}
		}
		
		public System.Data.Linq.Table<MM_TaggedValueType> MM_TaggedValueTypes
		{
			get
			{
				return this.GetTable<MM_TaggedValueType>();
			}
		}
		
		public System.Data.Linq.Table<MM_Package> MM_Packages
		{
			get
			{
				return this.GetTable<MM_Package>();
			}
		}
		
		public System.Data.Linq.Table<MM_ObjectProperty> MM_ObjectProperties
		{
			get
			{
				return this.GetTable<MM_ObjectProperty>();
			}
		}
		
		public System.Data.Linq.Table<SPM_Action> SPM_Actions
		{
			get
			{
				return this.GetTable<SPM_Action>();
			}
		}
		
		public System.Data.Linq.Table<MM_FormField> MM_FormFields
		{
			get
			{
				return this.GetTable<MM_FormField>();
			}
		}
		
		public System.Data.Linq.Table<MM_CodifierValue> MM_CodifierValues
		{
			get
			{
				return this.GetTable<MM_CodifierValue>();
			}
		}
		
		public System.Data.Linq.Table<MM_Codifier> MM_Codifiers
		{
			get
			{
				return this.GetTable<MM_Codifier>();
			}
		}
		
		public System.Data.Linq.Table<MM_MethodGroup> MM_MethodGroups
		{
			get
			{
				return this.GetTable<MM_MethodGroup>();
			}
		}
		
		public System.Data.Linq.Table<MM_MethodGroupItem> MM_MethodGroupItems
		{
			get
			{
				return this.GetTable<MM_MethodGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<MM_Method> MM_Methods
		{
			get
			{
				return this.GetTable<MM_Method>();
			}
		}
		
		public System.Data.Linq.Table<MM_FormFieldGroup> MM_FormFieldGroups
		{
			get
			{
				return this.GetTable<MM_FormFieldGroup>();
			}
		}
		
		public System.Data.Linq.Table<MM_ObjectType> MM_ObjectTypes
		{
			get
			{
				return this.GetTable<MM_ObjectType>();
			}
		}
		
		public System.Data.Linq.Table<N_ReplicationObject> N_ReplicationObjects
		{
			get
			{
				return this.GetTable<N_ReplicationObject>();
			}
		}
		
		public System.Data.Linq.Table<SPM_ActionAsso> SPM_ActionAssos
		{
			get
			{
				return this.GetTable<SPM_ActionAsso>();
			}
		}
		
		public System.Data.Linq.Table<MM_DataValidation> MM_DataValidations
		{
			get
			{
				return this.GetTable<MM_DataValidation>();
			}
		}
		
		public System.Data.Linq.Table<N_RssFeed> N_RssFeeds
		{
			get
			{
				return this.GetTable<N_RssFeed>();
			}
		}
		
		public System.Data.Linq.Table<MM_FormView> MM_FormViews
		{
			get
			{
				return this.GetTable<MM_FormView>();
			}
		}
		
		public System.Data.Linq.Table<N_Cache> N_Caches
		{
			get
			{
				return this.GetTable<N_Cache>();
			}
		}
		
		public System.Data.Linq.Table<HST_MM_FormView> HST_MM_FormViews
		{
			get
			{
				return this.GetTable<HST_MM_FormView>();
			}
		}
		
		public System.Data.Linq.Table<MMS_ClassStereotype> MMS_ClassStereotypes
		{
			get
			{
				return this.GetTable<MMS_ClassStereotype>();
			}
		}
		
		public System.Data.Linq.Table<MM_ObjectTypeStereotype> MM_ObjectTypeStereotypes
		{
			get
			{
				return this.GetTable<MM_ObjectTypeStereotype>();
			}
		}
		
		public System.Data.Linq.Table<WF_Activity> WF_Activities
		{
			get
			{
				return this.GetTable<WF_Activity>();
			}
		}
		
		public System.Data.Linq.Table<WF_Transition> WF_Transitions
		{
			get
			{
				return this.GetTable<WF_Transition>();
			}
		}
		
		public System.Data.Linq.Table<WF_Workflow> WF_Workflows
		{
			get
			{
				return this.GetTable<WF_Workflow>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchInfoObjects")]
		public ISingleResult<SearchInfoObjectsResult> SearchInfoObjects([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8000)")] string searchpattern, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pageNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pageSize)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchpattern, pageNo, pageSize);
			return ((ISingleResult<SearchInfoObjectsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SearchInfoObjectsCnt", IsComposable=true)]
		public System.Nullable<int> SearchInfoObjectsCnt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(8000)")] string searchpattern)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), searchpattern).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.MM_FormView_CreateHistoryVersion")]
		public int MM_FormView_CreateHistoryVersion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_model")]
		public ISingleResult<usp_modelResult> usp_model()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<usp_modelResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_FormFieldAttribute")]
	public partial class MM_FormFieldAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormFieldAttributeID;
		
		private int _FormFieldID;
		
		private string _Title;
		
		private string _Value;
		
		private bool _IsEvent;
		
		private EntityRef<MM_FormField> _MM_FormField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormFieldAttributeIDChanging(int value);
    partial void OnFormFieldAttributeIDChanged();
    partial void OnFormFieldIDChanging(int value);
    partial void OnFormFieldIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsEventChanging(bool value);
    partial void OnIsEventChanged();
    #endregion
		
		public MM_FormFieldAttribute()
		{
			this._MM_FormField = default(EntityRef<MM_FormField>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFieldAttributeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormFieldAttributeID
		{
			get
			{
				return this._FormFieldAttributeID;
			}
			set
			{
				if ((this._FormFieldAttributeID != value))
				{
					this.OnFormFieldAttributeIDChanging(value);
					this.SendPropertyChanging();
					this._FormFieldAttributeID = value;
					this.SendPropertyChanged("FormFieldAttributeID");
					this.OnFormFieldAttributeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFieldID", DbType="Int NOT NULL")]
		public int FormFieldID
		{
			get
			{
				return this._FormFieldID;
			}
			set
			{
				if ((this._FormFieldID != value))
				{
					if (this._MM_FormField.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FormFieldID = value;
					this.SendPropertyChanged("FormFieldID");
					this.OnFormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEvent", DbType="Bit NOT NULL")]
		public bool IsEvent
		{
			get
			{
				return this._IsEvent;
			}
			set
			{
				if ((this._IsEvent != value))
				{
					this.OnIsEventChanging(value);
					this.SendPropertyChanging();
					this._IsEvent = value;
					this.SendPropertyChanged("IsEvent");
					this.OnIsEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormField_MM_FormFieldAttribute", Storage="_MM_FormField", ThisKey="FormFieldID", OtherKey="FormFieldID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_FormField MM_FormField
		{
			get
			{
				return this._MM_FormField.Entity;
			}
			set
			{
				MM_FormField previousValue = this._MM_FormField.Entity;
				if (((previousValue != value) 
							|| (this._MM_FormField.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_FormField.Entity = null;
						previousValue.MM_FormFieldAttributes.Remove(this);
					}
					this._MM_FormField.Entity = value;
					if ((value != null))
					{
						value.MM_FormFieldAttributes.Add(this);
						this._FormFieldID = value.FormFieldID;
					}
					else
					{
						this._FormFieldID = default(int);
					}
					this.SendPropertyChanged("MM_FormField");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.C_Language")]
	public partial class C_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LanguageCode;
		
		private string _Title;
		
		private bool _IsDefault;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageCodeChanging(string value);
    partial void OnLanguageCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
		
		public C_Language()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageCode", DbType="NChar(2) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LanguageCode
		{
			get
			{
				return this._LanguageCode;
			}
			set
			{
				if ((this._LanguageCode != value))
				{
					this.OnLanguageCodeChanging(value);
					this.SendPropertyChanging();
					this._LanguageCode = value;
					this.SendPropertyChanged("LanguageCode");
					this.OnLanguageCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_TaggedValueType")]
	public partial class MM_TaggedValueType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaggedValueTypeID;
		
		private string _Title;
		
		private string _SysName;
		
		private string _TypeCode;
		
		private string _ElementTypeCode;
		
		private int _GroupID;
		
		private System.Guid _Guid;
		
		private int _ControlName;
		
		private int _SeqNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaggedValueTypeIDChanging(int value);
    partial void OnTaggedValueTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnElementTypeCodeChanging(string value);
    partial void OnElementTypeCodeChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnControlNameChanging(int value);
    partial void OnControlNameChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    #endregion
		
		public MM_TaggedValueType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaggedValueTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaggedValueTypeID
		{
			get
			{
				return this._TaggedValueTypeID;
			}
			set
			{
				if ((this._TaggedValueTypeID != value))
				{
					this.OnTaggedValueTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TaggedValueTypeID = value;
					this.SendPropertyChanged("TaggedValueTypeID");
					this.OnTaggedValueTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElementTypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string ElementTypeCode
		{
			get
			{
				return this._ElementTypeCode;
			}
			set
			{
				if ((this._ElementTypeCode != value))
				{
					this.OnElementTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ElementTypeCode = value;
					this.SendPropertyChanged("ElementTypeCode");
					this.OnElementTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlName", DbType="int NOT NULL")]
		public int ControlName
		{
			get
			{
				return this._ControlName;
			}
			set
			{
				if ((this._ControlName != value))
				{
					this.OnControlNameChanging(value);
					this.SendPropertyChanging();
					this._ControlName = value;
					this.SendPropertyChanged("ControlName");
					this.OnControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_Package")]
	public partial class MM_Package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private string _Title;
		
		private string _SysName;
		
		private System.Nullable<int> _ParentPackageID;
		
		private System.Guid _Guid;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private bool _IsDataReplicated;
		
		private int _SeqNo;
		
		private string _Version;
		
		private EntitySet<MM_Package> _MM_Packages;
		
		private EntitySet<MM_Codifier> _MM_Codifiers;
		
		private EntitySet<MM_ObjectType> _MM_ObjectTypes;
		
		private EntitySet<MM_FormView> _MM_FormViews;
		
		private EntitySet<HST_MM_FormView> _HST_MM_FormViews;
		
		private EntityRef<MM_Package> _MM_Package1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnParentPackageIDChanging(System.Nullable<int> value);
    partial void OnParentPackageIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnIsDataReplicatedChanging(bool value);
    partial void OnIsDataReplicatedChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public MM_Package()
		{
			this._MM_Packages = new EntitySet<MM_Package>(new Action<MM_Package>(this.attach_MM_Packages), new Action<MM_Package>(this.detach_MM_Packages));
			this._MM_Codifiers = new EntitySet<MM_Codifier>(new Action<MM_Codifier>(this.attach_MM_Codifiers), new Action<MM_Codifier>(this.detach_MM_Codifiers));
			this._MM_ObjectTypes = new EntitySet<MM_ObjectType>(new Action<MM_ObjectType>(this.attach_MM_ObjectTypes), new Action<MM_ObjectType>(this.detach_MM_ObjectTypes));
			this._MM_FormViews = new EntitySet<MM_FormView>(new Action<MM_FormView>(this.attach_MM_FormViews), new Action<MM_FormView>(this.detach_MM_FormViews));
			this._HST_MM_FormViews = new EntitySet<HST_MM_FormView>(new Action<HST_MM_FormView>(this.attach_HST_MM_FormViews), new Action<HST_MM_FormView>(this.detach_HST_MM_FormViews));
			this._MM_Package1 = default(EntityRef<MM_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPackageID", DbType="Int")]
		public System.Nullable<int> ParentPackageID
		{
			get
			{
				return this._ParentPackageID;
			}
			set
			{
				if ((this._ParentPackageID != value))
				{
					if (this._MM_Package1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentPackageIDChanging(value);
					this.SendPropertyChanging();
					this._ParentPackageID = value;
					this.SendPropertyChanged("ParentPackageID");
					this.OnParentPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataReplicated", DbType="Bit NOT NULL")]
		public bool IsDataReplicated
		{
			get
			{
				return this._IsDataReplicated;
			}
			set
			{
				if ((this._IsDataReplicated != value))
				{
					this.OnIsDataReplicatedChanging(value);
					this.SendPropertyChanging();
					this._IsDataReplicated = value;
					this.SendPropertyChanged("IsDataReplicated");
					this.OnIsDataReplicatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(32) NULL")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_Package", Storage="_MM_Packages", ThisKey="PackageID", OtherKey="ParentPackageID")]
		public EntitySet<MM_Package> MM_Packages
		{
			get
			{
				return this._MM_Packages;
			}
			set
			{
				this._MM_Packages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_Codifier", Storage="_MM_Codifiers", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<MM_Codifier> MM_Codifiers
		{
			get
			{
				return this._MM_Codifiers;
			}
			set
			{
				this._MM_Codifiers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_ObjectType", Storage="_MM_ObjectTypes", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<MM_ObjectType> MM_ObjectTypes
		{
			get
			{
				return this._MM_ObjectTypes;
			}
			set
			{
				this._MM_ObjectTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_FormView", Storage="_MM_FormViews", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<MM_FormView> MM_FormViews
		{
			get
			{
				return this._MM_FormViews;
			}
			set
			{
				this._MM_FormViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_HST_MM_FormView", Storage="_HST_MM_FormViews", ThisKey="PackageID", OtherKey="PackageID")]
		public EntitySet<HST_MM_FormView> HST_MM_FormViews
		{
			get
			{
				return this._HST_MM_FormViews;
			}
			set
			{
				this._HST_MM_FormViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_Package", Storage="_MM_Package1", ThisKey="ParentPackageID", OtherKey="PackageID", IsForeignKey=true)]
		public MM_Package MM_Package1
		{
			get
			{
				return this._MM_Package1.Entity;
			}
			set
			{
				MM_Package previousValue = this._MM_Package1.Entity;
				if (((previousValue != value) 
							|| (this._MM_Package1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Package1.Entity = null;
						previousValue.MM_Packages.Remove(this);
					}
					this._MM_Package1.Entity = value;
					if ((value != null))
					{
						value.MM_Packages.Add(this);
						this._ParentPackageID = value.PackageID;
					}
					else
					{
						this._ParentPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_Package1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_Packages(MM_Package entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package1 = this;
		}
		
		private void detach_MM_Packages(MM_Package entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package1 = null;
		}
		
		private void attach_MM_Codifiers(MM_Codifier entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = this;
		}
		
		private void detach_MM_Codifiers(MM_Codifier entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = null;
		}
		
		private void attach_MM_ObjectTypes(MM_ObjectType entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = this;
		}
		
		private void detach_MM_ObjectTypes(MM_ObjectType entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = null;
		}
		
		private void attach_MM_FormViews(MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = this;
		}
		
		private void detach_MM_FormViews(MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = null;
		}
		
		private void attach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = this;
		}
		
		private void detach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_Package = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_ObjectProperty")]
	public partial class MM_ObjectProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectPropertyID;
		
		private int _ObjectTypeID;
		
		private string _Title;
		
		private string _SysName;
		
		private int _SeqNo;
		
		private string _TypeCode;
		
		private System.Guid _Guid;
		
		private bool _IsMultilingual;
		
		private bool _IsPrimaryKey;
		
		private System.Nullable<int> _RefObjectPropertyID;
		
		private System.Nullable<int> _RefObjectTypeID;
		
		private bool _IsNavigable;
		
		private bool _IsAggregate;
		
		private int _LowerBound;
		
		private int _UpperBound;
		
		private System.Nullable<int> _CodifierID;
		
		private string _Expression;
		
		private bool _IsSystem;
		
		private bool _IsReferenceToVersion;
		
		private string _ValueFilter;
		
		private System.Nullable<int> _Precision;
		
		private System.Nullable<int> _Scale;
		
		private System.Nullable<int> _Length;
		
		private string _DeleteRule;
		
		private string _KindCode;
		
		private string _DefaultDBValue;
		
		private string _Description;
		
		private EntitySet<MM_ObjectProperty> _MM_ObjectProperties;
		
		private EntityRef<MM_FormField> _MM_FormFields;
		
		private EntitySet<MM_FormFieldGroup> _MM_FormFieldGroups;
		
		private EntityRef<MM_ObjectProperty> _MM_ObjectProperty1;
		
		private EntityRef<MM_Codifier> _MM_Codifier;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectPropertyIDChanging(int value);
    partial void OnObjectPropertyIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnIsMultilingualChanging(bool value);
    partial void OnIsMultilingualChanged();
    partial void OnIsPrimaryKeyChanging(bool value);
    partial void OnIsPrimaryKeyChanged();
    partial void OnRefObjectPropertyIDChanging(System.Nullable<int> value);
    partial void OnRefObjectPropertyIDChanged();
    partial void OnRefObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnRefObjectTypeIDChanged();
    partial void OnIsNavigableChanging(bool value);
    partial void OnIsNavigableChanged();
    partial void OnIsAggregateChanging(bool value);
    partial void OnIsAggregateChanged();
    partial void OnLowerBoundChanging(int value);
    partial void OnLowerBoundChanged();
    partial void OnUpperBoundChanging(int value);
    partial void OnUpperBoundChanged();
    partial void OnCodifierIDChanging(System.Nullable<int> value);
    partial void OnCodifierIDChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnIsSystemChanging(bool value);
    partial void OnIsSystemChanged();
    partial void OnIsReferenceToVersionChanging(bool value);
    partial void OnIsReferenceToVersionChanged();
    partial void OnValueFilterChanging(string value);
    partial void OnValueFilterChanged();
    partial void OnPrecisionChanging(System.Nullable<int> value);
    partial void OnPrecisionChanged();
    partial void OnScaleChanging(System.Nullable<int> value);
    partial void OnScaleChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnDeleteRuleChanging(string value);
    partial void OnDeleteRuleChanged();
    partial void OnKindCodeChanging(string value);
    partial void OnKindCodeChanged();
    partial void OnDefaultDBValueChanging(string value);
    partial void OnDefaultDBValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public MM_ObjectProperty()
		{
			this._MM_ObjectProperties = new EntitySet<MM_ObjectProperty>(new Action<MM_ObjectProperty>(this.attach_MM_ObjectProperties), new Action<MM_ObjectProperty>(this.detach_MM_ObjectProperties));
			this._MM_FormFields = default(EntityRef<MM_FormField>);
			this._MM_FormFieldGroups = new EntitySet<MM_FormFieldGroup>(new Action<MM_FormFieldGroup>(this.attach_MM_FormFieldGroups), new Action<MM_FormFieldGroup>(this.detach_MM_FormFieldGroups));
			this._MM_ObjectProperty1 = default(EntityRef<MM_ObjectProperty>);
			this._MM_Codifier = default(EntityRef<MM_Codifier>);
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			this._MM_ObjectType1 = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectPropertyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectPropertyID
		{
			get
			{
				return this._ObjectPropertyID;
			}
			set
			{
				if ((this._ObjectPropertyID != value))
				{
					this.OnObjectPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectPropertyID = value;
					this.SendPropertyChanged("ObjectPropertyID");
					this.OnObjectPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMultilingual", DbType="Bit NOT NULL")]
		public bool IsMultilingual
		{
			get
			{
				return this._IsMultilingual;
			}
			set
			{
				if ((this._IsMultilingual != value))
				{
					this.OnIsMultilingualChanging(value);
					this.SendPropertyChanging();
					this._IsMultilingual = value;
					this.SendPropertyChanged("IsMultilingual");
					this.OnIsMultilingualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaryKey", DbType="Bit NOT NULL")]
		public bool IsPrimaryKey
		{
			get
			{
				return this._IsPrimaryKey;
			}
			set
			{
				if ((this._IsPrimaryKey != value))
				{
					this.OnIsPrimaryKeyChanging(value);
					this.SendPropertyChanging();
					this._IsPrimaryKey = value;
					this.SendPropertyChanged("IsPrimaryKey");
					this.OnIsPrimaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefObjectPropertyID", DbType="Int")]
		public System.Nullable<int> RefObjectPropertyID
		{
			get
			{
				return this._RefObjectPropertyID;
			}
			set
			{
				if ((this._RefObjectPropertyID != value))
				{
					if (this._MM_ObjectProperty1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefObjectPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._RefObjectPropertyID = value;
					this.SendPropertyChanged("RefObjectPropertyID");
					this.OnRefObjectPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefObjectTypeID", DbType="Int")]
		public System.Nullable<int> RefObjectTypeID
		{
			get
			{
				return this._RefObjectTypeID;
			}
			set
			{
				if ((this._RefObjectTypeID != value))
				{
					if (this._MM_ObjectType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRefObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._RefObjectTypeID = value;
					this.SendPropertyChanged("RefObjectTypeID");
					this.OnRefObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNavigable", DbType="Bit NOT NULL")]
		public bool IsNavigable
		{
			get
			{
				return this._IsNavigable;
			}
			set
			{
				if ((this._IsNavigable != value))
				{
					this.OnIsNavigableChanging(value);
					this.SendPropertyChanging();
					this._IsNavigable = value;
					this.SendPropertyChanged("IsNavigable");
					this.OnIsNavigableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAggregate", DbType="Bit NOT NULL")]
		public bool IsAggregate
		{
			get
			{
				return this._IsAggregate;
			}
			set
			{
				if ((this._IsAggregate != value))
				{
					this.OnIsAggregateChanging(value);
					this.SendPropertyChanging();
					this._IsAggregate = value;
					this.SendPropertyChanged("IsAggregate");
					this.OnIsAggregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerBound", DbType="Int NOT NULL")]
		public int LowerBound
		{
			get
			{
				return this._LowerBound;
			}
			set
			{
				if ((this._LowerBound != value))
				{
					this.OnLowerBoundChanging(value);
					this.SendPropertyChanging();
					this._LowerBound = value;
					this.SendPropertyChanged("LowerBound");
					this.OnLowerBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpperBound", DbType="Int NOT NULL")]
		public int UpperBound
		{
			get
			{
				return this._UpperBound;
			}
			set
			{
				if ((this._UpperBound != value))
				{
					this.OnUpperBoundChanging(value);
					this.SendPropertyChanging();
					this._UpperBound = value;
					this.SendPropertyChanged("UpperBound");
					this.OnUpperBoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodifierID", DbType="Int")]
		public System.Nullable<int> CodifierID
		{
			get
			{
				return this._CodifierID;
			}
			set
			{
				if ((this._CodifierID != value))
				{
					if (this._MM_Codifier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodifierIDChanging(value);
					this.SendPropertyChanging();
					this._CodifierID = value;
					this.SendPropertyChanged("CodifierID");
					this.OnCodifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(MAX) NULL")]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSystem", DbType="bit NOT NULL")]
		public bool IsSystem
		{
			get
			{
				return this._IsSystem;
			}
			set
			{
				if ((this._IsSystem != value))
				{
					this.OnIsSystemChanging(value);
					this.SendPropertyChanging();
					this._IsSystem = value;
					this.SendPropertyChanged("IsSystem");
					this.OnIsSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReferenceToVersion", DbType="bit NOT NULL")]
		public bool IsReferenceToVersion
		{
			get
			{
				return this._IsReferenceToVersion;
			}
			set
			{
				if ((this._IsReferenceToVersion != value))
				{
					this.OnIsReferenceToVersionChanging(value);
					this.SendPropertyChanging();
					this._IsReferenceToVersion = value;
					this.SendPropertyChanged("IsReferenceToVersion");
					this.OnIsReferenceToVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFilter", DbType="NVarChar(MAX) NULL")]
		public string ValueFilter
		{
			get
			{
				return this._ValueFilter;
			}
			set
			{
				if ((this._ValueFilter != value))
				{
					this.OnValueFilterChanging(value);
					this.SendPropertyChanging();
					this._ValueFilter = value;
					this.SendPropertyChanged("ValueFilter");
					this.OnValueFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precision", DbType="Int")]
		public System.Nullable<int> Precision
		{
			get
			{
				return this._Precision;
			}
			set
			{
				if ((this._Precision != value))
				{
					this.OnPrecisionChanging(value);
					this.SendPropertyChanging();
					this._Precision = value;
					this.SendPropertyChanged("Precision");
					this.OnPrecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scale", DbType="Int")]
		public System.Nullable<int> Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this.OnScaleChanging(value);
					this.SendPropertyChanging();
					this._Scale = value;
					this.SendPropertyChanged("Scale");
					this.OnScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteRule", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string DeleteRule
		{
			get
			{
				return this._DeleteRule;
			}
			set
			{
				if ((this._DeleteRule != value))
				{
					this.OnDeleteRuleChanging(value);
					this.SendPropertyChanging();
					this._DeleteRule = value;
					this.SendPropertyChanged("DeleteRule");
					this.OnDeleteRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string KindCode
		{
			get
			{
				return this._KindCode;
			}
			set
			{
				if ((this._KindCode != value))
				{
					this.OnKindCodeChanging(value);
					this.SendPropertyChanging();
					this._KindCode = value;
					this.SendPropertyChanged("KindCode");
					this.OnKindCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDBValue", DbType="NVarChar(255) NULL")]
		public string DefaultDBValue
		{
			get
			{
				return this._DefaultDBValue;
			}
			set
			{
				if ((this._DefaultDBValue != value))
				{
					this.OnDefaultDBValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultDBValue = value;
					this.SendPropertyChanged("DefaultDBValue");
					this.OnDefaultDBValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NULL")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_ObjectProperty", Storage="_MM_ObjectProperties", ThisKey="ObjectPropertyID", OtherKey="RefObjectPropertyID")]
		public EntitySet<MM_ObjectProperty> ReferencesObjectProperties
		{
			get
			{
				return this._MM_ObjectProperties;
			}
			set
			{
				this._MM_ObjectProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_FormField", Storage="_MM_FormFields", ThisKey="ObjectPropertyID", OtherKey="ObjectPropertyID", IsUnique=true, IsForeignKey=false)]
		public MM_FormField MM_FormField
		{
			get
			{
				return this._MM_FormFields.Entity;
			}
			set
			{
				MM_FormField previousValue = this._MM_FormFields.Entity;
				if (((previousValue != value) 
							|| (this._MM_FormFields.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_FormFields.Entity = null;
						previousValue.MM_ObjectProperty = null;
					}
					this._MM_FormFields.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectProperty = this;
					}
					this.SendPropertyChanged("MM_FormField");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_FormFieldGroup", Storage="_MM_FormFieldGroups", ThisKey="ObjectPropertyID", OtherKey="SelectObjectPropertyID")]
		public EntitySet<MM_FormFieldGroup> MM_FormFieldGroups
		{
			get
			{
				return this._MM_FormFieldGroups;
			}
			set
			{
				this._MM_FormFieldGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_ObjectProperty", Storage="_MM_ObjectProperty1", ThisKey="RefObjectPropertyID", OtherKey="ObjectPropertyID", IsForeignKey=true)]
		public MM_ObjectProperty RefObjectProperty
		{
			get
			{
				return this._MM_ObjectProperty1.Entity;
			}
			set
			{
				MM_ObjectProperty previousValue = this._MM_ObjectProperty1.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectProperty1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectProperty1.Entity = null;
						previousValue.ReferencesObjectProperties.Remove(this);
					}
					this._MM_ObjectProperty1.Entity = value;
					if ((value != null))
					{
						value.ReferencesObjectProperties.Add(this);
						this._RefObjectPropertyID = value.ObjectPropertyID;
					}
					else
					{
						this._RefObjectPropertyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RefObjectProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Codifier_MM_ObjectProperty", Storage="_MM_Codifier", ThisKey="CodifierID", OtherKey="CodifierID", IsForeignKey=true)]
		public MM_Codifier MM_Codifier
		{
			get
			{
				return this._MM_Codifier.Entity;
			}
			set
			{
				MM_Codifier previousValue = this._MM_Codifier.Entity;
				if (((previousValue != value) 
							|| (this._MM_Codifier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Codifier.Entity = null;
						previousValue.MM_ObjectProperties.Remove(this);
					}
					this._MM_Codifier.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectProperties.Add(this);
						this._CodifierID = value.CodifierID;
					}
					else
					{
						this._CodifierID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_Codifier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectProperty", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_ObjectProperties.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectProperties.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectProperty1", Storage="_MM_ObjectType1", ThisKey="RefObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType RefObjectType
		{
			get
			{
				return this._MM_ObjectType1.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType1.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType1.Entity = null;
						previousValue.MM_ObjectProperties1.Remove(this);
					}
					this._MM_ObjectType1.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectProperties1.Add(this);
						this._RefObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._RefObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RefObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.RefObjectProperty = this;
		}
		
		private void detach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.RefObjectProperty = null;
		}
		
		private void attach_MM_FormFieldGroups(MM_FormFieldGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectProperty = this;
		}
		
		private void detach_MM_FormFieldGroups(MM_FormFieldGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectProperty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPM_Action")]
	public partial class SPM_Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionID;
		
		private string _Title;
		
		private int _Type;
		
		private string _SystemName;
		
		private EntitySet<SPM_ActionAsso> _SPM_ActionAssos;
		
		private EntitySet<SPM_ActionAsso> _SPM_ActionAssos1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSystemNameChanging(string value);
    partial void OnSystemNameChanged();
    #endregion
		
		public SPM_Action()
		{
			this._SPM_ActionAssos = new EntitySet<SPM_ActionAsso>(new Action<SPM_ActionAsso>(this.attach_SPM_ActionAssos), new Action<SPM_ActionAsso>(this.detach_SPM_ActionAssos));
			this._SPM_ActionAssos1 = new EntitySet<SPM_ActionAsso>(new Action<SPM_ActionAsso>(this.attach_SPM_ActionAssos1), new Action<SPM_ActionAsso>(this.detach_SPM_ActionAssos1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemName", DbType="NVarChar(255)")]
		public string SystemName
		{
			get
			{
				return this._SystemName;
			}
			set
			{
				if ((this._SystemName != value))
				{
					this.OnSystemNameChanging(value);
					this.SendPropertyChanging();
					this._SystemName = value;
					this.SendPropertyChanged("SystemName");
					this.OnSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPM_Action_SPM_ActionAsso", Storage="_SPM_ActionAssos", ThisKey="ActionID", OtherKey="ActionID")]
		public EntitySet<SPM_ActionAsso> ParentActionAssos
		{
			get
			{
				return this._SPM_ActionAssos;
			}
			set
			{
				this._SPM_ActionAssos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPM_Action_SPM_ActionAsso1", Storage="_SPM_ActionAssos1", ThisKey="ActionID", OtherKey="ParentActionID")]
		public EntitySet<SPM_ActionAsso> ChildActionAssos
		{
			get
			{
				return this._SPM_ActionAssos1;
			}
			set
			{
				this._SPM_ActionAssos1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPM_ActionAssos(SPM_ActionAsso entity)
		{
			this.SendPropertyChanging();
			entity.SPM_Action = this;
		}
		
		private void detach_SPM_ActionAssos(SPM_ActionAsso entity)
		{
			this.SendPropertyChanging();
			entity.SPM_Action = null;
		}
		
		private void attach_SPM_ActionAssos1(SPM_ActionAsso entity)
		{
			this.SendPropertyChanging();
			entity.ParentAction = this;
		}
		
		private void detach_SPM_ActionAssos1(SPM_ActionAsso entity)
		{
			this.SendPropertyChanging();
			entity.ParentAction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_FormField")]
	public partial class MM_FormField : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormFieldID;
		
		private int _ObjectPropertyID;
		
		private System.Nullable<int> _ControlName;
		
		private string _Title;
		
		private string _DefaultValue;
		
		private string _Comment;
		
		private System.Nullable<int> _FormFieldGroupID;
		
		private bool _ShowInList;
		
		private bool _ShowInEdit;
		
		private bool _ShowInView;
		
		private string _ValueFunction;
		
		private int _SeqNo;
		
		private string _ListColumnWidth;
		
		private bool _ValueFunctionExecType;
		
		private string _SortExpression;
		
		private EntitySet<MM_FormFieldAttribute> _MM_FormFieldAttributes;
		
		private EntityRef<MM_ObjectProperty> _MM_ObjectProperty;
		
		private EntityRef<MM_FormFieldGroup> _MM_FormFieldGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormFieldIDChanging(int value);
    partial void OnFormFieldIDChanged();
    partial void OnObjectPropertyIDChanging(int value);
    partial void OnObjectPropertyIDChanged();
    partial void OnControlNameChanging(System.Nullable<int> value);
    partial void OnControlNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnFormFieldGroupIDChanging(System.Nullable<int> value);
    partial void OnFormFieldGroupIDChanged();
    partial void OnShowInListChanging(bool value);
    partial void OnShowInListChanged();
    partial void OnShowInEditChanging(bool value);
    partial void OnShowInEditChanged();
    partial void OnShowInViewChanging(bool value);
    partial void OnShowInViewChanged();
    partial void OnValueFunctionChanging(string value);
    partial void OnValueFunctionChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnListColumnWidthChanging(string value);
    partial void OnListColumnWidthChanged();
    partial void OnValueFunctionExecTypeChanging(bool value);
    partial void OnValueFunctionExecTypeChanged();
    partial void OnSortExpressionChanging(string value);
    partial void OnSortExpressionChanged();
    #endregion
		
		public MM_FormField()
		{
			this._MM_FormFieldAttributes = new EntitySet<MM_FormFieldAttribute>(new Action<MM_FormFieldAttribute>(this.attach_MM_FormFieldAttributes), new Action<MM_FormFieldAttribute>(this.detach_MM_FormFieldAttributes));
			this._MM_ObjectProperty = default(EntityRef<MM_ObjectProperty>);
			this._MM_FormFieldGroup = default(EntityRef<MM_FormFieldGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFieldID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormFieldID
		{
			get
			{
				return this._FormFieldID;
			}
			set
			{
				if ((this._FormFieldID != value))
				{
					this.OnFormFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FormFieldID = value;
					this.SendPropertyChanged("FormFieldID");
					this.OnFormFieldIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectPropertyID", DbType="Int NOT NULL")]
		public int ObjectPropertyID
		{
			get
			{
				return this._ObjectPropertyID;
			}
			set
			{
				if ((this._ObjectPropertyID != value))
				{
					if (this._MM_ObjectProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectPropertyID = value;
					this.SendPropertyChanged("ObjectPropertyID");
					this.OnObjectPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlName", DbType="Int")]
		public System.Nullable<int> ControlName
		{
			get
			{
				return this._ControlName;
			}
			set
			{
				if ((this._ControlName != value))
				{
					this.OnControlNameChanging(value);
					this.SendPropertyChanging();
					this._ControlName = value;
					this.SendPropertyChanged("ControlName");
					this.OnControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NVarChar(255)")]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(1024)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFieldGroupID", DbType="Int")]
		public System.Nullable<int> FormFieldGroupID
		{
			get
			{
				return this._FormFieldGroupID;
			}
			set
			{
				if ((this._FormFieldGroupID != value))
				{
					if (this._MM_FormFieldGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormFieldGroupIDChanging(value);
					this.SendPropertyChanging();
					this._FormFieldGroupID = value;
					this.SendPropertyChanged("FormFieldGroupID");
					this.OnFormFieldGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInList", DbType="Bit NOT NULL")]
		public bool ShowInList
		{
			get
			{
				return this._ShowInList;
			}
			set
			{
				if ((this._ShowInList != value))
				{
					this.OnShowInListChanging(value);
					this.SendPropertyChanging();
					this._ShowInList = value;
					this.SendPropertyChanged("ShowInList");
					this.OnShowInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInEdit", DbType="Bit NOT NULL")]
		public bool ShowInEdit
		{
			get
			{
				return this._ShowInEdit;
			}
			set
			{
				if ((this._ShowInEdit != value))
				{
					this.OnShowInEditChanging(value);
					this.SendPropertyChanging();
					this._ShowInEdit = value;
					this.SendPropertyChanged("ShowInEdit");
					this.OnShowInEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInView", DbType="Bit NOT NULL")]
		public bool ShowInView
		{
			get
			{
				return this._ShowInView;
			}
			set
			{
				if ((this._ShowInView != value))
				{
					this.OnShowInViewChanging(value);
					this.SendPropertyChanging();
					this._ShowInView = value;
					this.SendPropertyChanged("ShowInView");
					this.OnShowInViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFunction", DbType="NVarChar(1024)")]
		public string ValueFunction
		{
			get
			{
				return this._ValueFunction;
			}
			set
			{
				if ((this._ValueFunction != value))
				{
					this.OnValueFunctionChanging(value);
					this.SendPropertyChanging();
					this._ValueFunction = value;
					this.SendPropertyChanged("ValueFunction");
					this.OnValueFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListColumnWidth", DbType="NVarChar(1024)")]
		public string ListColumnWidth
		{
			get
			{
				return this._ListColumnWidth;
			}
			set
			{
				if ((this._ListColumnWidth != value))
				{
					this.OnListColumnWidthChanging(value);
					this.SendPropertyChanging();
					this._ListColumnWidth = value;
					this.SendPropertyChanged("ListColumnWidth");
					this.OnListColumnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFunctionExecType", DbType="Bit NOT NULL")]
		public bool ValueFunctionExecType
		{
			get
			{
				return this._ValueFunctionExecType;
			}
			set
			{
				if ((this._ValueFunctionExecType != value))
				{
					this.OnValueFunctionExecTypeChanging(value);
					this.SendPropertyChanging();
					this._ValueFunctionExecType = value;
					this.SendPropertyChanged("ValueFunctionExecType");
					this.OnValueFunctionExecTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortExpression", DbType="NVarChar(1024)")]
		public string SortExpression
		{
			get
			{
				return this._SortExpression;
			}
			set
			{
				if ((this._SortExpression != value))
				{
					this.OnSortExpressionChanging(value);
					this.SendPropertyChanging();
					this._SortExpression = value;
					this.SendPropertyChanged("SortExpression");
					this.OnSortExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormField_MM_FormFieldAttribute", Storage="_MM_FormFieldAttributes", ThisKey="FormFieldID", OtherKey="FormFieldID")]
		public EntitySet<MM_FormFieldAttribute> MM_FormFieldAttributes
		{
			get
			{
				return this._MM_FormFieldAttributes;
			}
			set
			{
				this._MM_FormFieldAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_FormField", Storage="_MM_ObjectProperty", ThisKey="ObjectPropertyID", OtherKey="ObjectPropertyID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectProperty MM_ObjectProperty
		{
			get
			{
				return this._MM_ObjectProperty.Entity;
			}
			set
			{
				MM_ObjectProperty previousValue = this._MM_ObjectProperty.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectProperty.Entity = null;
						previousValue.MM_FormField = null;
					}
					this._MM_ObjectProperty.Entity = value;
					if ((value != null))
					{
						value.MM_FormField = this;
						this._ObjectPropertyID = value.ObjectPropertyID;
					}
					else
					{
						this._ObjectPropertyID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormFieldGroup_MM_FormField", Storage="_MM_FormFieldGroup", ThisKey="FormFieldGroupID", OtherKey="FormFieldGroupID", IsForeignKey=true)]
		public MM_FormFieldGroup MM_FormFieldGroup
		{
			get
			{
				return this._MM_FormFieldGroup.Entity;
			}
			set
			{
				MM_FormFieldGroup previousValue = this._MM_FormFieldGroup.Entity;
				if (((previousValue != value) 
							|| (this._MM_FormFieldGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_FormFieldGroup.Entity = null;
						previousValue.MM_FormFields.Remove(this);
					}
					this._MM_FormFieldGroup.Entity = value;
					if ((value != null))
					{
						value.MM_FormFields.Add(this);
						this._FormFieldGroupID = value.FormFieldGroupID;
					}
					else
					{
						this._FormFieldGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_FormFieldGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_FormFieldAttributes(MM_FormFieldAttribute entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormField = this;
		}
		
		private void detach_MM_FormFieldAttributes(MM_FormFieldAttribute entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormField = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_CodifierValue")]
	public partial class MM_CodifierValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodifierValueID;
		
		private int _CodifierID;
		
		private string _Title;
		
		private string _Code;
		
		private string _SysName;
		
		private int _SeqNo;
		
		private EntityRef<MM_Codifier> _MM_Codifier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodifierValueIDChanging(int value);
    partial void OnCodifierValueIDChanged();
    partial void OnCodifierIDChanging(int value);
    partial void OnCodifierIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    #endregion
		
		public MM_CodifierValue()
		{
			this._MM_Codifier = default(EntityRef<MM_Codifier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodifierValueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodifierValueID
		{
			get
			{
				return this._CodifierValueID;
			}
			set
			{
				if ((this._CodifierValueID != value))
				{
					this.OnCodifierValueIDChanging(value);
					this.SendPropertyChanging();
					this._CodifierValueID = value;
					this.SendPropertyChanged("CodifierValueID");
					this.OnCodifierValueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodifierID", DbType="Int NOT NULL")]
		public int CodifierID
		{
			get
			{
				return this._CodifierID;
			}
			set
			{
				if ((this._CodifierID != value))
				{
					if (this._MM_Codifier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodifierIDChanging(value);
					this.SendPropertyChanging();
					this._CodifierID = value;
					this.SendPropertyChanged("CodifierID");
					this.OnCodifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Codifier_MM_CodifierValue", Storage="_MM_Codifier", ThisKey="CodifierID", OtherKey="CodifierID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_Codifier MM_Codifier
		{
			get
			{
				return this._MM_Codifier.Entity;
			}
			set
			{
				MM_Codifier previousValue = this._MM_Codifier.Entity;
				if (((previousValue != value) 
							|| (this._MM_Codifier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Codifier.Entity = null;
						previousValue.MM_CodifierValues.Remove(this);
					}
					this._MM_Codifier.Entity = value;
					if ((value != null))
					{
						value.MM_CodifierValues.Add(this);
						this._CodifierID = value.CodifierID;
					}
					else
					{
						this._CodifierID = default(int);
					}
					this.SendPropertyChanged("MM_Codifier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_Codifier")]
	public partial class MM_Codifier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CodifierID;
		
		private string _Title;
		
		private string _SysName;
		
		private int _PackageID;
		
		private System.Guid _Guid;
		
		private EntitySet<MM_ObjectProperty> _MM_ObjectProperties;
		
		private EntitySet<MM_CodifierValue> _MM_CodifierValues;
		
		private EntityRef<MM_Package> _MM_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodifierIDChanging(int value);
    partial void OnCodifierIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    #endregion
		
		public MM_Codifier()
		{
			this._MM_ObjectProperties = new EntitySet<MM_ObjectProperty>(new Action<MM_ObjectProperty>(this.attach_MM_ObjectProperties), new Action<MM_ObjectProperty>(this.detach_MM_ObjectProperties));
			this._MM_CodifierValues = new EntitySet<MM_CodifierValue>(new Action<MM_CodifierValue>(this.attach_MM_CodifierValues), new Action<MM_CodifierValue>(this.detach_MM_CodifierValues));
			this._MM_Package = default(EntityRef<MM_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodifierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CodifierID
		{
			get
			{
				return this._CodifierID;
			}
			set
			{
				if ((this._CodifierID != value))
				{
					this.OnCodifierIDChanging(value);
					this.SendPropertyChanging();
					this._CodifierID = value;
					this.SendPropertyChanged("CodifierID");
					this.OnCodifierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._MM_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Codifier_MM_ObjectProperty", Storage="_MM_ObjectProperties", ThisKey="CodifierID", OtherKey="CodifierID")]
		public EntitySet<MM_ObjectProperty> MM_ObjectProperties
		{
			get
			{
				return this._MM_ObjectProperties;
			}
			set
			{
				this._MM_ObjectProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Codifier_MM_CodifierValue", Storage="_MM_CodifierValues", ThisKey="CodifierID", OtherKey="CodifierID")]
		public EntitySet<MM_CodifierValue> MM_CodifierValues
		{
			get
			{
				return this._MM_CodifierValues;
			}
			set
			{
				this._MM_CodifierValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_Codifier", Storage="_MM_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_Package MM_Package
		{
			get
			{
				return this._MM_Package.Entity;
			}
			set
			{
				MM_Package previousValue = this._MM_Package.Entity;
				if (((previousValue != value) 
							|| (this._MM_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Package.Entity = null;
						previousValue.MM_Codifiers.Remove(this);
					}
					this._MM_Package.Entity = value;
					if ((value != null))
					{
						value.MM_Codifiers.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("MM_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.MM_Codifier = this;
		}
		
		private void detach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.MM_Codifier = null;
		}
		
		private void attach_MM_CodifierValues(MM_CodifierValue entity)
		{
			this.SendPropertyChanging();
			entity.MM_Codifier = this;
		}
		
		private void detach_MM_CodifierValues(MM_CodifierValue entity)
		{
			this.SendPropertyChanging();
			entity.MM_Codifier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_MethodGroup")]
	public partial class MM_MethodGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MethodGroupID;
		
		private int _ObjectTypeID;
		
		private string _SysName;
		
		private EntitySet<MM_MethodGroupItem> _MM_MethodGroupItems;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMethodGroupIDChanging(int value);
    partial void OnMethodGroupIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    #endregion
		
		public MM_MethodGroup()
		{
			this._MM_MethodGroupItems = new EntitySet<MM_MethodGroupItem>(new Action<MM_MethodGroupItem>(this.attach_MM_MethodGroupItems), new Action<MM_MethodGroupItem>(this.detach_MM_MethodGroupItems));
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MethodGroupID
		{
			get
			{
				return this._MethodGroupID;
			}
			set
			{
				if ((this._MethodGroupID != value))
				{
					this.OnMethodGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MethodGroupID = value;
					this.SendPropertyChanged("MethodGroupID");
					this.OnMethodGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_MethodGroup_MM_MethodGroupItem", Storage="_MM_MethodGroupItems", ThisKey="MethodGroupID", OtherKey="MethodGroupID")]
		public EntitySet<MM_MethodGroupItem> MM_MethodGroupItems
		{
			get
			{
				return this._MM_MethodGroupItems;
			}
			set
			{
				this._MM_MethodGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_MethodGroup", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_MethodGroups.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_MethodGroups.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MM_MethodGroup = this;
		}
		
		private void detach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MM_MethodGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_MethodGroupItem")]
	public partial class MM_MethodGroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MethodGroupItemID;
		
		private int _MethodGroupID;
		
		private System.Nullable<int> _MethodID;
		
		private string _Title;
		
		private bool _IsSeparator;
		
		private System.Nullable<int> _ParentMethodGroupItemID;
		
		private int _SeqNo;
		
		private EntitySet<MM_MethodGroupItem> _MM_MethodGroupItems;
		
		private EntityRef<MM_MethodGroup> _MM_MethodGroup;
		
		private EntityRef<MM_MethodGroupItem> _ParentMethodGroupItem;
		
		private EntityRef<MM_Method> _MM_Method;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMethodGroupItemIDChanging(int value);
    partial void OnMethodGroupItemIDChanged();
    partial void OnMethodGroupIDChanging(int value);
    partial void OnMethodGroupIDChanged();
    partial void OnMethodIDChanging(System.Nullable<int> value);
    partial void OnMethodIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsSeparatorChanging(bool value);
    partial void OnIsSeparatorChanged();
    partial void OnParentMethodGroupItemIDChanging(System.Nullable<int> value);
    partial void OnParentMethodGroupItemIDChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    #endregion
		
		public MM_MethodGroupItem()
		{
			this._MM_MethodGroupItems = new EntitySet<MM_MethodGroupItem>(new Action<MM_MethodGroupItem>(this.attach_MM_MethodGroupItems), new Action<MM_MethodGroupItem>(this.detach_MM_MethodGroupItems));
			this._MM_MethodGroup = default(EntityRef<MM_MethodGroup>);
			this._ParentMethodGroupItem = default(EntityRef<MM_MethodGroupItem>);
			this._MM_Method = default(EntityRef<MM_Method>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodGroupItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MethodGroupItemID
		{
			get
			{
				return this._MethodGroupItemID;
			}
			set
			{
				if ((this._MethodGroupItemID != value))
				{
					this.OnMethodGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._MethodGroupItemID = value;
					this.SendPropertyChanged("MethodGroupItemID");
					this.OnMethodGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodGroupID", DbType="Int NOT NULL")]
		public int MethodGroupID
		{
			get
			{
				return this._MethodGroupID;
			}
			set
			{
				if ((this._MethodGroupID != value))
				{
					if (this._MM_MethodGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMethodGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MethodGroupID = value;
					this.SendPropertyChanged("MethodGroupID");
					this.OnMethodGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodID", DbType="Int")]
		public System.Nullable<int> MethodID
		{
			get
			{
				return this._MethodID;
			}
			set
			{
				if ((this._MethodID != value))
				{
					if (this._MM_Method.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMethodIDChanging(value);
					this.SendPropertyChanging();
					this._MethodID = value;
					this.SendPropertyChanged("MethodID");
					this.OnMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSeparator", DbType="Bit NOT NULL")]
		public bool IsSeparator
		{
			get
			{
				return this._IsSeparator;
			}
			set
			{
				if ((this._IsSeparator != value))
				{
					this.OnIsSeparatorChanging(value);
					this.SendPropertyChanging();
					this._IsSeparator = value;
					this.SendPropertyChanged("IsSeparator");
					this.OnIsSeparatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMethodGroupItemID", DbType="Int")]
		public System.Nullable<int> ParentMethodGroupItemID
		{
			get
			{
				return this._ParentMethodGroupItemID;
			}
			set
			{
				if ((this._ParentMethodGroupItemID != value))
				{
					if (this._ParentMethodGroupItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMethodGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._ParentMethodGroupItemID = value;
					this.SendPropertyChanged("ParentMethodGroupItemID");
					this.OnParentMethodGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_MethodGroupItem_MM_MethodGroupItem", Storage="_MM_MethodGroupItems", ThisKey="MethodGroupItemID", OtherKey="ParentMethodGroupItemID")]
		public EntitySet<MM_MethodGroupItem> MM_MethodGroupItems
		{
			get
			{
				return this._MM_MethodGroupItems;
			}
			set
			{
				this._MM_MethodGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_MethodGroup_MM_MethodGroupItem", Storage="_MM_MethodGroup", ThisKey="MethodGroupID", OtherKey="MethodGroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_MethodGroup MM_MethodGroup
		{
			get
			{
				return this._MM_MethodGroup.Entity;
			}
			set
			{
				MM_MethodGroup previousValue = this._MM_MethodGroup.Entity;
				if (((previousValue != value) 
							|| (this._MM_MethodGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_MethodGroup.Entity = null;
						previousValue.MM_MethodGroupItems.Remove(this);
					}
					this._MM_MethodGroup.Entity = value;
					if ((value != null))
					{
						value.MM_MethodGroupItems.Add(this);
						this._MethodGroupID = value.MethodGroupID;
					}
					else
					{
						this._MethodGroupID = default(int);
					}
					this.SendPropertyChanged("MM_MethodGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_MethodGroupItem_MM_MethodGroupItem", Storage="_ParentMethodGroupItem", ThisKey="ParentMethodGroupItemID", OtherKey="MethodGroupItemID", IsForeignKey=true)]
		public MM_MethodGroupItem ParentMethodGroupItem
		{
			get
			{
				return this._ParentMethodGroupItem.Entity;
			}
			set
			{
				MM_MethodGroupItem previousValue = this._ParentMethodGroupItem.Entity;
				if (((previousValue != value) 
							|| (this._ParentMethodGroupItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentMethodGroupItem.Entity = null;
						previousValue.MM_MethodGroupItems.Remove(this);
					}
					this._ParentMethodGroupItem.Entity = value;
					if ((value != null))
					{
						value.MM_MethodGroupItems.Add(this);
						this._ParentMethodGroupItemID = value.MethodGroupItemID;
					}
					else
					{
						this._ParentMethodGroupItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentMethodGroupItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Method_MM_MethodGroupItem", Storage="_MM_Method", ThisKey="MethodID", OtherKey="MethodID", IsForeignKey=true)]
		public MM_Method MM_Method
		{
			get
			{
				return this._MM_Method.Entity;
			}
			set
			{
				MM_Method previousValue = this._MM_Method.Entity;
				if (((previousValue != value) 
							|| (this._MM_Method.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Method.Entity = null;
						previousValue.MM_MethodGroupItems.Remove(this);
					}
					this._MM_Method.Entity = value;
					if ((value != null))
					{
						value.MM_MethodGroupItems.Add(this);
						this._MethodID = value.MethodID;
					}
					else
					{
						this._MethodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_Method");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentMethodGroupItem = this;
		}
		
		private void detach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.ParentMethodGroupItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_Method")]
	public partial class MM_Method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MethodID;
		
		private string _SysName;
		
		private string _Title;
		
		private int _SeqNo;
		
		private int _ObjectTypeID;
		
		private System.Guid _Guid;
		
		private System.Nullable<int> _FormViewID;
		
		private bool _IsDefault;
		
		private string _Icon;
		
		private string _Code;
		
		private string _Parameters;
		
		private string _ViewPath;
		
		private string _PredicateCode;
		
		private string _Comment;
		
		private EntitySet<MM_MethodGroupItem> _MM_MethodGroupItems;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
		private EntityRef<MM_FormView> _MM_FormView;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMethodIDChanging(int value);
    partial void OnMethodIDChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnFormViewIDChanging(System.Nullable<int> value);
    partial void OnFormViewIDChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnParametersChanging(string value);
    partial void OnParametersChanged();
    partial void OnViewPathChanging(string value);
    partial void OnViewPathChanged();
    partial void OnPredicateCodeChanging(string value);
    partial void OnPredicateCodeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public MM_Method()
		{
			this._MM_MethodGroupItems = new EntitySet<MM_MethodGroupItem>(new Action<MM_MethodGroupItem>(this.attach_MM_MethodGroupItems), new Action<MM_MethodGroupItem>(this.detach_MM_MethodGroupItems));
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			this._MM_FormView = default(EntityRef<MM_FormView>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MethodID
		{
			get
			{
				return this._MethodID;
			}
			set
			{
				if ((this._MethodID != value))
				{
					this.OnMethodIDChanging(value);
					this.SendPropertyChanging();
					this._MethodID = value;
					this.SendPropertyChanged("MethodID");
					this.OnMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormViewID", DbType="Int")]
		public System.Nullable<int> FormViewID
		{
			get
			{
				return this._FormViewID;
			}
			set
			{
				if ((this._FormViewID != value))
				{
					if (this._MM_FormView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormViewIDChanging(value);
					this.SendPropertyChanging();
					this._FormViewID = value;
					this.SendPropertyChanged("FormViewID");
					this.OnFormViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(255)")]
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="VarChar(MAX)")]
		public string Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewPath", DbType="NVarChar(255)")]
		public string ViewPath
		{
			get
			{
				return this._ViewPath;
			}
			set
			{
				if ((this._ViewPath != value))
				{
					this.OnViewPathChanging(value);
					this.SendPropertyChanging();
					this._ViewPath = value;
					this.SendPropertyChanged("ViewPath");
					this.OnViewPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PredicateCode", DbType="NVarChar(MAX)")]
		public string PredicateCode
		{
			get
			{
				return this._PredicateCode;
			}
			set
			{
				if ((this._PredicateCode != value))
				{
					this.OnPredicateCodeChanging(value);
					this.SendPropertyChanging();
					this._PredicateCode = value;
					this.SendPropertyChanged("PredicateCode");
					this.OnPredicateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Method_MM_MethodGroupItem", Storage="_MM_MethodGroupItems", ThisKey="MethodID", OtherKey="MethodID")]
		public EntitySet<MM_MethodGroupItem> MM_MethodGroupItems
		{
			get
			{
				return this._MM_MethodGroupItems;
			}
			set
			{
				this._MM_MethodGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_Method", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_Methods.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_Methods.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormView_MM_Method", Storage="_MM_FormView", ThisKey="FormViewID", OtherKey="FormViewID", IsForeignKey=true)]
		public MM_FormView MM_FormView
		{
			get
			{
				return this._MM_FormView.Entity;
			}
			set
			{
				MM_FormView previousValue = this._MM_FormView.Entity;
				if (((previousValue != value) 
							|| (this._MM_FormView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_FormView.Entity = null;
						previousValue.MM_Methods.Remove(this);
					}
					this._MM_FormView.Entity = value;
					if ((value != null))
					{
						value.MM_Methods.Add(this);
						this._FormViewID = value.FormViewID;
					}
					else
					{
						this._FormViewID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_FormView");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MM_Method = this;
		}
		
		private void detach_MM_MethodGroupItems(MM_MethodGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MM_Method = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_FormFieldGroup")]
	public partial class MM_FormFieldGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormFieldGroupID;
		
		private string _Title;
		
		private int _ObjectTypeID;
		
		private int _SeqNo;
		
		private System.Nullable<int> _SelectObjectPropertyID;
		
		private string _SelectObjectPrefix;
		
		private string _SelectObjectClass;
		
		private bool _ShowTitle;
		
		private string _SelectObjectDataTextField;
		
		private string _SelectObjectFilter;
		
		private string _SelectObjectSearchExpression;
		
		private EntitySet<MM_FormField> _MM_FormFields;
		
		private EntityRef<MM_ObjectProperty> _MM_ObjectProperty;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormFieldGroupIDChanging(int value);
    partial void OnFormFieldGroupIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnSelectObjectPropertyIDChanging(System.Nullable<int> value);
    partial void OnSelectObjectPropertyIDChanged();
    partial void OnSelectObjectPrefixChanging(string value);
    partial void OnSelectObjectPrefixChanged();
    partial void OnSelectObjectClassChanging(string value);
    partial void OnSelectObjectClassChanged();
    partial void OnShowTitleChanging(bool value);
    partial void OnShowTitleChanged();
    partial void OnSelectObjectDataTextFieldChanging(string value);
    partial void OnSelectObjectDataTextFieldChanged();
    partial void OnSelectObjectFilterChanging(string value);
    partial void OnSelectObjectFilterChanged();
    partial void OnSelectObjectSearchExpressionChanging(string value);
    partial void OnSelectObjectSearchExpressionChanged();
    #endregion
		
		public MM_FormFieldGroup()
		{
			this._MM_FormFields = new EntitySet<MM_FormField>(new Action<MM_FormField>(this.attach_MM_FormFields), new Action<MM_FormField>(this.detach_MM_FormFields));
			this._MM_ObjectProperty = default(EntityRef<MM_ObjectProperty>);
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormFieldGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormFieldGroupID
		{
			get
			{
				return this._FormFieldGroupID;
			}
			set
			{
				if ((this._FormFieldGroupID != value))
				{
					this.OnFormFieldGroupIDChanging(value);
					this.SendPropertyChanging();
					this._FormFieldGroupID = value;
					this.SendPropertyChanged("FormFieldGroupID");
					this.OnFormFieldGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectPropertyID", DbType="Int")]
		public System.Nullable<int> SelectObjectPropertyID
		{
			get
			{
				return this._SelectObjectPropertyID;
			}
			set
			{
				if ((this._SelectObjectPropertyID != value))
				{
					if (this._MM_ObjectProperty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSelectObjectPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectPropertyID = value;
					this.SendPropertyChanged("SelectObjectPropertyID");
					this.OnSelectObjectPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectPrefix", DbType="NVarChar(255)")]
		public string SelectObjectPrefix
		{
			get
			{
				return this._SelectObjectPrefix;
			}
			set
			{
				if ((this._SelectObjectPrefix != value))
				{
					this.OnSelectObjectPrefixChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectPrefix = value;
					this.SendPropertyChanged("SelectObjectPrefix");
					this.OnSelectObjectPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectClass", DbType="NVarChar(255)")]
		public string SelectObjectClass
		{
			get
			{
				return this._SelectObjectClass;
			}
			set
			{
				if ((this._SelectObjectClass != value))
				{
					this.OnSelectObjectClassChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectClass = value;
					this.SendPropertyChanged("SelectObjectClass");
					this.OnSelectObjectClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTitle", DbType="Bit NOT NULL")]
		public bool ShowTitle
		{
			get
			{
				return this._ShowTitle;
			}
			set
			{
				if ((this._ShowTitle != value))
				{
					this.OnShowTitleChanging(value);
					this.SendPropertyChanging();
					this._ShowTitle = value;
					this.SendPropertyChanged("ShowTitle");
					this.OnShowTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectDataTextField", DbType="NVarChar(255)")]
		public string SelectObjectDataTextField
		{
			get
			{
				return this._SelectObjectDataTextField;
			}
			set
			{
				if ((this._SelectObjectDataTextField != value))
				{
					this.OnSelectObjectDataTextFieldChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectDataTextField = value;
					this.SendPropertyChanged("SelectObjectDataTextField");
					this.OnSelectObjectDataTextFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectFilter", DbType="NVarChar(MAX)")]
		public string SelectObjectFilter
		{
			get
			{
				return this._SelectObjectFilter;
			}
			set
			{
				if ((this._SelectObjectFilter != value))
				{
					this.OnSelectObjectFilterChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectFilter = value;
					this.SendPropertyChanged("SelectObjectFilter");
					this.OnSelectObjectFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectObjectSearchExpression", DbType="NVarChar(MAX)")]
		public string SelectObjectSearchExpression
		{
			get
			{
				return this._SelectObjectSearchExpression;
			}
			set
			{
				if ((this._SelectObjectSearchExpression != value))
				{
					this.OnSelectObjectSearchExpressionChanging(value);
					this.SendPropertyChanging();
					this._SelectObjectSearchExpression = value;
					this.SendPropertyChanged("SelectObjectSearchExpression");
					this.OnSelectObjectSearchExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormFieldGroup_MM_FormField", Storage="_MM_FormFields", ThisKey="FormFieldGroupID", OtherKey="FormFieldGroupID")]
		public EntitySet<MM_FormField> MM_FormFields
		{
			get
			{
				return this._MM_FormFields;
			}
			set
			{
				this._MM_FormFields.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectProperty_MM_FormFieldGroup", Storage="_MM_ObjectProperty", ThisKey="SelectObjectPropertyID", OtherKey="ObjectPropertyID", IsForeignKey=true)]
		public MM_ObjectProperty MM_ObjectProperty
		{
			get
			{
				return this._MM_ObjectProperty.Entity;
			}
			set
			{
				MM_ObjectProperty previousValue = this._MM_ObjectProperty.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectProperty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectProperty.Entity = null;
						previousValue.MM_FormFieldGroups.Remove(this);
					}
					this._MM_ObjectProperty.Entity = value;
					if ((value != null))
					{
						value.MM_FormFieldGroups.Add(this);
						this._SelectObjectPropertyID = value.ObjectPropertyID;
					}
					else
					{
						this._SelectObjectPropertyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_ObjectProperty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_FormFieldGroup", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_FormFieldGroups.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_FormFieldGroups.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_FormFields(MM_FormField entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormFieldGroup = this;
		}
		
		private void detach_MM_FormFields(MM_FormField entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormFieldGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_ObjectType")]
	public partial class MM_ObjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectTypeID;
		
		private string _Title;
		
		private string _SysName;
		
		private bool _IsEnableSPM;
		
		private int _PackageID;
		
		private System.Guid _Guid;
		
		private bool _IsSeparateTable;
		
		private bool _IsTemplate;
		
		private string _TitlePlural;
		
		private System.Nullable<int> _BaseObjectTypeID;
		
		private string _DefaultOrderBy;
		
		private string _LogicalDelete;
		
		private bool _IsEnableUserViews;
		
		private bool _IsReplicate;
		
		private string _SecurityPackageSystemName;
		
		private bool _IsEnableObjectHistory;
		
		private string _Interface;
		
		private string _HistoryTypeCode;
		
		private bool _IsDataReplicated;
		
		private int _SeqNo;
		
		private string _Description;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private EntitySet<MM_ObjectProperty> _MM_ObjectProperties;
		
		private EntitySet<MM_ObjectProperty> _MM_ObjectProperties1;
		
		private EntitySet<MM_MethodGroup> _MM_MethodGroups;
		
		private EntitySet<MM_Method> _MM_Methods;
		
		private EntitySet<MM_FormFieldGroup> _MM_FormFieldGroups;
		
		private EntitySet<MM_ObjectType> _MM_ObjectTypes;
		
		private EntitySet<MM_DataValidation> _MM_DataValidations;
		
		private EntitySet<MM_FormView> _MM_FormViews;
		
		private EntitySet<HST_MM_FormView> _HST_MM_FormViews;
		
		private EntityRef<MMS_ClassStereotype> _MMA_ClassAspect;
		
		private EntitySet<MM_ObjectTypeStereotype> _MM_ObjectTypeAspects;
		
		private EntitySet<WF_Workflow> _WF_Workflows;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType1;
		
		private EntityRef<MM_Package> _MM_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnIsEnableSPMChanging(bool value);
    partial void OnIsEnableSPMChanged();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnIsSeparateTableChanging(bool value);
    partial void OnIsSeparateTableChanged();
    partial void OnIsTemplateChanging(bool value);
    partial void OnIsTemplateChanged();
    partial void OnTitlePluralChanging(string value);
    partial void OnTitlePluralChanged();
    partial void OnBaseObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnBaseObjectTypeIDChanged();
    partial void OnDefaultOrderByChanging(string value);
    partial void OnDefaultOrderByChanged();
    partial void OnLogicalDeleteChanging(string value);
    partial void OnLogicalDeleteChanged();
    partial void OnIsEnableUserViewsChanging(bool value);
    partial void OnIsEnableUserViewsChanged();
    partial void OnIsReplicateChanging(bool value);
    partial void OnIsReplicateChanged();
    partial void OnSecurityPackageSystemNameChanging(string value);
    partial void OnSecurityPackageSystemNameChanged();
    partial void OnIsEnableObjectHistoryChanging(bool value);
    partial void OnIsEnableObjectHistoryChanged();
    partial void OnInterfaceChanging(string value);
    partial void OnInterfaceChanged();
    partial void OnHistoryTypeCodeChanging(string value);
    partial void OnHistoryTypeCodeChanged();
    partial void OnIsDataReplicatedChanging(bool value);
    partial void OnIsDataReplicatedChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    #endregion
		
		public MM_ObjectType()
		{
			this._MM_ObjectProperties = new EntitySet<MM_ObjectProperty>(new Action<MM_ObjectProperty>(this.attach_MM_ObjectProperties), new Action<MM_ObjectProperty>(this.detach_MM_ObjectProperties));
			this._MM_ObjectProperties1 = new EntitySet<MM_ObjectProperty>(new Action<MM_ObjectProperty>(this.attach_MM_ObjectProperties1), new Action<MM_ObjectProperty>(this.detach_MM_ObjectProperties1));
			this._MM_MethodGroups = new EntitySet<MM_MethodGroup>(new Action<MM_MethodGroup>(this.attach_MM_MethodGroups), new Action<MM_MethodGroup>(this.detach_MM_MethodGroups));
			this._MM_Methods = new EntitySet<MM_Method>(new Action<MM_Method>(this.attach_MM_Methods), new Action<MM_Method>(this.detach_MM_Methods));
			this._MM_FormFieldGroups = new EntitySet<MM_FormFieldGroup>(new Action<MM_FormFieldGroup>(this.attach_MM_FormFieldGroups), new Action<MM_FormFieldGroup>(this.detach_MM_FormFieldGroups));
			this._MM_ObjectTypes = new EntitySet<MM_ObjectType>(new Action<MM_ObjectType>(this.attach_MM_ObjectTypes), new Action<MM_ObjectType>(this.detach_MM_ObjectTypes));
			this._MM_DataValidations = new EntitySet<MM_DataValidation>(new Action<MM_DataValidation>(this.attach_MM_DataValidations), new Action<MM_DataValidation>(this.detach_MM_DataValidations));
			this._MM_FormViews = new EntitySet<MM_FormView>(new Action<MM_FormView>(this.attach_MM_FormViews), new Action<MM_FormView>(this.detach_MM_FormViews));
			this._HST_MM_FormViews = new EntitySet<HST_MM_FormView>(new Action<HST_MM_FormView>(this.attach_HST_MM_FormViews), new Action<HST_MM_FormView>(this.detach_HST_MM_FormViews));
			this._MMA_ClassAspect = default(EntityRef<MMS_ClassStereotype>);
			this._MM_ObjectTypeAspects = new EntitySet<MM_ObjectTypeStereotype>(new Action<MM_ObjectTypeStereotype>(this.attach_MM_ObjectTypeAspects), new Action<MM_ObjectTypeStereotype>(this.detach_MM_ObjectTypeAspects));
			this._WF_Workflows = new EntitySet<WF_Workflow>(new Action<WF_Workflow>(this.attach_WF_Workflows), new Action<WF_Workflow>(this.detach_WF_Workflows));
			this._MM_ObjectType1 = default(EntityRef<MM_ObjectType>);
			this._MM_Package = default(EntityRef<MM_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnableSPM", DbType="Bit NOT NULL")]
		public bool IsEnableSPM
		{
			get
			{
				return this._IsEnableSPM;
			}
			set
			{
				if ((this._IsEnableSPM != value))
				{
					this.OnIsEnableSPMChanging(value);
					this.SendPropertyChanging();
					this._IsEnableSPM = value;
					this.SendPropertyChanged("IsEnableSPM");
					this.OnIsEnableSPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int NOT NULL")]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._MM_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSeparateTable", DbType="Bit NOT NULL")]
		public bool IsSeparateTable
		{
			get
			{
				return this._IsSeparateTable;
			}
			set
			{
				if ((this._IsSeparateTable != value))
				{
					this.OnIsSeparateTableChanging(value);
					this.SendPropertyChanging();
					this._IsSeparateTable = value;
					this.SendPropertyChanged("IsSeparateTable");
					this.OnIsSeparateTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTemplate", DbType="Bit NOT NULL")]
		public bool IsTemplate
		{
			get
			{
				return this._IsTemplate;
			}
			set
			{
				if ((this._IsTemplate != value))
				{
					this.OnIsTemplateChanging(value);
					this.SendPropertyChanging();
					this._IsTemplate = value;
					this.SendPropertyChanged("IsTemplate");
					this.OnIsTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitlePlural", DbType="NVarChar(1024)")]
		public string TitlePlural
		{
			get
			{
				return this._TitlePlural;
			}
			set
			{
				if ((this._TitlePlural != value))
				{
					this.OnTitlePluralChanging(value);
					this.SendPropertyChanging();
					this._TitlePlural = value;
					this.SendPropertyChanged("TitlePlural");
					this.OnTitlePluralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseObjectTypeID", DbType="Int")]
		public System.Nullable<int> BaseObjectTypeID
		{
			get
			{
				return this._BaseObjectTypeID;
			}
			set
			{
				if ((this._BaseObjectTypeID != value))
				{
					if (this._MM_ObjectType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BaseObjectTypeID = value;
					this.SendPropertyChanged("BaseObjectTypeID");
					this.OnBaseObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultOrderBy", DbType="NVarChar(1024)")]
		public string DefaultOrderBy
		{
			get
			{
				return this._DefaultOrderBy;
			}
			set
			{
				if ((this._DefaultOrderBy != value))
				{
					this.OnDefaultOrderByChanging(value);
					this.SendPropertyChanging();
					this._DefaultOrderBy = value;
					this.SendPropertyChanged("DefaultOrderBy");
					this.OnDefaultOrderByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogicalDelete", DbType="NVarChar(MAX)")]
		public string LogicalDelete
		{
			get
			{
				return this._LogicalDelete;
			}
			set
			{
				if ((this._LogicalDelete != value))
				{
					this.OnLogicalDeleteChanging(value);
					this.SendPropertyChanging();
					this._LogicalDelete = value;
					this.SendPropertyChanged("LogicalDelete");
					this.OnLogicalDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnableUserViews", DbType="Bit NOT NULL")]
		public bool IsEnableUserViews
		{
			get
			{
				return this._IsEnableUserViews;
			}
			set
			{
				if ((this._IsEnableUserViews != value))
				{
					this.OnIsEnableUserViewsChanging(value);
					this.SendPropertyChanging();
					this._IsEnableUserViews = value;
					this.SendPropertyChanged("IsEnableUserViews");
					this.OnIsEnableUserViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReplicate", DbType="Bit NOT NULL")]
		public bool IsReplicate
		{
			get
			{
				return this._IsReplicate;
			}
			set
			{
				if ((this._IsReplicate != value))
				{
					this.OnIsReplicateChanging(value);
					this.SendPropertyChanging();
					this._IsReplicate = value;
					this.SendPropertyChanged("IsReplicate");
					this.OnIsReplicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityPackageSystemName", DbType="NVarChar(255) NULL")]
		public string SecurityPackageSystemName
		{
			get
			{
				return this._SecurityPackageSystemName;
			}
			set
			{
				if ((this._SecurityPackageSystemName != value))
				{
					this.OnSecurityPackageSystemNameChanging(value);
					this.SendPropertyChanging();
					this._SecurityPackageSystemName = value;
					this.SendPropertyChanged("SecurityPackageSystemName");
					this.OnSecurityPackageSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnableObjectHistory", DbType="Bit NOT NULL")]
		public bool IsEnableObjectHistory
		{
			get
			{
				return this._IsEnableObjectHistory;
			}
			set
			{
				if ((this._IsEnableObjectHistory != value))
				{
					this.OnIsEnableObjectHistoryChanging(value);
					this.SendPropertyChanging();
					this._IsEnableObjectHistory = value;
					this.SendPropertyChanged("IsEnableObjectHistory");
					this.OnIsEnableObjectHistoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interface", DbType="NVarChar(1024)")]
		public string Interface
		{
			get
			{
				return this._Interface;
			}
			set
			{
				if ((this._Interface != value))
				{
					this.OnInterfaceChanging(value);
					this.SendPropertyChanging();
					this._Interface = value;
					this.SendPropertyChanged("Interface");
					this.OnInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryTypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string HistoryTypeCode
		{
			get
			{
				return this._HistoryTypeCode;
			}
			set
			{
				if ((this._HistoryTypeCode != value))
				{
					this.OnHistoryTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._HistoryTypeCode = value;
					this.SendPropertyChanged("HistoryTypeCode");
					this.OnHistoryTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDataReplicated", DbType="Bit NOT NULL")]
		public bool IsDataReplicated
		{
			get
			{
				return this._IsDataReplicated;
			}
			set
			{
				if ((this._IsDataReplicated != value))
				{
					this.OnIsDataReplicatedChanging(value);
					this.SendPropertyChanging();
					this._IsDataReplicated = value;
					this.SendPropertyChanged("IsDataReplicated");
					this.OnIsDataReplicatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NULL")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectProperty", Storage="_MM_ObjectProperties", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_ObjectProperty> MM_ObjectProperties
		{
			get
			{
				return this._MM_ObjectProperties;
			}
			set
			{
				this._MM_ObjectProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectProperty1", Storage="_MM_ObjectProperties1", ThisKey="ObjectTypeID", OtherKey="RefObjectTypeID")]
		public EntitySet<MM_ObjectProperty> MM_ObjectProperties1
		{
			get
			{
				return this._MM_ObjectProperties1;
			}
			set
			{
				this._MM_ObjectProperties1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_MethodGroup", Storage="_MM_MethodGroups", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_MethodGroup> MM_MethodGroups
		{
			get
			{
				return this._MM_MethodGroups;
			}
			set
			{
				this._MM_MethodGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_Method", Storage="_MM_Methods", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_Method> MM_Methods
		{
			get
			{
				return this._MM_Methods;
			}
			set
			{
				this._MM_Methods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_FormFieldGroup", Storage="_MM_FormFieldGroups", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_FormFieldGroup> MM_FormFieldGroups
		{
			get
			{
				return this._MM_FormFieldGroups;
			}
			set
			{
				this._MM_FormFieldGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectType", Storage="_MM_ObjectTypes", ThisKey="ObjectTypeID", OtherKey="BaseObjectTypeID")]
		public EntitySet<MM_ObjectType> MM_ObjectTypes
		{
			get
			{
				return this._MM_ObjectTypes;
			}
			set
			{
				this._MM_ObjectTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_DataValidation", Storage="_MM_DataValidations", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_DataValidation> MM_DataValidations
		{
			get
			{
				return this._MM_DataValidations;
			}
			set
			{
				this._MM_DataValidations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_FormView", Storage="_MM_FormViews", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_FormView> MM_FormViews
		{
			get
			{
				return this._MM_FormViews;
			}
			set
			{
				this._MM_FormViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_HST_MM_FormView", Storage="_HST_MM_FormViews", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<HST_MM_FormView> HST_MM_FormViews
		{
			get
			{
				return this._HST_MM_FormViews;
			}
			set
			{
				this._HST_MM_FormViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MMS_ClassStereotype", Storage="_MMA_ClassAspect", ThisKey="ObjectTypeID", OtherKey="ClassStereotypeID", IsUnique=true, IsForeignKey=false)]
		public MMS_ClassStereotype MMA_ClassAspect
		{
			get
			{
				return this._MMA_ClassAspect.Entity;
			}
			set
			{
				MMS_ClassStereotype previousValue = this._MMA_ClassAspect.Entity;
				if (((previousValue != value) 
							|| (this._MMA_ClassAspect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MMA_ClassAspect.Entity = null;
						previousValue.MM_ObjectType = null;
					}
					this._MMA_ClassAspect.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectType = this;
					}
					this.SendPropertyChanged("MMA_ClassAspect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectTypeStereotype", Storage="_MM_ObjectTypeAspects", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<MM_ObjectTypeStereotype> MM_ObjectTypeStereotypes
		{
			get
			{
				return this._MM_ObjectTypeAspects;
			}
			set
			{
				this._MM_ObjectTypeAspects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_WF_Workflow", Storage="_WF_Workflows", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID")]
		public EntitySet<WF_Workflow> WF_Workflows
		{
			get
			{
				return this._WF_Workflows;
			}
			set
			{
				this._WF_Workflows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectType", Storage="_MM_ObjectType1", ThisKey="BaseObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType BaseObjectType
		{
			get
			{
				return this._MM_ObjectType1.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType1.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType1.Entity = null;
						previousValue.MM_ObjectTypes.Remove(this);
					}
					this._MM_ObjectType1.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectTypes.Add(this);
						this._BaseObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._BaseObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BaseObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_ObjectType", Storage="_MM_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_Package MM_Package
		{
			get
			{
				return this._MM_Package.Entity;
			}
			set
			{
				MM_Package previousValue = this._MM_Package.Entity;
				if (((previousValue != value) 
							|| (this._MM_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Package.Entity = null;
						previousValue.MM_ObjectTypes.Remove(this);
					}
					this._MM_Package.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectTypes.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(int);
					}
					this.SendPropertyChanged("MM_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_ObjectProperties(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_ObjectProperties1(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.RefObjectType = this;
		}
		
		private void detach_MM_ObjectProperties1(MM_ObjectProperty entity)
		{
			this.SendPropertyChanging();
			entity.RefObjectType = null;
		}
		
		private void attach_MM_MethodGroups(MM_MethodGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_MethodGroups(MM_MethodGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_Methods(MM_Method entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_Methods(MM_Method entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_FormFieldGroups(MM_FormFieldGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_FormFieldGroups(MM_FormFieldGroup entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_ObjectTypes(MM_ObjectType entity)
		{
			this.SendPropertyChanging();
			entity.BaseObjectType = this;
		}
		
		private void detach_MM_ObjectTypes(MM_ObjectType entity)
		{
			this.SendPropertyChanging();
			entity.BaseObjectType = null;
		}
		
		private void attach_MM_DataValidations(MM_DataValidation entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_DataValidations(MM_DataValidation entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_FormViews(MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_FormViews(MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_MM_ObjectTypeAspects(MM_ObjectTypeStereotype entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_MM_ObjectTypeAspects(MM_ObjectTypeStereotype entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
		
		private void attach_WF_Workflows(WF_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = this;
		}
		
		private void detach_WF_Workflows(WF_Workflow entity)
		{
			this.SendPropertyChanging();
			entity.MM_ObjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.N_ReplicationObject")]
	public partial class N_ReplicationObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ObjectTypeSysName;
		
		private string _ObjectID;
		
		private System.DateTime _ChangeDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeSysNameChanging(string value);
    partial void OnObjectTypeSysNameChanged();
    partial void OnObjectIDChanging(string value);
    partial void OnObjectIDChanged();
    partial void OnChangeDateChanging(System.DateTime value);
    partial void OnChangeDateChanged();
    #endregion
		
		public N_ReplicationObject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeSysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ObjectTypeSysName
		{
			get
			{
				return this._ObjectTypeSysName;
			}
			set
			{
				if ((this._ObjectTypeSysName != value))
				{
					this.OnObjectTypeSysNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeSysName = value;
					this.SendPropertyChanged("ObjectTypeSysName");
					this.OnObjectTypeSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime NOT NULL")]
		public System.DateTime ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPM_ActionAsso")]
	public partial class SPM_ActionAsso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionID;
		
		private int _ParentActionID;
		
		private EntityRef<SPM_Action> _SPM_Action;
		
		private EntityRef<SPM_Action> _ParentAction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnParentActionIDChanging(int value);
    partial void OnParentActionIDChanged();
    #endregion
		
		public SPM_ActionAsso()
		{
			this._SPM_Action = default(EntityRef<SPM_Action>);
			this._ParentAction = default(EntityRef<SPM_Action>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					if (this._SPM_Action.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentActionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ParentActionID
		{
			get
			{
				return this._ParentActionID;
			}
			set
			{
				if ((this._ParentActionID != value))
				{
					if (this._ParentAction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentActionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentActionID = value;
					this.SendPropertyChanged("ParentActionID");
					this.OnParentActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPM_Action_SPM_ActionAsso", Storage="_SPM_Action", ThisKey="ActionID", OtherKey="ActionID", IsForeignKey=true)]
		public SPM_Action SPM_Action
		{
			get
			{
				return this._SPM_Action.Entity;
			}
			set
			{
				SPM_Action previousValue = this._SPM_Action.Entity;
				if (((previousValue != value) 
							|| (this._SPM_Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPM_Action.Entity = null;
						previousValue.ParentActionAssos.Remove(this);
					}
					this._SPM_Action.Entity = value;
					if ((value != null))
					{
						value.ParentActionAssos.Add(this);
						this._ActionID = value.ActionID;
					}
					else
					{
						this._ActionID = default(int);
					}
					this.SendPropertyChanged("SPM_Action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPM_Action_SPM_ActionAsso1", Storage="_ParentAction", ThisKey="ParentActionID", OtherKey="ActionID", IsForeignKey=true)]
		public SPM_Action ParentAction
		{
			get
			{
				return this._ParentAction.Entity;
			}
			set
			{
				SPM_Action previousValue = this._ParentAction.Entity;
				if (((previousValue != value) 
							|| (this._ParentAction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentAction.Entity = null;
						previousValue.ChildActionAssos.Remove(this);
					}
					this._ParentAction.Entity = value;
					if ((value != null))
					{
						value.ChildActionAssos.Add(this);
						this._ParentActionID = value.ActionID;
					}
					else
					{
						this._ParentActionID = default(int);
					}
					this.SendPropertyChanged("ParentAction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_DataValidation")]
	public partial class MM_DataValidation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DataValidationID;
		
		private int _ObjectTypeID;
		
		private string _Expression;
		
		private string _DesignerData;
		
		private string _Message;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDataValidationIDChanging(int value);
    partial void OnDataValidationIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnExpressionChanging(string value);
    partial void OnExpressionChanged();
    partial void OnDesignerDataChanging(string value);
    partial void OnDesignerDataChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public MM_DataValidation()
		{
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataValidationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DataValidationID
		{
			get
			{
				return this._DataValidationID;
			}
			set
			{
				if ((this._DataValidationID != value))
				{
					this.OnDataValidationIDChanging(value);
					this.SendPropertyChanging();
					this._DataValidationID = value;
					this.SendPropertyChanged("DataValidationID");
					this.OnDataValidationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expression", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Expression
		{
			get
			{
				return this._Expression;
			}
			set
			{
				if ((this._Expression != value))
				{
					this.OnExpressionChanging(value);
					this.SendPropertyChanging();
					this._Expression = value;
					this.SendPropertyChanged("Expression");
					this.OnExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignerData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DesignerData
		{
			get
			{
				return this._DesignerData;
			}
			set
			{
				if ((this._DesignerData != value))
				{
					this.OnDesignerDataChanging(value);
					this.SendPropertyChanging();
					this._DesignerData = value;
					this.SendPropertyChanged("DesignerData");
					this.OnDesignerDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_DataValidation", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_DataValidations.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_DataValidations.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.N_RssFeed")]
	public partial class N_RssFeed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RssFeedID;
		
		private string _Copyright;
		
		private string _Description;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private string _ObjectTypeSysName;
		
		private string _Predicate;
		
		private string _PubDate;
		
		private string _SysName;
		
		private string _Title;
		
		private int _Ttl;
		
		private string _ViewFormSysName;
		
		private string _Author;
		
		private string _WebMaster;
		
		private string _LinkParams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRssFeedIDChanging(int value);
    partial void OnRssFeedIDChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnObjectTypeSysNameChanging(string value);
    partial void OnObjectTypeSysNameChanged();
    partial void OnPredicateChanging(string value);
    partial void OnPredicateChanged();
    partial void OnPubDateChanging(string value);
    partial void OnPubDateChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTtlChanging(int value);
    partial void OnTtlChanged();
    partial void OnViewFormSysNameChanging(string value);
    partial void OnViewFormSysNameChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnWebMasterChanging(string value);
    partial void OnWebMasterChanged();
    partial void OnLinkParamsChanging(string value);
    partial void OnLinkParamsChanged();
    #endregion
		
		public N_RssFeed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RssFeedID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RssFeedID
		{
			get
			{
				return this._RssFeedID;
			}
			set
			{
				if ((this._RssFeedID != value))
				{
					this.OnRssFeedIDChanging(value);
					this.SendPropertyChanging();
					this._RssFeedID = value;
					this.SendPropertyChanged("RssFeedID");
					this.OnRssFeedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeSysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ObjectTypeSysName
		{
			get
			{
				return this._ObjectTypeSysName;
			}
			set
			{
				if ((this._ObjectTypeSysName != value))
				{
					this.OnObjectTypeSysNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeSysName = value;
					this.SendPropertyChanged("ObjectTypeSysName");
					this.OnObjectTypeSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Predicate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Predicate
		{
			get
			{
				return this._Predicate;
			}
			set
			{
				if ((this._Predicate != value))
				{
					this.OnPredicateChanging(value);
					this.SendPropertyChanging();
					this._Predicate = value;
					this.SendPropertyChanged("Predicate");
					this.OnPredicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this.OnPubDateChanging(value);
					this.SendPropertyChanging();
					this._PubDate = value;
					this.SendPropertyChanged("PubDate");
					this.OnPubDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ttl", DbType="Int NOT NULL")]
		public int Ttl
		{
			get
			{
				return this._Ttl;
			}
			set
			{
				if ((this._Ttl != value))
				{
					this.OnTtlChanging(value);
					this.SendPropertyChanging();
					this._Ttl = value;
					this.SendPropertyChanged("Ttl");
					this.OnTtlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewFormSysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ViewFormSysName
		{
			get
			{
				return this._ViewFormSysName;
			}
			set
			{
				if ((this._ViewFormSysName != value))
				{
					this.OnViewFormSysNameChanging(value);
					this.SendPropertyChanging();
					this._ViewFormSysName = value;
					this.SendPropertyChanged("ViewFormSysName");
					this.OnViewFormSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebMaster", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WebMaster
		{
			get
			{
				return this._WebMaster;
			}
			set
			{
				if ((this._WebMaster != value))
				{
					this.OnWebMasterChanging(value);
					this.SendPropertyChanging();
					this._WebMaster = value;
					this.SendPropertyChanged("WebMaster");
					this.OnWebMasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkParams", DbType="NVarChar(255) NULL")]
		public string LinkParams
		{
			get
			{
				return this._LinkParams;
			}
			set
			{
				if ((this._LinkParams != value))
				{
					this.OnLinkParamsChanging(value);
					this.SendPropertyChanging();
					this._LinkParams = value;
					this.SendPropertyChanged("LinkParams");
					this.OnLinkParamsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_FormView")]
	public partial class MM_FormView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormViewID;
		
		private string _Title;
		
		private string _SysName;
		
		private string _ViewTemplate;
		
		private string _TemplateTypeCode;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _PackageID;
		
		private System.DateTime _LastModifiedDate;
		
		private System.Guid _Guid;
		
		private bool _IsCustom;
		
		private int _LastModifiedUserID;
		
		private bool _IsCaching;
		
		private string _CacheKeyParams;
		
		private int _CacheTimeout;
		
		private string _BaseClass;
		
		private EntitySet<MM_Method> _MM_Methods;
		
		private EntitySet<HST_MM_FormView> _HST_MM_FormViews;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
		private EntityRef<MM_Package> _MM_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormViewIDChanging(int value);
    partial void OnFormViewIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnViewTemplateChanging(string value);
    partial void OnViewTemplateChanged();
    partial void OnTemplateTypeCodeChanging(string value);
    partial void OnTemplateTypeCodeChanged();
    partial void OnObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnObjectTypeIDChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnIsCachingChanging(bool value);
    partial void OnIsCachingChanged();
    partial void OnCacheKeyParamsChanging(string value);
    partial void OnCacheKeyParamsChanged();
    partial void OnCacheTimeoutChanging(int value);
    partial void OnCacheTimeoutChanged();
    partial void OnBaseClassChanging(string value);
    partial void OnBaseClassChanged();
    #endregion
		
		public MM_FormView()
		{
			this._MM_Methods = new EntitySet<MM_Method>(new Action<MM_Method>(this.attach_MM_Methods), new Action<MM_Method>(this.detach_MM_Methods));
			this._HST_MM_FormViews = new EntitySet<HST_MM_FormView>(new Action<HST_MM_FormView>(this.attach_HST_MM_FormViews), new Action<HST_MM_FormView>(this.detach_HST_MM_FormViews));
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			this._MM_Package = default(EntityRef<MM_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormViewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormViewID
		{
			get
			{
				return this._FormViewID;
			}
			set
			{
				if ((this._FormViewID != value))
				{
					this.OnFormViewIDChanging(value);
					this.SendPropertyChanging();
					this._FormViewID = value;
					this.SendPropertyChanged("FormViewID");
					this.OnFormViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewTemplate", DbType="NVarChar(MAX) NOT NULL")]
		public string ViewTemplate
		{
			get
			{
				return this._ViewTemplate;
			}
			set
			{
				if ((this._ViewTemplate != value))
				{
					this.OnViewTemplateChanging(value);
					this.SendPropertyChanging();
					this._ViewTemplate = value;
					this.SendPropertyChanged("ViewTemplate");
					this.OnViewTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateTypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string TemplateTypeCode
		{
			get
			{
				return this._TemplateTypeCode;
			}
			set
			{
				if ((this._TemplateTypeCode != value))
				{
					this.OnTemplateTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TemplateTypeCode = value;
					this.SendPropertyChanged("TemplateTypeCode");
					this.OnTemplateTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._MM_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCaching", DbType="Bit NOT NULL")]
		public bool IsCaching
		{
			get
			{
				return this._IsCaching;
			}
			set
			{
				if ((this._IsCaching != value))
				{
					this.OnIsCachingChanging(value);
					this.SendPropertyChanging();
					this._IsCaching = value;
					this.SendPropertyChanged("IsCaching");
					this.OnIsCachingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheKeyParams", DbType="NVarChar(MAX) NULL")]
		public string CacheKeyParams
		{
			get
			{
				return this._CacheKeyParams;
			}
			set
			{
				if ((this._CacheKeyParams != value))
				{
					this.OnCacheKeyParamsChanging(value);
					this.SendPropertyChanging();
					this._CacheKeyParams = value;
					this.SendPropertyChanged("CacheKeyParams");
					this.OnCacheKeyParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheTimeout", DbType="Int NOT NULL")]
		public int CacheTimeout
		{
			get
			{
				return this._CacheTimeout;
			}
			set
			{
				if ((this._CacheTimeout != value))
				{
					this.OnCacheTimeoutChanging(value);
					this.SendPropertyChanging();
					this._CacheTimeout = value;
					this.SendPropertyChanged("CacheTimeout");
					this.OnCacheTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseClass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BaseClass
		{
			get
			{
				return this._BaseClass;
			}
			set
			{
				if ((this._BaseClass != value))
				{
					this.OnBaseClassChanging(value);
					this.SendPropertyChanging();
					this._BaseClass = value;
					this.SendPropertyChanged("BaseClass");
					this.OnBaseClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormView_MM_Method", Storage="_MM_Methods", ThisKey="FormViewID", OtherKey="FormViewID")]
		public EntitySet<MM_Method> MM_Methods
		{
			get
			{
				return this._MM_Methods;
			}
			set
			{
				this._MM_Methods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormView_HST_MM_FormView", Storage="_HST_MM_FormViews", ThisKey="FormViewID", OtherKey="FormViewID")]
		public EntitySet<HST_MM_FormView> HST_MM_FormViews
		{
			get
			{
				return this._HST_MM_FormViews;
			}
			set
			{
				this._HST_MM_FormViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_FormView", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_FormViews.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_FormViews.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_MM_FormView", Storage="_MM_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true)]
		public MM_Package MM_Package
		{
			get
			{
				return this._MM_Package.Entity;
			}
			set
			{
				MM_Package previousValue = this._MM_Package.Entity;
				if (((previousValue != value) 
							|| (this._MM_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Package.Entity = null;
						previousValue.MM_FormViews.Remove(this);
					}
					this._MM_Package.Entity = value;
					if ((value != null))
					{
						value.MM_FormViews.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MM_Methods(MM_Method entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormView = this;
		}
		
		private void detach_MM_Methods(MM_Method entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormView = null;
		}
		
		private void attach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormView = this;
		}
		
		private void detach_HST_MM_FormViews(HST_MM_FormView entity)
		{
			this.SendPropertyChanging();
			entity.MM_FormView = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.N_Cache")]
	public partial class N_Cache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public N_Cache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HST_MM_FormView")]
	public partial class HST_MM_FormView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormViewVersionID;
		
		private int _FormViewID;
		
		private int _VersionNumber;
		
		private bool _IsCurrentVersion;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private string _Title;
		
		private string _SysName;
		
		private string _ViewTemplate;
		
		private string _TemplateTypeCode;
		
		private System.Nullable<int> _ObjectTypeID;
		
		private System.Nullable<int> _PackageID;
		
		private System.Guid _Guid;
		
		private bool _IsCustom;
		
		private bool _IsCaching;
		
		private string _CacheKeyParams;
		
		private int _CacheTimeout;
		
		private string _BaseClass;
		
		private EntityRef<MM_FormView> _MM_FormView;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
		private EntityRef<MM_Package> _MM_Package;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormViewVersionIDChanging(int value);
    partial void OnFormViewVersionIDChanged();
    partial void OnFormViewIDChanging(int value);
    partial void OnFormViewIDChanged();
    partial void OnVersionNumberChanging(int value);
    partial void OnVersionNumberChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnViewTemplateChanging(string value);
    partial void OnViewTemplateChanged();
    partial void OnTemplateTypeCodeChanging(string value);
    partial void OnTemplateTypeCodeChanged();
    partial void OnObjectTypeIDChanging(System.Nullable<int> value);
    partial void OnObjectTypeIDChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    partial void OnGuidChanging(System.Guid value);
    partial void OnGuidChanged();
    partial void OnIsCustomChanging(bool value);
    partial void OnIsCustomChanged();
    partial void OnIsCachingChanging(bool value);
    partial void OnIsCachingChanged();
    partial void OnCacheKeyParamsChanging(string value);
    partial void OnCacheKeyParamsChanged();
    partial void OnCacheTimeoutChanging(int value);
    partial void OnCacheTimeoutChanged();
    partial void OnBaseClassChanging(string value);
    partial void OnBaseClassChanged();
    #endregion
		
		public HST_MM_FormView()
		{
			this._MM_FormView = default(EntityRef<MM_FormView>);
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			this._MM_Package = default(EntityRef<MM_Package>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormViewVersionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormViewVersionID
		{
			get
			{
				return this._FormViewVersionID;
			}
			set
			{
				if ((this._FormViewVersionID != value))
				{
					this.OnFormViewVersionIDChanging(value);
					this.SendPropertyChanging();
					this._FormViewVersionID = value;
					this.SendPropertyChanged("FormViewVersionID");
					this.OnFormViewVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormViewID", DbType="Int NOT NULL")]
		public int FormViewID
		{
			get
			{
				return this._FormViewID;
			}
			set
			{
				if ((this._FormViewID != value))
				{
					if (this._MM_FormView.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormViewIDChanging(value);
					this.SendPropertyChanging();
					this._FormViewID = value;
					this.SendPropertyChanged("FormViewID");
					this.OnFormViewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionNumber", DbType="Int NOT NULL")]
		public int VersionNumber
		{
			get
			{
				return this._VersionNumber;
			}
			set
			{
				if ((this._VersionNumber != value))
				{
					this.OnVersionNumberChanging(value);
					this.SendPropertyChanging();
					this._VersionNumber = value;
					this.SendPropertyChanged("VersionNumber");
					this.OnVersionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewTemplate", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ViewTemplate
		{
			get
			{
				return this._ViewTemplate;
			}
			set
			{
				if ((this._ViewTemplate != value))
				{
					this.OnViewTemplateChanging(value);
					this.SendPropertyChanging();
					this._ViewTemplate = value;
					this.SendPropertyChanged("ViewTemplate");
					this.OnViewTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateTypeCode", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string TemplateTypeCode
		{
			get
			{
				return this._TemplateTypeCode;
			}
			set
			{
				if ((this._TemplateTypeCode != value))
				{
					this.OnTemplateTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TemplateTypeCode = value;
					this.SendPropertyChanged("TemplateTypeCode");
					this.OnTemplateTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int")]
		public System.Nullable<int> ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					if (this._MM_Package.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this.OnGuidChanging(value);
					this.SendPropertyChanging();
					this._Guid = value;
					this.SendPropertyChanged("Guid");
					this.OnGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCustom", DbType="Bit NOT NULL")]
		public bool IsCustom
		{
			get
			{
				return this._IsCustom;
			}
			set
			{
				if ((this._IsCustom != value))
				{
					this.OnIsCustomChanging(value);
					this.SendPropertyChanging();
					this._IsCustom = value;
					this.SendPropertyChanged("IsCustom");
					this.OnIsCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCaching", DbType="Bit NOT NULL")]
		public bool IsCaching
		{
			get
			{
				return this._IsCaching;
			}
			set
			{
				if ((this._IsCaching != value))
				{
					this.OnIsCachingChanging(value);
					this.SendPropertyChanging();
					this._IsCaching = value;
					this.SendPropertyChanged("IsCaching");
					this.OnIsCachingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheKeyParams", DbType="NVarChar(MAX) NULL")]
		public string CacheKeyParams
		{
			get
			{
				return this._CacheKeyParams;
			}
			set
			{
				if ((this._CacheKeyParams != value))
				{
					this.OnCacheKeyParamsChanging(value);
					this.SendPropertyChanging();
					this._CacheKeyParams = value;
					this.SendPropertyChanged("CacheKeyParams");
					this.OnCacheKeyParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CacheTimeout", DbType="Int NOT NULL")]
		public int CacheTimeout
		{
			get
			{
				return this._CacheTimeout;
			}
			set
			{
				if ((this._CacheTimeout != value))
				{
					this.OnCacheTimeoutChanging(value);
					this.SendPropertyChanging();
					this._CacheTimeout = value;
					this.SendPropertyChanged("CacheTimeout");
					this.OnCacheTimeoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseClass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BaseClass
		{
			get
			{
				return this._BaseClass;
			}
			set
			{
				if ((this._BaseClass != value))
				{
					this.OnBaseClassChanging(value);
					this.SendPropertyChanging();
					this._BaseClass = value;
					this.SendPropertyChanged("BaseClass");
					this.OnBaseClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_FormView_HST_MM_FormView", Storage="_MM_FormView", ThisKey="FormViewID", OtherKey="FormViewID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_FormView MM_FormView
		{
			get
			{
				return this._MM_FormView.Entity;
			}
			set
			{
				MM_FormView previousValue = this._MM_FormView.Entity;
				if (((previousValue != value) 
							|| (this._MM_FormView.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_FormView.Entity = null;
						previousValue.HST_MM_FormViews.Remove(this);
					}
					this._MM_FormView.Entity = value;
					if ((value != null))
					{
						value.HST_MM_FormViews.Add(this);
						this._FormViewID = value.FormViewID;
					}
					else
					{
						this._FormViewID = default(int);
					}
					this.SendPropertyChanged("MM_FormView");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_HST_MM_FormView", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.HST_MM_FormViews.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.HST_MM_FormViews.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_Package_HST_MM_FormView", Storage="_MM_Package", ThisKey="PackageID", OtherKey="PackageID", IsForeignKey=true)]
		public MM_Package MM_Package
		{
			get
			{
				return this._MM_Package.Entity;
			}
			set
			{
				MM_Package previousValue = this._MM_Package.Entity;
				if (((previousValue != value) 
							|| (this._MM_Package.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_Package.Entity = null;
						previousValue.HST_MM_FormViews.Remove(this);
					}
					this._MM_Package.Entity = value;
					if ((value != null))
					{
						value.HST_MM_FormViews.Add(this);
						this._PackageID = value.PackageID;
					}
					else
					{
						this._PackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("MM_Package");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MMS_ClassStereotype")]
	public partial class MMS_ClassStereotype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AspectID;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassStereotypeIDChanging(int value);
    partial void OnClassStereotypeIDChanged();
    #endregion
		
		public MMS_ClassStereotype()
		{
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspectID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClassStereotypeID
		{
			get
			{
				return this._AspectID;
			}
			set
			{
				if ((this._AspectID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassStereotypeIDChanging(value);
					this.SendPropertyChanging();
					this._AspectID = value;
					this.SendPropertyChanged("ClassStereotypeID");
					this.OnClassStereotypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MMS_ClassStereotype", Storage="_MM_ObjectType", ThisKey="ClassStereotypeID", OtherKey="ObjectTypeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MMA_ClassAspect = null;
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MMA_ClassAspect = this;
						this._AspectID = value.ObjectTypeID;
					}
					else
					{
						this._AspectID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MM_ObjectTypeStereotypes")]
	public partial class MM_ObjectTypeStereotype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ObjectTypeID;
		
		private int _AspectsID;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnStereotypesIDChanging(int value);
    partial void OnStereotypesIDChanged();
    #endregion
		
		public MM_ObjectTypeStereotype()
		{
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspectsID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StereotypesID
		{
			get
			{
				return this._AspectsID;
			}
			set
			{
				if ((this._AspectsID != value))
				{
					this.OnStereotypesIDChanging(value);
					this.SendPropertyChanging();
					this._AspectsID = value;
					this.SendPropertyChanged("StereotypesID");
					this.OnStereotypesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_MM_ObjectTypeStereotype", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.MM_ObjectTypeStereotypes.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.MM_ObjectTypeStereotypes.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WF_Activity")]
	public partial class WF_Activity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActivityID;
		
		private int _WorkflowID;
		
		private string _Title;
		
		private string _SysName;
		
		private System.Nullable<int> _ParentActivityID;
		
		private bool _IsActive;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private int _SeqNo;
		
		private EntitySet<WF_Activity> _WF_Activities;
		
		private EntitySet<WF_Transition> _WF_Transitions;
		
		private EntitySet<WF_Transition> _WF_Transitions1;
		
		private EntityRef<WF_Activity> _WF_Activity1;
		
		private EntityRef<WF_Workflow> _WF_Workflow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActivityIDChanging(int value);
    partial void OnActivityIDChanged();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnParentActivityIDChanging(System.Nullable<int> value);
    partial void OnParentActivityIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    #endregion
		
		public WF_Activity()
		{
			this._WF_Activities = new EntitySet<WF_Activity>(new Action<WF_Activity>(this.attach_WF_Activities), new Action<WF_Activity>(this.detach_WF_Activities));
			this._WF_Transitions = new EntitySet<WF_Transition>(new Action<WF_Transition>(this.attach_WF_Transitions), new Action<WF_Transition>(this.detach_WF_Transitions));
			this._WF_Transitions1 = new EntitySet<WF_Transition>(new Action<WF_Transition>(this.attach_WF_Transitions1), new Action<WF_Transition>(this.detach_WF_Transitions1));
			this._WF_Activity1 = default(EntityRef<WF_Activity>);
			this._WF_Workflow = default(EntityRef<WF_Workflow>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActivityID
		{
			get
			{
				return this._ActivityID;
			}
			set
			{
				if ((this._ActivityID != value))
				{
					this.OnActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ActivityID = value;
					this.SendPropertyChanged("ActivityID");
					this.OnActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", DbType="Int NOT NULL")]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					if (this._WF_Workflow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentActivityID", DbType="Int")]
		public System.Nullable<int> ParentActivityID
		{
			get
			{
				return this._ParentActivityID;
			}
			set
			{
				if ((this._ParentActivityID != value))
				{
					if (this._WF_Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentActivityIDChanging(value);
					this.SendPropertyChanging();
					this._ParentActivityID = value;
					this.SendPropertyChanged("ParentActivityID");
					this.OnParentActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Activity", Storage="_WF_Activities", ThisKey="ActivityID", OtherKey="ParentActivityID")]
		public EntitySet<WF_Activity> WF_Activities
		{
			get
			{
				return this._WF_Activities;
			}
			set
			{
				this._WF_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Transition", Storage="_WF_Transitions", ThisKey="ActivityID", OtherKey="ParentID")]
		public EntitySet<WF_Transition> WF_Transitions
		{
			get
			{
				return this._WF_Transitions;
			}
			set
			{
				this._WF_Transitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Transition1", Storage="_WF_Transitions1", ThisKey="ActivityID", OtherKey="TargetActivityID")]
		public EntitySet<WF_Transition> WF_Transitions1
		{
			get
			{
				return this._WF_Transitions1;
			}
			set
			{
				this._WF_Transitions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Activity", Storage="_WF_Activity1", ThisKey="ParentActivityID", OtherKey="ActivityID", IsForeignKey=true)]
		public WF_Activity WF_Activity1
		{
			get
			{
				return this._WF_Activity1.Entity;
			}
			set
			{
				WF_Activity previousValue = this._WF_Activity1.Entity;
				if (((previousValue != value) 
							|| (this._WF_Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WF_Activity1.Entity = null;
						previousValue.WF_Activities.Remove(this);
					}
					this._WF_Activity1.Entity = value;
					if ((value != null))
					{
						value.WF_Activities.Add(this);
						this._ParentActivityID = value.ActivityID;
					}
					else
					{
						this._ParentActivityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WF_Activity1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Workflow_WF_Activity", Storage="_WF_Workflow", ThisKey="WorkflowID", OtherKey="WorkflowID", IsForeignKey=true)]
		public WF_Workflow WF_Workflow
		{
			get
			{
				return this._WF_Workflow.Entity;
			}
			set
			{
				WF_Workflow previousValue = this._WF_Workflow.Entity;
				if (((previousValue != value) 
							|| (this._WF_Workflow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WF_Workflow.Entity = null;
						previousValue.WF_Activities.Remove(this);
					}
					this._WF_Workflow.Entity = value;
					if ((value != null))
					{
						value.WF_Activities.Add(this);
						this._WorkflowID = value.WorkflowID;
					}
					else
					{
						this._WorkflowID = default(int);
					}
					this.SendPropertyChanged("WF_Workflow");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WF_Activities(WF_Activity entity)
		{
			this.SendPropertyChanging();
			entity.WF_Activity1 = this;
		}
		
		private void detach_WF_Activities(WF_Activity entity)
		{
			this.SendPropertyChanging();
			entity.WF_Activity1 = null;
		}
		
		private void attach_WF_Transitions(WF_Transition entity)
		{
			this.SendPropertyChanging();
			entity.ParentActivity = this;
		}
		
		private void detach_WF_Transitions(WF_Transition entity)
		{
			this.SendPropertyChanging();
			entity.ParentActivity = null;
		}
		
		private void attach_WF_Transitions1(WF_Transition entity)
		{
			this.SendPropertyChanging();
			entity.TargetActivity = this;
		}
		
		private void detach_WF_Transitions1(WF_Transition entity)
		{
			this.SendPropertyChanging();
			entity.TargetActivity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WF_Transition")]
	public partial class WF_Transition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransitionID;
		
		private string _Title;
		
		private bool _IsActive;
		
		private int _SeqNo;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private int _ParentID;
		
		private int _TargetActivityID;
		
		private EntityRef<WF_Activity> _WF_Activity;
		
		private EntityRef<WF_Activity> _WF_Activity1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransitionIDChanging(int value);
    partial void OnTransitionIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnSeqNoChanging(int value);
    partial void OnSeqNoChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    partial void OnParentIDChanging(int value);
    partial void OnParentIDChanged();
    partial void OnTargetActivityIDChanging(int value);
    partial void OnTargetActivityIDChanged();
    #endregion
		
		public WF_Transition()
		{
			this._WF_Activity = default(EntityRef<WF_Activity>);
			this._WF_Activity1 = default(EntityRef<WF_Activity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransitionID
		{
			get
			{
				return this._TransitionID;
			}
			set
			{
				if ((this._TransitionID != value))
				{
					this.OnTransitionIDChanging(value);
					this.SendPropertyChanging();
					this._TransitionID = value;
					this.SendPropertyChanged("TransitionID");
					this.OnTransitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeqNo", DbType="Int NOT NULL")]
		public int SeqNo
		{
			get
			{
				return this._SeqNo;
			}
			set
			{
				if ((this._SeqNo != value))
				{
					this.OnSeqNoChanging(value);
					this.SendPropertyChanging();
					this._SeqNo = value;
					this.SendPropertyChanged("SeqNo");
					this.OnSeqNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int NOT NULL")]
		public int ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._WF_Activity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetActivityID", DbType="Int NOT NULL")]
		public int TargetActivityID
		{
			get
			{
				return this._TargetActivityID;
			}
			set
			{
				if ((this._TargetActivityID != value))
				{
					if (this._WF_Activity1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTargetActivityIDChanging(value);
					this.SendPropertyChanging();
					this._TargetActivityID = value;
					this.SendPropertyChanged("TargetActivityID");
					this.OnTargetActivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Transition", Storage="_WF_Activity", ThisKey="ParentID", OtherKey="ActivityID", IsForeignKey=true)]
		public WF_Activity ParentActivity
		{
			get
			{
				return this._WF_Activity.Entity;
			}
			set
			{
				WF_Activity previousValue = this._WF_Activity.Entity;
				if (((previousValue != value) 
							|| (this._WF_Activity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WF_Activity.Entity = null;
						previousValue.WF_Transitions.Remove(this);
					}
					this._WF_Activity.Entity = value;
					if ((value != null))
					{
						value.WF_Transitions.Add(this);
						this._ParentID = value.ActivityID;
					}
					else
					{
						this._ParentID = default(int);
					}
					this.SendPropertyChanged("ParentActivity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Activity_WF_Transition1", Storage="_WF_Activity1", ThisKey="TargetActivityID", OtherKey="ActivityID", IsForeignKey=true)]
		public WF_Activity TargetActivity
		{
			get
			{
				return this._WF_Activity1.Entity;
			}
			set
			{
				WF_Activity previousValue = this._WF_Activity1.Entity;
				if (((previousValue != value) 
							|| (this._WF_Activity1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WF_Activity1.Entity = null;
						previousValue.WF_Transitions1.Remove(this);
					}
					this._WF_Activity1.Entity = value;
					if ((value != null))
					{
						value.WF_Transitions1.Add(this);
						this._TargetActivityID = value.ActivityID;
					}
					else
					{
						this._TargetActivityID = default(int);
					}
					this.SendPropertyChanged("TargetActivity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WF_Workflow")]
	public partial class WF_Workflow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkflowID;
		
		private int _ObjectTypeID;
		
		private string _Title;
		
		private string _SysName;
		
		private bool _IsActive;
		
		private bool _IsDeleted;
		
		private System.DateTime _LastModifiedDate;
		
		private int _LastModifiedUserID;
		
		private EntitySet<WF_Activity> _WF_Activities;
		
		private EntityRef<MM_ObjectType> _MM_ObjectType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkflowIDChanging(int value);
    partial void OnWorkflowIDChanged();
    partial void OnObjectTypeIDChanging(int value);
    partial void OnObjectTypeIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSysNameChanging(string value);
    partial void OnSysNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnLastModifiedDateChanging(System.DateTime value);
    partial void OnLastModifiedDateChanged();
    partial void OnLastModifiedUserIDChanging(int value);
    partial void OnLastModifiedUserIDChanged();
    #endregion
		
		public WF_Workflow()
		{
			this._WF_Activities = new EntitySet<WF_Activity>(new Action<WF_Activity>(this.attach_WF_Activities), new Action<WF_Activity>(this.detach_WF_Activities));
			this._MM_ObjectType = default(EntityRef<MM_ObjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkflowID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkflowID
		{
			get
			{
				return this._WorkflowID;
			}
			set
			{
				if ((this._WorkflowID != value))
				{
					this.OnWorkflowIDChanging(value);
					this.SendPropertyChanging();
					this._WorkflowID = value;
					this.SendPropertyChanged("WorkflowID");
					this.OnWorkflowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeID", DbType="Int NOT NULL")]
		public int ObjectTypeID
		{
			get
			{
				return this._ObjectTypeID;
			}
			set
			{
				if ((this._ObjectTypeID != value))
				{
					if (this._MM_ObjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectTypeID = value;
					this.SendPropertyChanged("ObjectTypeID");
					this.OnObjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SysName
		{
			get
			{
				return this._SysName;
			}
			set
			{
				if ((this._SysName != value))
				{
					this.OnSysNameChanging(value);
					this.SendPropertyChanging();
					this._SysName = value;
					this.SendPropertyChanged("SysName");
					this.OnSysNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifiedDate
		{
			get
			{
				return this._LastModifiedDate;
			}
			set
			{
				if ((this._LastModifiedDate != value))
				{
					this.OnLastModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedDate = value;
					this.SendPropertyChanged("LastModifiedDate");
					this.OnLastModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedUserID", DbType="Int NOT NULL")]
		public int LastModifiedUserID
		{
			get
			{
				return this._LastModifiedUserID;
			}
			set
			{
				if ((this._LastModifiedUserID != value))
				{
					this.OnLastModifiedUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedUserID = value;
					this.SendPropertyChanged("LastModifiedUserID");
					this.OnLastModifiedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WF_Workflow_WF_Activity", Storage="_WF_Activities", ThisKey="WorkflowID", OtherKey="WorkflowID")]
		public EntitySet<WF_Activity> WF_Activities
		{
			get
			{
				return this._WF_Activities;
			}
			set
			{
				this._WF_Activities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MM_ObjectType_WF_Workflow", Storage="_MM_ObjectType", ThisKey="ObjectTypeID", OtherKey="ObjectTypeID", IsForeignKey=true)]
		public MM_ObjectType MM_ObjectType
		{
			get
			{
				return this._MM_ObjectType.Entity;
			}
			set
			{
				MM_ObjectType previousValue = this._MM_ObjectType.Entity;
				if (((previousValue != value) 
							|| (this._MM_ObjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MM_ObjectType.Entity = null;
						previousValue.WF_Workflows.Remove(this);
					}
					this._MM_ObjectType.Entity = value;
					if ((value != null))
					{
						value.WF_Workflows.Add(this);
						this._ObjectTypeID = value.ObjectTypeID;
					}
					else
					{
						this._ObjectTypeID = default(int);
					}
					this.SendPropertyChanged("MM_ObjectType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WF_Activities(WF_Activity entity)
		{
			this.SendPropertyChanging();
			entity.WF_Workflow = this;
		}
		
		private void detach_WF_Activities(WF_Activity entity)
		{
			this.SendPropertyChanging();
			entity.WF_Workflow = null;
		}
	}
	
	public partial class SearchInfoObjectsResult
	{
		
		private string _Title;
		
		private string _Description;
		
		private int _NodeID;
		
		private int _ObjectID;
		
		private string _ObjectTypeSysName;
		
		public SearchInfoObjectsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeID", DbType="Int NOT NULL")]
		public int NodeID
		{
			get
			{
				return this._NodeID;
			}
			set
			{
				if ((this._NodeID != value))
				{
					this._NodeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int NOT NULL")]
		public int ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this._ObjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectTypeSysName", DbType="VarChar(7) NOT NULL", CanBeNull=false)]
		public string ObjectTypeSysName
		{
			get
			{
				return this._ObjectTypeSysName;
			}
			set
			{
				if ((this._ObjectTypeSysName != value))
				{
					this._ObjectTypeSysName = value;
				}
			}
		}
	}
	
	public partial class usp_modelResult
	{
		
		private System.Xml.Linq.XElement _Column1;
		
		public usp_modelResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Xml")]
		public System.Xml.Linq.XElement Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
*/