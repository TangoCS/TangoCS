
using System;
using System.Linq;
using Nephrite.Meta;
using Nephrite.Meta.Fluent;

namespace Solution.Model
{
	public partial interface IMM_Package { }
	public partial interface IMM_ObjectType { }
	public partial interface IMM_ObjectProperty { }
	public partial interface IMM_FormField { }
	public partial interface IMM_Codifier { }
	public partial interface IMM_CodifierValue { }
	public partial interface IMM_FormFieldAttribute { }
	public partial interface IMM_FormView { }
	public partial interface IMM_Method { }
	public partial interface IMM_MethodParameter { }
	public partial interface IMM_FormFieldGroup { }
	public partial interface IMM_Predicate { }

	public class mmModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("mm");
			p.AddClass<IMM_Package>()
				.IntKey()
				.Attribute("Guid", "Guid", MetaGuidType.NotNull())
				.Attribute("IsDataReplicated", "IsDataReplicated", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("PackageID", "Ид", MetaIntType.NotNull())
				.Attribute("SeqNo", "SeqNo", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Version", "Version", MetaStringType.Null())
				.ComputedAttribute("ControlsPath", "ControlsPath", MetaStringType.Null())
				.ComputedAttribute("FullSysName", "FullSysName", MetaStringType.Null())
				.Reference<IMM_Package>("ChildPackages", "Дочерние пакеты", x => x.Multiple().InverseProperty("ParentPackage"))
				.Reference<IMM_Codifier>("Codifiers", "Справочники", x => x.Multiple().InverseProperty("Package"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectTypes", "Классы", x => x.Multiple().InverseProperty("Package"))
				.Reference<IMM_Package>("ParentPackage", "Родительский пакет", x => x.InverseProperty("ChildPackages"))
			;	
			p.AddClass<IMM_ObjectType>()
				.IntKey()
				.Attribute("DefaultOrderBy", "DefaultOrderBy", MetaStringType.Null())
				.Attribute("Description", "Description", MetaStringType.Null())
				.Attribute("Guid", "GUID", MetaGuidType.NotNull())
				.Attribute("HistoryTypeCode", "HistoryTypeCode", MetaEnum.NotNull())
				.Attribute("Interface", "Interface", MetaStringType.Null())
				.Attribute("IsDataReplicated", "IsDataReplicated", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsEnableObjectHistory", "IsEnableObjectHistory", MetaBooleanType.NotNull())
				.Attribute("IsEnableSPM", "УПБ", MetaBooleanType.NotNull())
				.Attribute("IsEnableUserViews", "IsEnableUserViews", MetaBooleanType.NotNull())
				.Attribute("IsReplicate", "IsReplicate", MetaBooleanType.NotNull())
				.Attribute("IsSeparateTable", "Отдельная таблица", MetaBooleanType.NotNull())
				.Attribute("IsTemplate", "Шаблон", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("LogicalDelete", "LogicalDelete", MetaStringType.Null())
				.Attribute("ObjectTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("SecurityPackageSystemName", "SecurityPackageSystemName", MetaStringType.Null())
				.Attribute("SeqNo", "SeqNo", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitlePlural", "TitlePlural", MetaStringType.Null())
				.ComputedAttribute("ControlsPath", "ControlsPath", MetaStringType.Null())
				.ComputedAttribute("FullSysName", "FullSysName", MetaStringType.Null())
				.Reference<IMM_ObjectType>("BaseObjectType", "Базовый тип")
				.Reference<IMM_Predicate>("DataValidations", "Проверки данных", x => x.Multiple().InverseProperty("ObjectType"))
				.Reference<IMM_FormFieldGroup>("FormFieldGroups", "Группы полей", x => x.Multiple().InverseProperty("ObjectType"))
				.Reference<IMM_FormView>("FormViews", "Представления", x => x.Multiple().InverseProperty("ObjectType"))
				.Reference<IMM_Method>("Methods", "Методы", x => x.Multiple().InverseProperty("ObjectType"))
				.Reference<IMM_Package>("Package", "Пакет", x => x.InverseProperty("ObjectTypes"))
				.Reference<IMM_ObjectProperty>("Properties", "Свойства", x => x.Multiple().InverseProperty("ObjectType"))
				.Reference<IMM_ObjectType>("Stereotypes", "Стереотипы", x => x.Multiple())
			;	
			p.AddClass<IMM_ObjectProperty>()
				.IntKey()
				.Attribute("DefaultDBValue", "DefaultDBValue", MetaStringType.Null())
				.Attribute("DeleteRule", "DeleteRule", MetaEnum.NotNull())
				.Attribute("Description", "Description", MetaStringType.Null())
				.Attribute("Expression", "Expression", MetaStringType.Null())
				.Attribute("Guid", "GUID", MetaGuidType.NotNull())
				.Attribute("IsAggregate", "IsAggregate", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsIdentity", "Автоинкрементный идентификатор", MetaBooleanType.NotNull())
				.Attribute("IsMultilingual", "Многоязычное", MetaBooleanType.NotNull())
				.Attribute("IsNavigable", "IsNavigable", MetaBooleanType.NotNull())
				.Attribute("IsPrimaryKey", "Первичный ключ", MetaBooleanType.NotNull())
				.Attribute("IsReferenceToVersion", "IsReferenceToVersion", MetaBooleanType.NotNull())
				.Attribute("IsSystem", "Системное свойство", MetaBooleanType.NotNull())
				.Attribute("KindCode", "KindCode", MetaEnum.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("Length", "Length", MetaIntType.Null())
				.Attribute("LowerBound", "LowerBound", MetaIntType.NotNull())
				.Attribute("ObjectPropertyID", "Ид", MetaIntType.NotNull())
				.Attribute("Precision", "Precision", MetaIntType.Null())
				.Attribute("Scale", "Scale", MetaIntType.Null())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TypeCode", "TypeCode", MetaEnum.NotNull())
				.Attribute("UpperBound", "UpperBound", MetaIntType.NotNull())
				.Attribute("ValueFilter", "ValueFilter", MetaStringType.Null())
				.Reference<IMM_Codifier>("Codifier", "Кодификатор")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectType", "Класс", x => x.InverseProperty("Properties"))
				.Reference<IMM_ObjectProperty>("RefObjectProperty", "Ссылается на свойство")
				.Reference<IMM_ObjectType>("RefObjectType", "Ссылается на класс")
			;	
			p.AddClass<IMM_FormField>()
				.IntKey()
				.Attribute("Comment", "Подсказка", MetaStringType.Null())
				.Attribute("ControlName", "Элемент управления", MetaIntType.Null())
				.Attribute("DefaultValue", "Значение по умолчанию", MetaStringType.Null())
				.Attribute("FormFieldID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("ListColumnWidth", "ListColumnWidth", MetaStringType.Null())
				.Attribute("SeqNo", "SeqNo", MetaIntType.NotNull())
				.Attribute("ShowInEdit", "ShowInEdit", MetaBooleanType.NotNull())
				.Attribute("ShowInList", "ShowInList", MetaBooleanType.NotNull())
				.Attribute("ShowInView", "ShowInView", MetaBooleanType.NotNull())
				.Attribute("SortExpression", "SortExpression", MetaStringType.Null())
				.Attribute("Title", "Заголовок", MetaStringType.Null())
				.Attribute("ValueFunction", "ValueFunction", MetaStringType.Null())
				.Attribute("ValueFunctionExecType", "ValueFunctionExecType", MetaBooleanType.NotNull())
				.Reference<IMM_FormFieldAttribute>("Attributes", "Атрибуты", x => x.Multiple().InverseProperty("FormField"))
				.Reference<IMM_FormFieldGroup>("FormFieldGroup", "Группа полей", x => x.InverseProperty("FormFields"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectProperty>("ObjectProperty", "Свойство")
			;	
			p.AddClass<IMM_Codifier>()
				.IntKey()
				.Attribute("CodifierID", "Ид", MetaIntType.NotNull())
				.Attribute("Guid", "Guid", MetaGuidType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_Package>("Package", "Пакет", x => x.InverseProperty("Codifiers"))
				.Reference<IMM_CodifierValue>("Values", "Значения", x => x.Multiple().InverseProperty("Codifier"))
			;	
			p.AddClass<IMM_CodifierValue>()
				.IntKey()
				.Attribute("Code", "Код", MetaEnum.NotNull())
				.Attribute("CodifierValueID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SysName", "SysName", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<IMM_Codifier>("Codifier", "Кодификатор", x => x.InverseProperty("Values"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IMM_FormFieldAttribute>()
				.IntKey()
				.Attribute("FormFieldAttributeID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsEvent", "Признак Событие", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Value", "Значение", MetaStringType.NotNull())
				.Reference<IMM_FormField>("FormField", "Поле", x => x.InverseProperty("Attributes"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IMM_FormView>()
				.IntKey()
				.Attribute("BaseClass", "Базовый класс", MetaStringType.NotNull())
				.Attribute("CacheKeyParams", "CacheKeyParams", MetaStringType.Null())
				.Attribute("CacheTimeout", "CacheTimeout", MetaIntType.NotNull())
				.Attribute("FormViewID", "Ид", MetaIntType.NotNull())
				.Attribute("Guid", "Guid", MetaGuidType.NotNull())
				.Attribute("IsCaching", "IsCaching", MetaBooleanType.NotNull())
				.Attribute("IsCustom", "Пользовательское", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("TemplateTypeCode", "Тип представления", MetaEnum.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("ViewTemplate", "Шаблон формы", MetaStringType.Null())
				.ComputedAttribute("ControlsPath", "ControlsPath", MetaStringType.Null())
				.ComputedAttribute("FullSysName", "FullSysName", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectType", "Класс", x => x.InverseProperty("FormViews"))
				.Reference<IMM_Package>("Package", "Пакет")
			;	
			p.AddClass<IMM_Method>()
				.IntKey()
				.Attribute("Code", "Code", MetaStringType.Null())
				.Attribute("Comment", "Comment", MetaStringType.Null())
				.Attribute("Guid", "Guid", MetaGuidType.NotNull())
				.Attribute("Icon", "Icon", MetaStringType.Null())
				.Attribute("IsDefault", "IsDefault", MetaBooleanType.NotNull())
				.Attribute("MethodID", "Ид", MetaIntType.NotNull())
				.Attribute("Parameters", "Parameters", MetaStringType.Null())
				.Attribute("PredicateCode", "PredicateCode", MetaStringType.Null())
				.Attribute("SeqNo", "SeqNo", MetaIntType.NotNull())
				.Attribute("SysName", "SysName", MetaStringType.NotNull())
				.Attribute("Title", "Title", MetaStringType.NotNull())
				.Attribute("ViewPath", "ViewPath", MetaStringType.Null())
				.Reference<IMM_FormView>("FormView", "Представление")
				.Reference<IMM_MethodParameter>("MethodParameters", "Параметры", x => x.Multiple().InverseProperty("Method"))
				.Reference<IMM_ObjectType>("ObjectType", "Класс", x => x.InverseProperty("Methods"))
			;	
			p.AddClass<IMM_MethodParameter>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последней модификации", MetaDateTimeType.NotNull())
				.Attribute("MethodParameterID", "Ид", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.Null())
				.Attribute("Type", "Тип данных", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_Method>("Method", "Метод", x => x.InverseProperty("MethodParameters"))
			;	
			p.AddClass<IMM_FormFieldGroup>()
				.IntKey()
				.Attribute("FormFieldGroupID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("SelectObjectClass", "SelectObjectClass", MetaStringType.Null())
				.Attribute("SelectObjectDataTextField", "SelectObjectDataTextField", MetaStringType.Null())
				.Attribute("SelectObjectFilter", "SelectObjectFilter", MetaStringType.Null())
				.Attribute("SelectObjectPrefix", "SelectObjectPrefix", MetaStringType.Null())
				.Attribute("SelectObjectSearchExpression", "SelectObjectSearchExpression", MetaStringType.Null())
				.Attribute("SeqNo", "SeqNo", MetaIntType.NotNull())
				.Attribute("ShowTitle", "ShowTitle", MetaBooleanType.NotNull())
				.Attribute("Title", "Title", MetaStringType.NotNull())
				.Reference<IMM_FormField>("FormFields", "Поля", x => x.Multiple().InverseProperty("FormFieldGroup"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectType", "Класс", x => x.InverseProperty("FormFieldGroups"))
				.Reference<IMM_ObjectProperty>("SelectObjectProperty", "Свойство класса")
			;	
			p.AddClass<IMM_Predicate>()
				.GuidKey()
				.Attribute("Body", "Body", MetaStringType.NotNull())
				.Attribute("DesignerData", "DesignerData", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("Message", "Message", MetaStringType.NotNull())
				.Attribute("PredicateGUID", "Ид", MetaGuidType.NotNull())
				.Attribute("Title", "Наименовение", MetaStringType.NotNull())
				.Attribute("Type", "Тип", MetaEnum.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectType", "Класс", x => x.InverseProperty("DataValidations"))
			;	
			return p;
		}
	}
	public partial interface ISPM_Subject { }
	public partial interface ISPM_Role { }
	public partial interface ISPM_Action { }
	public partial interface ISPM_ActionAsso { }
	public partial interface ISPM_RoleAsso { }
	public partial interface ISPM_SubjectRole { }
	public partial interface ISPM_RoleGroup { }
	public partial interface ISPM_RoleAccess { }
	public partial interface ISPM_CasheFlag { }
	public partial interface ISPM_SubjectDelegate { }
	public partial interface ISPM_AvailableRoleForGrant { }
	public partial interface ISPM_C_RoleType { }

	public class SPMModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("SPM");
			p.AddClass<ISPM_Subject>()
				.IntKey()
				.Attribute("EMail", "EMail", MetaStringType.Null())
				.Attribute("IsActive", "IsActive", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("MustChangePassword", "MustChangePassword", MetaBooleanType.NotNull())
				.Attribute("PasswordExpDate", "PasswordExpDate", MetaDateTimeType.Null())
				.Attribute("PasswordHash", "PasswordHash", MetaByteArrayType.Null())
				.Attribute("RegDate", "RegDate", MetaDateTimeType.Null())
				.Attribute("RegMagicString", "RegMagicString", MetaStringType.Null())
				.Attribute("SID", "SID", MetaStringType.NotNull())
				.Attribute("SubjectID", "Ид", MetaIntType.NotNull())
				.Attribute("SystemName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<ISPM_Role>()
				.IntKey()
				.Attribute("Description", "Описание", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("RoleForGrantCondition", "Условие выбора ролей для назначения пользователям", MetaIntType.NotNull())
				.Attribute("RoleID", "Ид", MetaIntType.NotNull())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SID", "SID группы AD", MetaStringType.Null())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<ISPM_RoleGroup>("RoleGroup", "Группа ролей", x => x.InverseProperty("Roles"))
				.Reference<ISPM_C_RoleType>("RoleType", "Тип роли")
			;	
			p.AddClass<ISPM_Action>()
				.IntKey()
				.Attribute("ActionID", "Ид", MetaIntType.NotNull())
				.Attribute("ActionTypeID", "Тип операции", MetaIntType.NotNull())
				.Attribute("CategoryID", "CategoryID", MetaIntType.Null())
				.Attribute("ClassGUID", "Ид класса", MetaGuidType.Null())
				.Attribute("ItemGUID", "Ид объекта", MetaGuidType.Null())
				.Attribute("SubCategoryGUID", "SubCategoryGUID", MetaGuidType.Null())
				.Attribute("SystemName", "SystemName", MetaStringType.Null())
				.Attribute("Title", "Title", MetaStringType.NotNull())
				.Attribute("Type", "Type (устарело)", MetaIntType.NotNull())
				.Reference<IMM_Package>("Package", "Пакет")
				.Reference<IMM_Predicate>("Predicate", "Предикат")
			;	
			p.AddClass<ISPM_ActionAsso>()
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<ISPM_Action>("Action", "Action")
				.Reference<ISPM_Action>("ParentAction", "ParentAction")
			;	
			p.AddClass<ISPM_RoleAsso>()
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<ISPM_Role>("ParentRole", "ParentRole")
				.Reference<ISPM_Role>("Role", "Role")
			;	
			p.AddClass<ISPM_SubjectRole>()
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<ISPM_Role>("Role", "Role")
				.Reference<ISPM_Subject>("Subject", "Subject")
			;	
			p.AddClass<ISPM_RoleGroup>()
				.IntKey()
				.Attribute("RoleGroupID", "Ид", MetaIntType.NotNull())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("Title", "Название", MetaStringType.NotNull())
				.Reference<ISPM_Role>("Roles", "Роли", x => x.InverseProperty("RoleGroup"))
			;	
			p.AddClass<ISPM_RoleAccess>()
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<ISPM_Action>("Action", "Action")
				.Reference<ISPM_Role>("Role", "Role")
			;	
			p.AddClass<ISPM_CasheFlag>()
				.Attribute("IsChange", "IsChange", MetaBooleanType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<ISPM_SubjectDelegate>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала", MetaDateTimeType.NotNull())
				.Attribute("EndDate", "Дата окончания", MetaDateTimeType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SubjectDelegateID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.PersistentComputedAttribute("IsDeleted", "Признак Удалено", MetaBooleanType.Null())
				.Reference<ISPM_Subject>("DelegatedFrom", "От кого делегировано")
				.Reference<ISPM_Subject>("DelegatedTo", "Кому делегировано")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<ISPM_AvailableRoleForGrant>()
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<ISPM_Role>("Role", "Role")
				.Reference<ISPM_Role>("RoleForGrant", "RoleForGrant")
			;	
			p.AddClass<ISPM_C_RoleType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RoleTypeID", "ИД", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			return p;
		}
	}

	public class SiteViewsModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("SiteViews");
			return p;
		}
	}
	public partial interface IN_TimeZone { }
	public partial interface IN_RssFeed { }
	public partial interface IUserActivity { }
	public partial interface IN_TextResource { }
	public partial interface ITM_Task { }
	public partial interface ITM_TaskParameter { }
	public partial interface IMailMessage { }
	public partial interface IC_Help { }
	public partial interface IMailTemplate { }
	public partial interface ICalendarDay { }
	public partial interface IN_DDL { }
	public partial interface ITM_TaskExecution { }
	public partial interface IN_Settings { }
	public partial interface IN_SettingsGroup { }
	public partial interface IN_TaskType { }
	public partial interface IN_Task { }

	public class SystemModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("System");
			p.AddClass<IN_TimeZone>()
				.IntKey()
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("GMTOffset", "Смещение относительно GMT", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("TimeZoneID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("DisplayTitle", "Отображаемое имя", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IN_RssFeed>()
				.IntKey()
				.Attribute("Author", "Автор элемента", MetaStringType.NotNull())
				.Attribute("Copyright", "Информация об авторском праве", MetaStringType.NotNull())
				.Attribute("Description", "Описание", MetaStringType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("LinkParams", "LinkParams", MetaStringType.Null())
				.Attribute("ObjectTypeSysName", "Класс", MetaStringType.NotNull())
				.Attribute("Predicate", "Предикат", MetaStringType.NotNull())
				.Attribute("PubDate", "Дата публикации", MetaStringType.NotNull())
				.Attribute("RssFeedID", "Ид", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Ttl", "Время жизни", MetaIntType.NotNull())
				.Attribute("ViewFormSysName", "Представление", MetaStringType.NotNull())
				.Attribute("WebMaster", "E-mail веб-мастера", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IUserActivity>()
				.IntKey()
				.Attribute("Action", "Операция", MetaStringType.NotNull())
				.Attribute("IP", "IP", MetaStringType.NotNull())
				.Attribute("LastModifiedDate", "Дата операции", MetaDateTimeType.NotNull())
				.Attribute("ObjectKey", "Ид объекта", MetaStringType.NotNull())
				.Attribute("ObjectTypeSysName", "Класс", MetaStringType.Null())
				.Attribute("ObjectTypeTitle", "Тип объекта", MetaStringType.NotNull())
				.Attribute("Title", "Название объекта", MetaStringType.NotNull())
				.Attribute("UserActivityID", "Ид", MetaIntType.NotNull())
				.Attribute("UserTitle", "Ф.И.О.", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Пользователь")
			;	
			p.AddClass<IN_TextResource>()
				.IntKey()
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Text", "Текст", MetaStringType.Null())
				.Attribute("TextResourceID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Название", MetaStringType.NotNull())
			;	
			p.AddClass<ITM_Task>()
				.IntKey()
				.Attribute("Class", "Класс", MetaStringType.NotNull())
				.Attribute("ErrorLogID", "Ид ошибки в журнале", MetaIntType.Null())
				.Attribute("ExecutionTimeout", "Таймаут выполнения задачи, мин", MetaIntType.NotNull())
				.Attribute("Interval", "Интервал", MetaIntType.NotNull())
				.Attribute("IsActive", "Активна", MetaBooleanType.NotNull())
				.Attribute("IsSuccessfull", "Признак успешности", MetaBooleanType.NotNull())
				.Attribute("LastStartDate", "Последний запуск", MetaDateTimeType.Null())
				.Attribute("Method", "Метод", MetaStringType.NotNull())
				.Attribute("StartFromService", "Старт службой", MetaBooleanType.NotNull())
				.Attribute("StartType", "Тип старта", MetaBooleanType.NotNull())
				.Attribute("TaskID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Название", MetaStringType.NotNull())
				.Reference<ITM_TaskParameter>("Parameters", "Параметры", x => x.Multiple().InverseProperty("Parent"))
			;	
			p.AddClass<ITM_TaskParameter>()
				.IntKey()
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("TaskParameterID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Название", MetaStringType.NotNull())
				.Attribute("Value", "Значение", MetaStringType.Null())
				.Reference<ITM_Task>("Parent", "Задача", x => x.InverseProperty("Parameters"))
			;	
			p.AddClass<IMailMessage>()
				.IntKey()
				.Attribute("Attachment", "Вложение", MetaByteArrayType.Null())
				.Attribute("AttachmentName", "Наименование вложения", MetaStringType.Null())
				.Attribute("AttemptsToSendCount", "Количество попыток отправки", MetaIntType.NotNull())
				.Attribute("Body", "Сообщение", MetaStringType.Null())
				.Attribute("CopyRecipients", "Получатели копии", MetaStringType.Null())
				.Attribute("Error", "Ошибка", MetaStringType.Null())
				.Attribute("IsSent", "Отправлено", MetaBooleanType.NotNull())
				.Attribute("LastSendAttemptDate", "Последняя попытка отправки", MetaDateTimeType.Null())
				.Attribute("MailMessageID", "Ид", MetaIntType.NotNull())
				.Attribute("Recipients", "Получатели", MetaStringType.Null())
				.Attribute("Subject", "Тема", MetaStringType.Null())
				.ComputedAttribute("Title", "Название", MetaStringType.Null())
			;	
			p.AddClass<IC_Help>()
				.IntKey()
				.Attribute("FormViewFullSysName", "Представление", MetaStringType.NotNull())
				.Attribute("HelpID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Text", "Текст", MetaStringType.Null())
				.Attribute("Title", "Форма системы", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IMailTemplate>()
				.IntKey()
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("IsSystem", "Системное", MetaBooleanType.NotNull())
				.Attribute("MailTemplateID", "Ид", MetaIntType.NotNull())
				.Attribute("TemplateBody", "Сообщение", MetaStringType.NotNull())
				.Attribute("TemplateSubject", "Тема", MetaStringType.NotNull())
				.Attribute("Title", "Имя", MetaStringType.NotNull())
			;	
			p.AddClass<ICalendarDay>()
				.IntKey()
				.Attribute("CalendarDayID", "Ид", MetaIntType.NotNull())
				.Attribute("Date", "Дата", MetaDateType.NotNull())
				.Attribute("IsWorkingDay", "Рабочий/Выходной", MetaBooleanType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
			;	
			p.AddClass<IN_DDL>()
				.IntKey()
				.Attribute("DDLID", "Ид", MetaIntType.NotNull())
				.Attribute("LastModifiedDate", "Дата", MetaDateTimeType.NotNull())
				.Attribute("Title", "Команда", MetaStringType.NotNull())
			;	
			p.AddClass<ITM_TaskExecution>()
				.IntKey()
				.Attribute("ExecutionLog", "Журнал выполнения", MetaStringType.Null())
				.Attribute("FinishDate", "Дата/время окончания", MetaDateTimeType.Null())
				.Attribute("IsSuccessfull", "Результат", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MachineName", "Имя машины", MetaStringType.NotNull())
				.Attribute("ResultXml", "Результат XML", MetaStringType.Null())
				.Attribute("StartDate", "Дата/время запуска", MetaDateTimeType.NotNull())
				.Attribute("TaskExecutionID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний изменивший пользователь")
				.Reference<ITM_Task>("Task", "Задача")
			;	
			p.AddClass<IN_Settings>()
				.GuidKey()
				.Attribute("AcceptableValues", "Список разрешенных значений", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsSystem", "Свойство является системным", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SettingsGUID", "Ид", MetaGuidType.NotNull())
				.Attribute("SystemName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Value", "Значение", MetaStringType.NotNull())
				.Reference<IN_SettingsGroup>("Group", "Группа параметра", x => x.InverseProperty("Settings"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IN_SettingsGroup>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SettingsGroupID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IN_Settings>("Settings", "Параметры системы", x => x.Multiple().InverseProperty("Group"))
			;	
			p.AddClass<IN_TaskType>()
				.IntKey()
				.Attribute("ArgumentClass", "Класс параметров", MetaStringType.Null())
				.Attribute("Class", "Класс", MetaStringType.NotNull())
				.Attribute("IsActive", "Признак Активный", MetaBooleanType.NotNull())
				.Attribute("Method", "Метод", MetaStringType.NotNull())
				.Attribute("ResultClass", "Класс результата", MetaStringType.Null())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("TaskTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
			;	
			p.AddClass<IN_Task>()
				.GuidKey()
				.Attribute("AbortRequestDate", "Дата запроса прерывания", MetaDateTimeType.Null())
				.Attribute("Argument", "Параметры задания, сериализованные в формате JSON", MetaStringType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateTimeType.NotNull())
				.Attribute("ErrorLogID", "Ид ошибки", MetaIntType.Null())
				.Attribute("ErrorLogMessage", "Текст ошибки", MetaStringType.Null())
				.Attribute("FinishTime", "Дата завершения", MetaDateTimeType.Null())
				.Attribute("GUID", "Ид", MetaGuidType.NotNull())
				.Attribute("Notify", "Уведомлять по e-mail", MetaBooleanType.NotNull())
				.Attribute("PercentDone", "% прогресса выполнения задания", MetaDecimalType.NotNull())
				.Attribute("PercentDoneDate", "Дата/время обновления прогресса", MetaDateTimeType.Null())
				.Attribute("Result", "Результат выполнения задания, сериализованный в формате JSON", MetaStringType.Null())
				.Attribute("StartTime", "Дата запуска", MetaDateTimeType.Null())
				.Attribute("Status", "Статус", MetaIntType.NotNull())
				.Reference<ISPM_Subject>("Creator", "Создал")
				.Reference<IN_TaskType>("TaskType", "Тип задания")
			;	
			return p;
		}
	}
	public partial interface IMMS_ClassStereotype { }
	public partial interface IMMS_Versioning { }
	public partial interface IMMS_ChangeLog { }
	public partial interface IMMS_Replication { }

	public class StereotypesModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Stereotypes");
			p.AddClass<IMMS_ClassStereotype>()
			;	
			p.AddClass<IMMS_Versioning>()
				.Attribute("Type", "Тип", MetaEnum.NotNull())
			;	
			p.AddClass<IMMS_ChangeLog>()
			;	
			p.AddClass<IMMS_Replication>()
			;	
			return p;
		}
	}
	public partial interface IN_SqlStatementLog { }

	public class SqlExecutionModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("SqlExecution");
			p.AddClass<IN_SqlStatementLog>()
				.IntKey()
				.Attribute("IP", "IP-адрес", MetaStringType.NotNull())
				.Attribute("LastModifiedDate", "Дата выполнения", MetaDateTimeType.NotNull())
				.Attribute("SqlStatementLogID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Текст запроса", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Выполнивший пользователь")
			;	
			return p;
		}
	}
	public partial interface IN_VirusScanLog { }
	public partial interface IN_Folder { }
	public partial interface IV_N_FolderFile { }
	public partial interface IN_File { }
	public partial interface IN_FileLibraryType { }
	public partial interface IN_FileLibrary { }
	public partial interface IN_DownloadLog { }

	public class FileStorageModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("FileStorage");
			p.AddClass<IN_VirusScanLog>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата проверки", MetaDateTimeType.NotNull())
				.Attribute("ResultCode", "Код результата", MetaIntType.NotNull())
				.Attribute("Title", "Имя файла", MetaStringType.NotNull())
				.Attribute("VirusScanLogID", "Ид", MetaIntType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Загрузивший пользователь")
			;	
			p.AddClass<IN_Folder>()
				.IntKey()
				.Attribute("EnableVersioning", "Включить версионность", MetaBooleanType.NotNull())
				.Attribute("FolderID", "Ид", MetaIntType.NotNull())
				.Attribute("FullPath", "Полный путь", MetaStringType.Null())
				.Attribute("Guid", "Гуид", MetaGuidType.NotNull())
				.Attribute("GuidPath", "Путь Гуид", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsReplicable", "Реплицируемый", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PublishDate", "Дата публикации", MetaDateTimeType.Null())
				.Attribute("SPMActionItemGUID", "Гуид объекта проверки прав", MetaGuidType.NotNull())
				.Attribute("StorageParameter", "Параметр хранения", MetaStringType.Null())
				.Attribute("StorageType", "Тип хранения", MetaEnum.NotNull())
				.Attribute("Tag", "Tag", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("PhysicalPath", "Путь на диске", MetaStringType.Null())
				.Reference<ISPM_Subject>("Creator", "Создавший пользователь")
				.Reference<IN_File>("Files", "Файлы", x => x.Multiple().InverseProperty("Folder"))
				.Reference<IN_Folder>("Folders", "Папки", x => x.Multiple().InverseProperty("Parent"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IN_Folder>("Parent", "Родительская папка", x => x.InverseProperty("Folders"))
			;	
			p.AddClass<IV_N_FolderFile>()
				.IntKey()
				.Attribute("Extension", "Тип", MetaStringType.NotNull())
				.Attribute("ID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("LastModifiedUserID", "Последний редактировавший пользователь", MetaIntType.NotNull())
				.Attribute("LastModifiedUserTitle", "Последний изменивший пользователь", MetaStringType.Null())
				.Attribute("ParentID", "Ид родительского объекта", MetaIntType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
			;	
			p.AddClass<IN_File>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала действия", MetaDateTimeType.NotNull())
				.Attribute("EndDate", "Дата окончания действия", MetaDateTimeType.NotNull())
				.Attribute("Extension", "Расширение", MetaStringType.NotNull())
				.Attribute("FeatureGUID", "Guid элемента", MetaGuidType.Null())
				.Attribute("FileID", "Ид", MetaIntType.NotNull())
				.Attribute("Guid", "Guid", MetaGuidType.NotNull())
				.Attribute("GuidPath", "Путь Guid", MetaStringType.Null())
				.Attribute("IsDiskStorage", "Хранится на диске", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Length", "Размер, байт", MetaLongType.NotNull())
				.Attribute("MainGUID", "Guid основной версии", MetaGuidType.Null())
				.Attribute("Password", "Password", MetaStringType.Null())
				.Attribute("Path", "Путь", MetaStringType.Null())
				.Attribute("PublishDate", "Дата публикации", MetaDateTimeType.Null())
				.Attribute("StorageParameter", "Параметр хранения", MetaStringType.Null())
				.Attribute("StorageType", "Тип хранения", MetaEnum.NotNull())
				.Attribute("Tag", "Tag", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("VersionNumber", "Номер версии", MetaIntType.NotNull())
				.ComputedAttribute("PhysicalPath", "Путь на диске", MetaStringType.Null())
				.PersistentComputedAttribute("IsDeleted", "Признак Удалено", MetaBooleanType.Null())
				.Reference<ISPM_Subject>("CheckedOutBy", "Кем извлечено")
				.Reference<ISPM_Subject>("Creator", "Создавший пользователь")
				.Reference<IN_Folder>("Folder", "Папка", x => x.InverseProperty("Files"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IN_FileLibraryType>()
				.IntKey()
				.Attribute("ClassName", "Имя класса", MetaStringType.Null())
				.Attribute("Extensions", "Расширения", MetaStringType.NotNull())
				.Attribute("FileLibraryTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IN_FileLibrary>()
				.Attribute("MaxFileSize", "Максимальный размер файла", MetaIntType.NotNull())
				.Reference<IN_FileLibraryType>("FileLibraryType", "Тип")
			;	
			p.AddClass<IN_DownloadLog>()
				.IntKey()
				.Attribute("DownloadLogID", "Ид", MetaIntType.NotNull())
				.Attribute("FileGUID", "ИД Файла", MetaGuidType.NotNull())
				.Attribute("IP", "IP", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IN_File>("File", "Файл")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			return p;
		}
	}
	public partial interface IN_ObjectChange { }
	public partial interface IN_ObjectPropertyChange { }

	public class ChangeHistoryModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("ChangeHistory");
			p.AddClass<IN_ObjectChange>()
				.IntKey()
				.Attribute("Details", "Дополнительная информация", MetaStringType.NotNull())
				.Attribute("IP", "IP", MetaStringType.NotNull())
				.Attribute("LastModifiedDate", "Дата изменения", MetaDateTimeType.NotNull())
				.Attribute("ObjectChangeID", "Ид", MetaIntType.NotNull())
				.Attribute("ObjectKey", "Ид объекта", MetaStringType.NotNull())
				.Attribute("ObjectTitle", "Название объекта", MetaStringType.NotNull())
				.Attribute("ObjectTypeSysName", "Системное имя типа объекта", MetaStringType.NotNull())
				.Attribute("ObjectTypeTitle", "Тип объекта", MetaStringType.NotNull())
				.Attribute("SubjectID", "Ид субъекта доступа", MetaIntType.NotNull())
				.Attribute("Title", "Действие", MetaStringType.NotNull())
				.Attribute("UserLogin", "Логин пользователя", MetaStringType.NotNull())
				.Attribute("UserTitle", "Имя пользователя", MetaStringType.NotNull())
				.Reference<IN_ObjectPropertyChange>("PropertyChanges", "Изменения свойств", x => x.Multiple().InverseProperty("ObjectChange"))
			;	
			p.AddClass<IN_ObjectPropertyChange>()
				.IntKey()
				.Attribute("NewValue", "Новое значение", MetaStringType.Null())
				.Attribute("NewValueTitle", "Отображаемый текст нового значения", MetaStringType.NotNull())
				.Attribute("ObjectPropertyChangeID", "Ид", MetaIntType.NotNull())
				.Attribute("OldValue", "Старое значение", MetaStringType.Null())
				.Attribute("OldValueTitle", "Отображаемый текст старого значения", MetaStringType.NotNull())
				.Attribute("PropertySysName", "Системное имя свойства", MetaStringType.NotNull())
				.Attribute("Title", "Наименование свойства", MetaStringType.NotNull())
				.Reference<IN_ObjectChange>("ObjectChange", "Изменение объекта", x => x.InverseProperty("PropertyChanges"))
			;	
			return p;
		}
	}
	public partial interface IN_Navig { }
	public partial interface IN_NavigItem { }
	public partial interface IN_Node { }
	public partial interface ICMSFormView { }

	public class NavigationModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Navigation");
			p.AddClass<IN_Navig>()
				.GuidKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MaxLevels", "Максимальное количество уровней", MetaIntType.Null())
				.Attribute("NavigGUID", "Ид", MetaGuidType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<IN_NavigItem>("Items", "Элементы", x => x.Multiple().InverseProperty("Navig"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IN_NavigItem>()
				.GuidKey()
				.Attribute("Expression", "Вычисляемая часть наименования", MetaStringType.Null())
				.Attribute("FURL", "Friendly URL", MetaStringType.Null())
				.Attribute("ImageURL", "URL картинки", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("NavigItemGUID", "Ид", MetaGuidType.NotNull())
				.Attribute("OldID", "Старый ИД", MetaIntType.Null())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SPMActionGUID", "Защищаемая операция", MetaGuidType.Null())
				.Attribute("Tag", "Дополнительные данные", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Tooltip", "Подсказка", MetaStringType.Null())
				.Attribute("Type", "Тип", MetaEnum.NotNull())
				.Attribute("URL", "Реальный URL", MetaStringType.Null())
				.Reference<IN_NavigItem>("Child", "Дочерние элементы", x => x.Multiple().InverseProperty("Parent"))
				.Reference<IMM_FormView>("FormView", "Представление")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_Method>("Method", "Метод")
				.Reference<IN_Navig>("Navig", "Меню", x => x.InverseProperty("Items"))
				.Reference<IN_Node>("Node", "Страница сайта")
				.Reference<IN_NavigItem>("Parent", "Родительский элемент", x => x.InverseProperty("Child"))
			;	
			p.AddClass<IN_Node>()
				.GuidKey()
				.Attribute("Alt", "Подсказка", MetaStringType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateTimeType.NotNull())
				.Attribute("Description", "Описание", MetaStringType.Null())
				.Attribute("FURL", "Friendly URL", MetaStringType.Null())
				.Attribute("ImageURL", "URL изображения", MetaStringType.Null())
				.Attribute("IsDeleted", "Признак Опубликовано", MetaBooleanType.NotNull())
				.Attribute("Keywords", "Ключевые слова", MetaStringType.Null())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("NodeGUID", "Ид", MetaGuidType.NotNull())
				.Attribute("NodeID", "Старый ид", MetaIntType.Null())
				.Attribute("PageTitle", "Заголовок страниц", MetaStringType.Null())
				.Attribute("Parameters", "Параметры мастер-страницы", MetaStringType.Null())
				.Attribute("PublishDate", "Дата публикации", MetaDateTimeType.Null())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_FormView>("MasterPage", "Мастер-страница")
			;	
			p.AddClass<ICMSFormView>()
			;	
			return p;
		}
	}
	public partial interface IWF_Workflow { }
	public partial interface IWF_Activity { }
	public partial interface IWF_Transition { }

	public class WorkflowModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Workflow");
			p.AddClass<IWF_Workflow>()
				.IntKey()
				.Attribute("IsActive", "Действующий", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("WorkflowID", "Ид", MetaIntType.NotNull())
				.Reference<IWF_Activity>("Activities", "Активности", x => x.Multiple().InverseProperty("Workflow"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMM_ObjectType>("ObjectType", "Тип объекта")
			;	
			p.AddClass<IWF_Activity>()
				.IntKey()
				.Attribute("ActivityID", "Ид", MetaIntType.NotNull())
				.Attribute("IsActive", "Действующее", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<IWF_Activity>("ChildActivities", "Дочерние активности", x => x.Multiple().InverseProperty("ParentActivity"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IWF_Activity>("ParentActivity", "Родительская активность", x => x.InverseProperty("ChildActivities"))
				.Reference<IWF_Workflow>("Workflow", "Рабочий процесс", x => x.InverseProperty("Activities"))
			;	
			p.AddClass<IWF_Transition>()
				.IntKey()
				.Attribute("IsActive", "Действующий", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SeqNo", "Порядковый номер", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TransitionID", "Ид", MetaIntType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IWF_Activity>("Parent", "Исходная активность")
				.Reference<IWF_Activity>("TargetActivity", "Целевая активность")
			;	
			return p;
		}
	}

	public class TemplatesModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Templates");
			return p;
		}
	}

	public class MasterPagesModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("MasterPages");
			return p;
		}
	}
	public partial interface IErrorLog { }

	public class UtilsModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Utils");
			p.AddClass<IErrorLog>()
				.IntKey()
				.Attribute("ErrorDate", "Дата ошибки", MetaDateTimeType.NotNull())
				.Attribute("ErrorLogID", "Ид ошибки", MetaIntType.NotNull())
				.Attribute("ErrorText", "Текст ошибки", MetaStringType.NotNull())
				.Attribute("Hash", "Хэш", MetaByteArrayType.Null())
				.Attribute("Headers", "Заголовки", MetaStringType.Null())
				.Attribute("RequestType", "Тип запроса", MetaStringType.Null())
				.Attribute("SimilarErrorID", "Похожая ошибка", MetaIntType.Null())
				.Attribute("SqlLog", "Протокол SQL", MetaStringType.Null())
				.Attribute("Url", "Адрес", MetaStringType.Null())
				.Attribute("UrlReferrer", "Адрес, с которого перешли", MetaStringType.Null())
				.Attribute("UserAgent", "User-Agent", MetaStringType.Null())
				.Attribute("UserHostAddress", "Адрес хоста пользователя", MetaStringType.Null())
				.Attribute("UserHostName", "Имя хоста пользователя", MetaStringType.Null())
				.Attribute("UserName", "Имя пользователя", MetaStringType.Null())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
			;	
			return p;
		}
	}
	public partial interface IDbFolder { }
	public partial interface IDbFile { }
	public partial interface IDbItem { }

	public class FileStorage2Module
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("FileStorage2");
			p.AddClass<IDbFolder>()
				.GuidKey()
				.Attribute("ID", "Ид папки", MetaGuidType.NotNull())
			;	
			p.AddClass<IDbFile>()
				.GuidKey()
				.Attribute("ID", "Ид файла", MetaGuidType.NotNull())
			;	
			p.AddClass<IDbItem>()
				.GuidKey()
				.Attribute("ID", "ID", MetaGuidType.NotNull())
			;	
			return p;
		}
	}
	public partial interface IC_FIAS_ActualStatus { }
	public partial interface IC_FIAS_AddressObject { }
	public partial interface IC_FIAS_CenterStatus { }
	public partial interface IC_FIAS_OperationStatus { }
	public partial interface IC_FIAS_CurrentStatus { }
	public partial interface IC_FIAS_NormativeDocument { }
	public partial interface IC_FIAS_House { }
	public partial interface IC_FIAS_EstateStatus { }
	public partial interface IC_FIAS_IntervalStatus { }
	public partial interface IC_FIAS_StructureStatus { }
	public partial interface IC_FIAS_HouseStateStatus { }
	public partial interface IC_FIAS_HouseInterval { }
	public partial interface IC_FIAS_Landmark { }
	public partial interface IC_FIAS_AddressObjectType { }

	public class FIASModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("FIAS");
			p.AddClass<IC_FIAS_ActualStatus>()
				.IntKey()
				.Attribute("ActStatID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_AddressObject>()
				.GuidKey()
				.Attribute("AoGUID", "Глобальный уникальный идентификатор", MetaGuidType.NotNull())
				.Attribute("AoID", "Уникальный идентификатор записи", MetaGuidType.NotNull())
				.Attribute("AoLevel", "Уровень адресного объекта", MetaIntType.NotNull())
				.Attribute("AreaCode", "Код района", MetaStringType.NotNull())
				.Attribute("AutoCode", "Код автономии	", MetaStringType.NotNull())
				.Attribute("CityCode", "Код города", MetaStringType.NotNull())
				.Attribute("Code", "Код адресного объекта одной строкой с признаком актуальности из КЛАДР 4.0.", MetaStringType.Null())
				.Attribute("CtarCode", "Код внутригородского района", MetaStringType.NotNull())
				.Attribute("EndDate", "Окончание действия записи", MetaDateTimeType.NotNull())
				.Attribute("ExtrCode", "Код дополнительного адресообразующего элемента", MetaStringType.NotNull())
				.Attribute("FormalName", "Формализованное наименование", MetaStringType.NotNull())
				.Attribute("IFNSFL", "Код ИФНС ФЛ", MetaStringType.Null())
				.Attribute("IFNSUL", "Код ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("LiveStatus", "Признак действующего адресного объекта", MetaIntType.NotNull())
				.Attribute("NextID", "Идентификатор записи  связывания с последующей исторической записью", MetaGuidType.Null())
				.Attribute("OffName", "Официальное наименование", MetaStringType.Null())
				.Attribute("OKATO", "OKATO", MetaStringType.Null())
				.Attribute("OKTMO", "OKTMO", MetaStringType.Null())
				.Attribute("ParentGuid", "Идентификатор объекта родительского объекта", MetaGuidType.Null())
				.Attribute("PlaceCode", "Код населенного пункта", MetaStringType.NotNull())
				.Attribute("PlainCode", "Код адресного объекта из КЛАДР 4.0 одной строкой без признака актуальности (последних двух цифр)", MetaStringType.Null())
				.Attribute("PostalCode", "Почтовый индекс", MetaStringType.Null())
				.Attribute("PrevID", "Идентификатор записи связывания с предыдушей исторической записью", MetaGuidType.Null())
				.Attribute("RegionCode", "Код региона", MetaStringType.NotNull())
				.Attribute("SextCode", "Код подчиненного дополнительного адресообразующего элемента", MetaStringType.NotNull())
				.Attribute("ShortName", "Краткое наименование типа объекта", MetaStringType.NotNull())
				.Attribute("StartDate", "Начало действия записи", MetaDateTimeType.NotNull())
				.Attribute("StreetCode", "Код улицы", MetaStringType.NotNull())
				.Attribute("TerrIFNSFL", "Код территориального участка ИФНС ФЛ", MetaStringType.Null())
				.Attribute("TerrIFNSUL", "Код территориального участка ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("UpdateDate", "Дата  внесения записи", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.PersistentComputedAttribute("DisplayTitle", "Полное наименование", MetaStringType.Null())
				.Reference<IC_FIAS_ActualStatus>("ActStatus", "Статус актуальности адресного объекта ФИАС")
				.Reference<IC_FIAS_CenterStatus>("CentStatus", "Статус центра")
				.Reference<IC_FIAS_CurrentStatus>("CurrStatus", "Статус актуальности КЛАДР 4 (последние две цифры в коде)")
				.Reference<IC_FIAS_NormativeDocument>("NormDoc", "Внешний ключ на нормативный документ")
				.Reference<IC_FIAS_OperationStatus>("OperStatus", "Статус действия над записью – причина появления записи")
			;	
			p.AddClass<IC_FIAS_CenterStatus>()
				.IntKey()
				.Attribute("CenterStID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_OperationStatus>()
				.IntKey()
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.Attribute("OperStatID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_CurrentStatus>()
				.IntKey()
				.Attribute("CurentStID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_NormativeDocument>()
				.GuidKey()
				.Attribute("DocDate", "Дата документа", MetaDateTimeType.Null())
				.Attribute("DocDateSpecified", "DocDateSpecified", MetaBooleanType.NotNull())
				.Attribute("DocImgID", "Идентификатор образа (внешний ключ)", MetaIntType.Null())
				.Attribute("DocName", "Наименование документа", MetaStringType.Null())
				.Attribute("DocNum", "Номер документа", MetaStringType.Null())
				.Attribute("DocType", "Тип документа", MetaIntType.NotNull())
				.Attribute("NormDocID", "Ид", MetaGuidType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_House>()
				.GuidKey()
				.Attribute("BuildNum", "Номер корпуса", MetaStringType.Null())
				.Attribute("Counter", "Счетчик записей домов для КЛАДР 4", MetaIntType.NotNull())
				.Attribute("EndDate", "Окончание действия записи", MetaDateTimeType.NotNull())
				.Attribute("HouseGuid", "Глобальный уникальный идентификатор дома", MetaGuidType.NotNull())
				.Attribute("HouseID", "Уникальный идентификатор", MetaGuidType.NotNull())
				.Attribute("HouseNum", "Номер дома", MetaStringType.Null())
				.Attribute("IFNSFL", "Код ИФНС ФЛ", MetaStringType.Null())
				.Attribute("IFNSUL", "Код ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("OKATO", "OKATO", MetaStringType.Null())
				.Attribute("OKTMO", "OKTMO", MetaStringType.Null())
				.Attribute("PostalCode", "Почтовый индекс", MetaStringType.Null())
				.Attribute("StartDate", "Начало действия записи", MetaDateTimeType.NotNull())
				.Attribute("StrucNum", "Номер строения", MetaStringType.Null())
				.Attribute("TerrIFNSFL", "Код территориального участка ИФНС ФЛ", MetaStringType.Null())
				.Attribute("TerrIFNSUL", "Код территориального участка ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("UpdateDate", "Дата время внесения записи", MetaDateTimeType.NotNull())
				.PersistentComputedAttribute("Title", "Полное наименование", MetaStringType.Null())
				.Reference<IC_FIAS_AddressObject>("Ao", "Родительский объект (улица, город, населеннй пункт и т.п.)")
				.Reference<IC_FIAS_EstateStatus>("EstStatus", "Признак владения")
				.Reference<IC_FIAS_NormativeDocument>("NormDoc", "Нормативный документ")
				.Reference<IC_FIAS_HouseStateStatus>("StatStatus", "Состояние дома")
				.Reference<IC_FIAS_StructureStatus>("StrStatus", "Признак строения")
			;	
			p.AddClass<IC_FIAS_EstateStatus>()
				.IntKey()
				.Attribute("EstStatID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.Attribute("ShortName", "Краткое наименование", MetaStringType.Null())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_IntervalStatus>()
				.IntKey()
				.Attribute("IntvStatID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_StructureStatus>()
				.IntKey()
				.Attribute("Name", "Наименование", MetaStringType.Null())
				.Attribute("ShortName", "Краткое наименование", MetaStringType.Null())
				.Attribute("StrStatID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_HouseStateStatus>()
				.IntKey()
				.Attribute("HouseStID", "Ид", MetaIntType.NotNull())
				.Attribute("Name", "Наименование", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			p.AddClass<IC_FIAS_HouseInterval>()
				.GuidKey()
				.Attribute("Counter", "Счетчик записей домов для КЛАДР 4", MetaIntType.NotNull())
				.Attribute("EndDate", "Окончание действия записи", MetaDateTimeType.NotNull())
				.Attribute("HouseIntID", "Ид", MetaGuidType.NotNull())
				.Attribute("IFNSFL", "Код ИФНС ФЛ", MetaStringType.Null())
				.Attribute("IFNSUL", "Код ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("IntEnd", "Значение окончания интервала", MetaIntType.NotNull())
				.Attribute("IntGUID", "Глобальный уникальный идентификатор", MetaGuidType.NotNull())
				.Attribute("IntStart", "Значение начала интервала", MetaIntType.NotNull())
				.Attribute("OKATO", "OKATO", MetaStringType.Null())
				.Attribute("OKTMO", "OKTMO", MetaStringType.Null())
				.Attribute("PostalCode", "Почтовый индекс", MetaStringType.Null())
				.Attribute("StartDate", "Начало действия записи", MetaDateTimeType.NotNull())
				.Attribute("TerrIFNSFL", "Код территориального участка ИФНС ФЛ", MetaStringType.Null())
				.Attribute("TerrIFNSUL", "Код территориального участка ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("UpdateDate", "Дата  внесения записи", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<IC_FIAS_AddressObject>("Ao", "Идентификатор объекта")
				.Reference<IC_FIAS_IntervalStatus>("IntStatus", "Статус интервала")
				.Reference<IC_FIAS_NormativeDocument>("NormDoc", "Нормативный документ")
			;	
			p.AddClass<IC_FIAS_Landmark>()
				.GuidKey()
				.Attribute("EndDate", "Окончание действия записи", MetaDateTimeType.NotNull())
				.Attribute("IFNSFL", "Код ИФНС ФЛ", MetaStringType.Null())
				.Attribute("IFNSUL", "Код ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("LandGUID", "Глобальный уникальный идентификатор", MetaGuidType.NotNull())
				.Attribute("LandID", "Уникальный идентификатор", MetaGuidType.NotNull())
				.Attribute("Location", "Месторасположение ориентира", MetaStringType.NotNull())
				.Attribute("OKATO", "OKATO", MetaStringType.Null())
				.Attribute("OKTMO", "OKTMO", MetaStringType.Null())
				.Attribute("PostalCode", "Почтовый индекс	", MetaStringType.Null())
				.Attribute("StartDate", "Начало действия записи", MetaDateTimeType.NotNull())
				.Attribute("TerrIFNSFL", "Код территориального участка ИФНС ФЛ", MetaStringType.Null())
				.Attribute("TerrIFNSUL", "Код территориального участка ИФНС ЮЛ", MetaStringType.Null())
				.Attribute("UpdateDate", "Дата  внесения записи", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<IC_FIAS_AddressObject>("Ao", "Родительский объект (улици, город и т.п.)")
				.Reference<IC_FIAS_NormativeDocument>("NormDoc", "Нормативный документ")
			;	
			p.AddClass<IC_FIAS_AddressObjectType>()
				.IntKey()
				.Attribute("KOD_T_ST", "Ключевое поле", MetaIntType.NotNull())
				.Attribute("Level", "Уровень адресного объекта", MetaIntType.NotNull())
				.Attribute("ScName", "Краткое наименование типа объекта", MetaStringType.Null())
				.Attribute("SocrName", "Полное наименование типа объекта", MetaStringType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
			;	
			return p;
		}
	}
	public partial interface IOrgUnit { }
	public partial interface IC_OrgUnitHie { }
	public partial interface IOrgUnitAsso { }
	public partial interface IC_OrgUnitType { }
	public partial interface IOrgUnitHieRule { }
	public partial interface IEmployee { }
	public partial interface IOrgUnitResponsible { }

	public class OrgStructureModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("OrgStructure");
			p.AddClass<IOrgUnit>()
				.GuidKey()
				.Attribute("BeginDate", "Дата начала действия", MetaDateTimeType.NotNull())
				.Attribute("ChiefName", "Ф.И.О. руководителя", MetaStringType.Null())
				.Attribute("ChiefPhone", "Телефон руководителя", MetaStringType.Null())
				.Attribute("ChiefPost", "Должность руководителя", MetaStringType.Null())
				.Attribute("ContactEMail", "Адрес электронной почты контактного лица", MetaStringType.Null())
				.Attribute("ContactName", "Ф.И.О. контактного лица", MetaStringType.Null())
				.Attribute("ContactPhone", "Телефон контактного лица", MetaStringType.Null())
				.Attribute("ContactPost", "Должность контактного лица", MetaStringType.Null())
				.Attribute("EMail", "Адрес электронной почты", MetaStringType.Null())
				.Attribute("EndDate", "Дата окончания действия", MetaDateTimeType.Null())
				.Attribute("ExternalID", "Ид во внешней системе", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("OrgUnitGUID", "ИД", MetaGuidType.NotNull())
				.Attribute("PostAddress", "Почтовый адрес", MetaStringType.Null())
				.Attribute("ShortTitle", "Краткое наименование", MetaStringType.Null())
				.Attribute("SpecCalc", "Спецрасчет", MetaBooleanType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitleGenetive", "Наименование (родительный падеж)", MetaStringType.Null())
				.Attribute("VersionNumber", "Номер версии", MetaIntType.NotNull())
				.Attribute("VipNetCode", "VipNet код", MetaStringType.Null())
				.Reference<IOrgUnitAsso>("FromChildAsso", "Ассоциация дочернего элемента", x => x.Multiple().InverseProperty("ChildOrgUnit"))
				.Reference<IOrgUnitAsso>("FromParentAsso", "Ассоциация родительского элемента", x => x.Multiple().InverseProperty("ParentOrgUnit"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("Main", "Основная версия")
				.Reference<IC_PensionerCategory>("PensionerCategory", "Категория пенсионера")
				.Reference<IC_PostPart>("PostParts", "Перечень должностей", x => x.Multiple())
				.Reference<IC_RFSubject>("RFSubject", "Субъект РФ")
				.Reference<IC_RFSubject>("RFSubjects", "Субъекты РФ", x => x.Multiple())
				.Reference<IC_OrgUnitType>("Type", "Тип")
			;	
			p.AddClass<IC_OrgUnitHie>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("OrgUnitHieID", "ИД", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IOrgUnitAsso>()
				.GuidKey()
				.Attribute("OrgUnitAssoGUID", "Ид", MetaGuidType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<IOrgUnit>("ChildOrgUnit", "Дочерний элемент", x => x.InverseProperty("FromChildAsso"))
				.Reference<IC_OrgUnitHie>("OrgUnitHie", "Иерархия")
				.Reference<IOrgUnit>("ParentOrgUnit", "Родительский элемент", x => x.InverseProperty("FromParentAsso"))
			;	
			p.AddClass<IC_OrgUnitType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("OrgUnitTypeID", "ИД", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IOrgUnitHieRule>()
				.GuidKey()
				.Attribute("OrgUnitHieRuleGUID", "Ид", MetaGuidType.NotNull())
				.ComputedAttribute("Title", "Title", MetaStringType.Null())
				.Reference<IC_OrgUnitType>("ChildOrgUnitType", "Дочерний элемент")
				.Reference<IC_OrgUnitHie>("OrgUnitHie", "Иерархия")
				.Reference<IC_OrgUnitType>("ParentOrgUnitType", "Родительский элемент")
			;	
			p.AddClass<IEmployee>()
				.GuidKey()
				.Attribute("BeginDate", "Дата начала действия", MetaDateTimeType.NotNull())
				.Attribute("BirthDate", "Дата рождения", MetaDateType.Null())
				.Attribute("Email", "E-mail", MetaStringType.Null())
				.Attribute("EmployeeGUID", "ИД", MetaGuidType.NotNull())
				.Attribute("EndDate", "Дата окончания действия", MetaDateTimeType.Null())
				.Attribute("ExternalID", "Внешний идентификатор", MetaStringType.Null())
				.Attribute("Firstname", "Имя", MetaStringType.NotNull())
				.Attribute("HaveAccessToPC", "Наличие доступа к компьютеру", MetaBooleanType.Null())
				.Attribute("IsChief", "Руководитель подразделения", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("Job", "Должность", MetaStringType.Null())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateType.NotNull())
				.Attribute("Mobile", "Мобильный телефон", MetaStringType.Null())
				.Attribute("Patronymic", "Отчество", MetaStringType.Null())
				.Attribute("Phone", "Рабочий телефон", MetaStringType.Null())
				.Attribute("Photo", "Фото", MetaFileType.Null())
				.Attribute("Surname", "Фамилия", MetaStringType.NotNull())
				.Attribute("VersionNumber", "Номер версии", MetaIntType.NotNull())
				.PersistentComputedAttribute("Title", "ФИО", MetaStringType.Null())
				.Reference<IEmployee>("Chief", "Вышестоящий сотрудник")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IEmployee>("Main", "Основная версия")
				.Reference<IOrgUnit>("OrgUnit", "Организационная единица")
				.Reference<ISPM_Subject>("Subject", "Пользователь")
			;	
			p.AddClass<IOrgUnitResponsible>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала замены", MetaDateType.Null())
				.Attribute("EMail", "Адрес электронной почты", MetaStringType.Null())
				.Attribute("EndDate", "Дата окончания замены", MetaDateType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsReserved", "Дублирующий", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OrgUnitResponsibleID", "Ид", MetaIntType.NotNull())
				.Attribute("Phone", "Телефон", MetaStringType.Null())
				.Attribute("Post", "Должность", MetaStringType.Null())
				.Attribute("StructUnit", "Структурное подразделение", MetaStringType.Null())
				.Attribute("Title", "Ф.И.О", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Отделение ПФР")
			;	
			return p;
		}
	}
	public partial interface IDoc { }
	public partial interface IDocAsso { }
	public partial interface IAppendix { }
	public partial interface ICitizen { }
	public partial interface IDocTask { }
	public partial interface IPensionFile { }
	public partial interface IJuridicalCase { }
	public partial interface ICitizenRequest { }
	public partial interface IDocTaskOperation { }
	public partial interface IWorkInfo { }
	public partial interface IDocTaskRequest { }
	public partial interface ICitizenPension { }
	public partial interface IMassCalc { }
	public partial interface IControlTask { }
	public partial interface IInfoDoc { }
	public partial interface IComplaint { }
	public partial interface ICourtSession { }
	public partial interface IDocTaskComplaint { }
	public partial interface IOutDocSend { }
	public partial interface IOfficeNote { }
	public partial interface IMassOperationQueue { }

	public class CivilServantsModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("CivilServants");
			p.AddClass<IDoc>()
				.IntKey()
				.Attribute("CitizenAddress", "Адрес", MetaStringType.Null())
				.Attribute("CitizenBirthdate", "Дата рождения", MetaDateType.Null())
				.Attribute("CitizenFirstname", "Имя", MetaStringType.Null())
				.Attribute("CitizenIndex", "Индекс", MetaStringType.Null())
				.Attribute("CitizenPatronymic", "Отчество", MetaStringType.Null())
				.Attribute("CitizenSnils", "СНИЛС", MetaStringType.Null())
				.Attribute("CitizenSurname", "Фамилия", MetaStringType.Null())
				.Attribute("CitizenVIP", "VIP", MetaBooleanType.NotNull())
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("CompleteDate", "Дата завершения обработки документа", MetaDateType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("DecisionDocDate", "Дата решения ФО", MetaDateType.Null())
				.Attribute("DecisionDocNo", "Номер решения ФО", MetaStringType.Null())
				.Attribute("DocID", "Ид", MetaIntType.NotNull())
				.Attribute("DocNo", "Порядовый номер для регномера", MetaIntType.Null())
				.Attribute("File", "Электронный образ документа", MetaFileType.Null())
				.Attribute("Guid", "Гуид", MetaGuidType.Null())
				.Attribute("IsApproved", "Проверен", MetaBooleanType.NotNull())
				.Attribute("IsCheckDeadline", "Признак контроля исполнения документа", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsMigrationData", "IsMigrationData", MetaBooleanType.NotNull())
				.Attribute("JPSignPerson", "Подписант документа (Ф.И.О.)", MetaStringType.Null())
				.Attribute("JPSignPersonPost", "Должность подписанта", MetaStringType.Null())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("LastRegDate", "Дата регистрации последнего документа в цепочке", MetaDateType.Null())
				.Attribute("MilestoneDate", "Контрольный срок исполнения документа", MetaDateType.Null())
				.Attribute("OuterRegDate", "Дата регистрации", MetaDateType.Null())
				.Attribute("OuterRegNo", "Номер регистрации", MetaStringType.Null())
				.Attribute("PPAddress", "Адрес проживания", MetaStringType.Null())
				.Attribute("PPName", "Ф.И.О.", MetaStringType.Null())
				.Attribute("PPPhone", "Телефон", MetaStringType.Null())
				.Attribute("PrintNo", "Номер для печати", MetaStringType.Null())
				.Attribute("RecordStatementDate", "Дата формирования описи", MetaDateType.Null())
				.Attribute("RecordStatementNo", "Номер описи документов", MetaStringType.Null())
				.Attribute("RegDate", "Дата регистрации", MetaDateType.Null())
				.Attribute("RegNo", "Номер регистрации", MetaStringType.Null())
				.Attribute("SendDate", "Дата отправки", MetaDateType.Null())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.ComputedAttribute("TitleWithSender", "Наименование с отправителем", MetaStringType.Null())
				.PersistentComputedAttribute("CitizenTitle", "Ф.И.О. гражданина", MetaStringType.Null())
				.Reference<IWF_Activity>("Activity", "Activity")
				.Reference<IAppendix>("Appendix", "Приложения", x => x.Multiple().InverseProperty("Doc"))
				.Reference<IC_RFSubject>("CitizenRFSubject", "Субъект РФ")
				.Reference<IEmployee>("Creator", "Автор")
				.Reference<IC_DocClass>("DocClass", "Тип документа")
				.Reference<IDocTask>("DocTask", "Является результатом задания", x => x.InverseProperty("ResultDocs"))
				.Reference<IDocTaskOperation>("DocTaskOperation", "Является результатом операции")
				.Reference<IDocTask>("DocTasks", "Задания", x => x.Multiple().InverseProperty("Doc"))
				.Reference<IC_DocType>("DocType", "Вид документа")
				.Reference<IOrgUnit>("Federal", "Федеральный орган")
				.Reference<IEmployee>("InnerSignPerson", "Подписант документа")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMassCalc>("MassCalc", "Является результатом массового перерасчета")
				.Reference<IC_PaymentType>("PaymentType", "Вид ГПО")
				.Reference<IPensionFile>("PensionFile", "Пенсионное дело")
				.Reference<IC_ProvisionMode>("ProvisionMode", "Способ передачи документа")
				.Reference<IEmployee>("RegEmployee", "Регистратор документа")
				.Reference<IOrgUnit>("Sender", "Отправитель")
				.Reference<IC_SenderCategory>("SenderCategory", "Категория отправителя")
			;	
			p.AddClass<IDocAsso>()
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IDoc>("ChildDoc", "Дочерний документ")
				.Reference<IDoc>("ParentDoc", "Родительский документ")
			;	
			p.AddClass<IAppendix>()
				.IntKey()
				.Attribute("AppendixID", "Ид", MetaIntType.NotNull())
				.Attribute("Author", "Орган, выдавший приложение", MetaStringType.Null())
				.Attribute("CreateDate", "Дата выдачи приложения", MetaDateType.Null())
				.Attribute("File", "Электронный образ документа", MetaFileType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IC_DocName>("AppendixName", "Название приложения ")
				.Reference<IDoc>("Doc", "Документ", x => x.InverseProperty("Appendix"))
				.Reference<IDocTaskOperation>("DocTaskOperation", "Результат операции массового перерасчета")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<ICitizen>()
				.IntKey()
				.Attribute("Address", "Адрес", MetaStringType.Null())
				.Attribute("Birthdate", "Дата рождения", MetaDateType.Null())
				.Attribute("CitizenID", "Ид", MetaIntType.NotNull())
				.Attribute("CloseDate", "Дата закрытия", MetaDateType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("Deathdate", "Дата смерти", MetaDateType.Null())
				.Attribute("Firstname", "Имя", MetaStringType.NotNull())
				.Attribute("FirstnameDative", "Имя (дательный падеж)", MetaStringType.Null())
				.Attribute("FirstnameGenitive", "Имя (родительный падеж)", MetaStringType.Null())
				.Attribute("Index", "Индекс", MetaStringType.Null())
				.Attribute("InWork", "В работе", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsMigrationData", "IsMigrationData", MetaBooleanType.NotNull())
				.Attribute("IsTrackingData", "Признак учета контрольных данных", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Passport", "Паспортные данные", MetaStringType.Null())
				.Attribute("Patronymic", "Отчество", MetaStringType.Null())
				.Attribute("PatronymicDative", "Отчество (дательный падеж)", MetaStringType.Null())
				.Attribute("PatronymicGenitive", "Отчество (родительный падеж)", MetaStringType.Null())
				.Attribute("Phone", "Домашний телефон", MetaStringType.Null())
				.Attribute("RFSubjectText", "Субъект РФ (название)", MetaStringType.Null())
				.Attribute("Sex", "Пол", MetaEnum.NotNull())
				.Attribute("Snils", "СНИЛС", MetaStringType.Null())
				.Attribute("Surname", "Фамилия", MetaStringType.NotNull())
				.Attribute("SurnameDative", "Фамилия (дательный падеж)", MetaStringType.Null())
				.Attribute("SurnameGenitive", "Фамилия (родительный падеж)", MetaStringType.Null())
				.Attribute("VIP", "VIP", MetaBooleanType.NotNull())
				.PersistentComputedAttribute("FullTitle", "Ф.И.О. полное", MetaStringType.Null())
				.PersistentComputedAttribute("FullTitleWithBirth", "Ф.И.О. полное с др", MetaStringType.Null())
				.PersistentComputedAttribute("Title", "Ф.И.О.", MetaStringType.Null())
				.Reference<IC_CitizenCategory>("Category", "Категория")
				.Reference<ICitizenPension>("CitizenPension", "Трудовая пенсия", x => x.Multiple().InverseProperty("Citizen"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Отделение ПФР")
				.Reference<IC_RFSubject>("RFSubject", "Субъект РФ")
				.Reference<IC_SpecialNote>("SpecialNote", "Особые отметки", x => x.Multiple())
			;	
			p.AddClass<IDocTask>()
				.IntKey()
				.Attribute("AnnulmentDate", "Дата аннулирования", MetaDateType.Null())
				.Attribute("AssignmentDate", "Дата назначения исполнителя", MetaDateTimeType.Null())
				.Attribute("CheckedDate", "Дата окончания проверки", MetaDateTimeType.Null())
				.Attribute("CloseDate", "Дата закрытия задания", MetaDateTimeType.Null())
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("CompleteDate", "Дата исполнения задания", MetaDateTimeType.Null())
				.Attribute("Copy_Citizen_Address", "Адрес", MetaStringType.Null())
				.Attribute("Copy_Citizen_Firstname", "Имя", MetaStringType.Null())
				.Attribute("Copy_Citizen_FirstnameDative", "Имя (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_FirstnameGenitive", "Имя (родительный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_Index", "Индекс", MetaStringType.Null())
				.Attribute("Copy_Citizen_Patronymic", "Отчество", MetaStringType.Null())
				.Attribute("Copy_Citizen_PatronymicDative", "Отчество (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_PatronymicGenitive", "Отчество (родительный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_RFSubjectText", "Субъект РФ", MetaStringType.Null())
				.Attribute("Copy_Citizen_Surname", "Фамилия", MetaStringType.Null())
				.Attribute("Copy_Citizen_SurnameDative", "Фамилия (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_SurnameGenitive", "Фамилия (родительный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_VIP", "VIP", MetaBooleanType.NotNull())
				.Attribute("CreateDate", "Дата выдачи задания", MetaDateTimeType.Null())
				.Attribute("DocTaskID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsMigrationData", "IsMigrationData", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OnCheckDate", "Дата начала проверки", MetaDateTimeType.Null())
				.Attribute("PlanCompleteDate", "Плановая дата исполнения задания", MetaDateType.Null())
				.Attribute("ReturnedDate", "Дата возврата", MetaDateTimeType.Null())
				.Attribute("SignDate", "Дата подписи", MetaDateType.Null())
				.Attribute("State", "Состояние", MetaStringType.Null())
				.Attribute("SuspendDate", "Дата откладывания", MetaDateType.Null())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.PersistentComputedAttribute("Status", "Статус", MetaStringType.Null())
				.Reference<IWF_Activity>("Activity", "Activity")
				.Reference<IEmployee>("Author", "Автор")
				.Reference<IEmployee>("ChiefPerformer", "Ответственный исполнитель")
				.Reference<ICitizen>("Citizen", "Гражданин")
				.Reference<IDoc>("Doc", "Документ - основание", x => x.InverseProperty("DocTasks"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IEmployee>("Performer", "Исполнитель")
				.Reference<IDoc>("ResultDocs", "Документы - результаты", x => x.Multiple().InverseProperty("DocTask"))
				.Reference<IC_DocTaskType>("Type", "Тип")
			;	
			p.AddClass<IPensionFile>()
				.IntKey()
				.Attribute("ArchiveDate", "Дата передачи в архив", MetaDateType.Null())
				.Attribute("CloseDate", "Дата закрытия", MetaDateType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PensionFileID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Номер", MetaStringType.NotNull())
				.Reference<IEmployee>("ArchiveEmployee", "Сотрудник, передавший дело в архив")
				.Reference<ICitizen>("Citizen", "Гражданин")
				.Reference<IEmployee>("CloseEmployee", "Сотрудник, закрывший дело")
				.Reference<IEmployee>("CreateEmployee", "Сотрудник, создавший дело")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IJuridicalCase>()
				.IntKey()
				.Attribute("ArchiveDate", "Дата передачи в архив", MetaDateType.Null())
				.Attribute("CloseDate", "Дата закрытия", MetaDateType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("JuridicalCaseID", "Ид", MetaIntType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Номер", MetaStringType.NotNull())
				.Reference<IEmployee>("ArchiveEmployee", "Сотрудник, передавший дело в архив")
				.Reference<ICitizen>("Citizen", "Гражданин")
				.Reference<IEmployee>("CloseEmployee", "Сотрудник, закрывший дело")
				.Reference<IEmployee>("CreateEmployee", "Сотрудник, создавший дело")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Судебный орган")
			;	
			p.AddClass<ICitizenRequest>()
				.IntKey()
				.Attribute("CitizenRequestID", "Ид", MetaIntType.NotNull())
				.Attribute("Description", "Краткое описание проблемы", MetaStringType.NotNull())
				.Attribute("Firstname", "Имя", MetaStringType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Patronymic", "Отчество", MetaStringType.Null())
				.Attribute("RequestDate", "Дата обращения", MetaDateTimeType.NotNull())
				.Attribute("Surname", "Фамилия", MetaStringType.NotNull())
				.Attribute("Title", "Регистрационный номер", MetaStringType.NotNull())
				.Reference<ICitizen>("Citizen", "Гражданин")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IEmployee>("RecorderEmployee", "Сотрудник зарегистрировавший обращение")
				.Reference<IC_RequestCategory>("RequestCategory", "Категория обращения")
				.Reference<IC_RequestMethod>("RequestMethod", "Способ обращения")
				.Reference<IC_RequestResultCategory>("RequestResult", "Результат обращения")
				.Reference<IC_RFSubject>("RFSubject", "Субъект РФ")
			;	
			p.AddClass<IDocTaskOperation>()
				.IntKey()
				.Attribute("ActAblative", "НПА для перерасчета", MetaStringType.Null())
				.Attribute("Bonus", "Премия", MetaDecimalType.Null())
				.Attribute("CalcAmount", "Рассчитанный размер", MetaDecimalType.Null())
				.Attribute("CalcSalary", "СДВ", MetaDecimalType.Null())
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("Copy_Citizen_Address", "Адрес", MetaStringType.Null())
				.Attribute("Copy_Citizen_Firstname", "Имя", MetaStringType.Null())
				.Attribute("Copy_Citizen_FirstnameDative", "Имя (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_FirstnameGenitive", "Имя (родительный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_Index", "Индекс", MetaStringType.Null())
				.Attribute("Copy_Citizen_Patronymic", "Отчество", MetaStringType.Null())
				.Attribute("Copy_Citizen_PatronymicDative", "Отчество (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_PatronymicGenitive", "Отчество (родительный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_RFSubjectText", "Субъект РФ", MetaStringType.Null())
				.Attribute("Copy_Citizen_Surname", "Фамилия", MetaStringType.Null())
				.Attribute("Copy_Citizen_SurnameDative", "Фамилия (дательный падеж)", MetaStringType.Null())
				.Attribute("Copy_Citizen_SurnameGenitive", "Фамилия (родительный падеж)", MetaStringType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("DecisionDate", "Дата решения", MetaDateType.Null())
				.Attribute("DocTaskOperationID", "Ид", MetaIntType.NotNull())
				.Attribute("FGAMidSalary", "СМЗ (фед)", MetaDecimalType.Null())
				.Attribute("FGAPercent", "% начисл. (фед)", MetaDecimalType.Null())
				.Attribute("FGASalary", "Должностной оклад (фед)", MetaDecimalType.Null())
				.Attribute("FGASeniority", "Стаж (фед)", MetaIntType.Null())
				.Attribute("IsApprove", "Решение", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsLast", "Признак Последняя", MetaBooleanType.NotNull())
				.Attribute("IsMigrationData", "IsMigrationData", MetaBooleanType.NotNull())
				.Attribute("IsTracking", "Признак Контрольная", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OpNo", "Номер", MetaIntType.Null())
				.Attribute("OrderDate", "Дата поручения", MetaDateType.Null())
				.Attribute("OtherDecisionDate", "Дата решения по иным периодам", MetaDateType.Null())
				.Attribute("PaymentEndDate", "Дата окончания исполнения", MetaDateType.Null())
				.Attribute("PaymentStartDate", "Дата начала исполнения", MetaDateType.Null())
				.Attribute("RaiseRatioSum", "Сумма после коэффициента увеличения", MetaDecimalType.Null())
				.Attribute("RaiseRatioValue", "Значение коэффициента увеличения", MetaDecimalType.Null())
				.Attribute("RegionalRatioValue", "Значение регионального коэффициента", MetaDecimalType.Null())
				.Attribute("Restriction", "Верхний коэффициент ограничения", MetaDecimalType.Null())
				.Attribute("RestrictionMin", "Нижний коэффициент ограничения", MetaDecimalType.Null())
				.Attribute("SalaryDate", "Дата оклада", MetaDateType.Null())
				.Attribute("SalaryIncK", "Надбавка за квалификацию", MetaDecimalType.Null())
				.Attribute("SalaryIncL", "Надбавка за выслугу лет", MetaDecimalType.Null())
				.Attribute("SalaryIncS", "Надбавка за сложность", MetaDecimalType.Null())
				.Attribute("SalaryIncSek", "Надбавка за работу с секретными сведениями", MetaDecimalType.Null())
				.Attribute("SalaryIncU", "Надбавка за особые условия", MetaDecimalType.Null())
				.Attribute("Seniority", "Стаж", MetaIntType.Null())
				.Attribute("SumIndexing", "Суммарный коэффициент индексации", MetaDecimalType.NotNull())
				.Attribute("SumIndexingPrev", "Суммарный коэффициент индексации до даты оклада", MetaDecimalType.NotNull())
				.PersistentComputedAttribute("Title", "Номер", MetaStringType.Null())
				.Reference<IWF_Activity>("Activity", "Статус")
				.Reference<IC_RFSubject>("Copy_Citizen_RFSubject", "Субъект РФ")
				.Reference<IDocTask>("DocTask", "Задание")
				.Reference<IC_PostSalaryIndexing>("Indexing", "Индексация", x => x.Multiple())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMassCalc>("MassCalc", "Результат массового перерасчета")
				.Reference<IC_OperationReason>("OperationReason", "Причина")
				.Reference<IC_PaymentStatus>("PaymentStatus", "Состояние выплаты")
				.Reference<IC_PaymentType>("PaymentType", "Вид ГПО")
				.Reference<IC_PensionerCategory>("PensionerCategory", "Категория пенсионера")
				.Reference<IC_PensionType>("PensionType", "Вид трудовой пенсии")
				.Reference<IC_RaiseRatio>("RaiseRatio", "Коэффициент увеличения")
				.Reference<IC_RaiseRatio>("RaiseRatios", "Коэффициенты увеличения СМЗ", x => x.Multiple())
				.Reference<IC_RegionalRatio>("RegionalRatio", "Районный коэффициент")
				.Reference<IC_RestrictionRatio>("RestrictionRatio", "Коэффициент ограничения")
				.Reference<IC_OperationType>("Type", "Вид операции")
				.Reference<IWorkInfo>("WorkInfo", "Сведения о государственной службе", x => x.Multiple().InverseProperty("DocTaskOperation"))
			;	
			p.AddClass<IWorkInfo>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала службы", MetaDateType.Null())
				.Attribute("CalcPostTitle", "Должность (текст)", MetaStringType.Null())
				.Attribute("CalcSalary", "СМЗ (расчет)", MetaDecimalType.Null())
				.Attribute("ExtraPayPostTitle", "Прочая должность (текст)", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("IsLast", "Признак Последний", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("LeavingDate", "Дата увольнения", MetaDateType.Null())
				.Attribute("OrgUnitTitle", "Гос. орган (текст)", MetaStringType.Null())
				.Attribute("Seniority", "Стаж", MetaIntType.Null())
				.Attribute("WorkInfoID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IC_Post>("CalcPost", "Должность (расчет)")
				.Reference<IDocTaskOperation>("DocTaskOperation", "Операция", x => x.InverseProperty("WorkInfo"))
				.Reference<IC_Post>("ExtraPayPost", "Прочая должность")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Гос. орган")
			;	
			p.AddClass<IDocTaskRequest>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Ответ на обращение", MetaStringType.Null())
				.Reference<IC_CitizenCategory>("CitizenCategory", "Категория гражданина")
				.Reference<IDocTask>("DocTask", "Ид")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_RequestCategory>("RequestCategory", "Категория обращения")
				.Reference<IC_RequestResultCategory>("RequestResultCategory", "Категория результата")
			;	
			p.AddClass<ICitizenPension>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала", MetaDateType.Null())
				.Attribute("CitizenPensionID", "Ид", MetaIntType.NotNull())
				.Attribute("CreateDate", "Дата записи", MetaDateType.Null())
				.Attribute("EndDate", "Дата окончания", MetaDateType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PensionValue", "Сумма трудовой пенсии", MetaDecimalType.Null())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<ICitizen>("Citizen", "Гражданин", x => x.InverseProperty("CitizenPension"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PaymentStatus>("PaymentStatus", "Состояние выплаты")
				.Reference<IC_PensionType>("PensionType", "Вид трудовой пенсии")
			;	
			p.AddClass<IMassCalc>()
				.IntKey()
				.Attribute("Act", "Нормативно-правовой акт", MetaStringType.Null())
				.Attribute("CloseDate", "Дата закрытия", MetaDateTimeType.Null())
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("CompleteDate", "Дата исполнения", MetaDateTimeType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateTimeType.NotNull())
				.Attribute("DecisionDate", "Дата решения об изменении ГПО", MetaDateTimeType.Null())
				.Attribute("IsCalculated", "Рассчет выполнен", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MassCalcID", "Ид", MetaIntType.NotNull())
				.Attribute("OnCheckDate", "Дата начала проверки", MetaDateTimeType.Null())
				.Attribute("OrgUnitCondition", "Условия отбора органов госдарственного управления", MetaIntType.NotNull())
				.Attribute("PensionAmountFrom", "Сумма ГПО с", MetaDecimalType.Null())
				.Attribute("PensionAmountTo", "Сумма ГПО по", MetaDecimalType.Null())
				.Attribute("PensionBeginDate", "Дата начала периода назначения ГПО", MetaDateType.Null())
				.Attribute("PensionChangeDate", "Дата, с которой изменен размер ГПО", MetaDateTimeType.Null())
				.Attribute("PensionEndDate", "Дата завершения периода назначения ГПО", MetaDateType.Null())
				.Attribute("PostCondition", "Условие отбора государственных должностей", MetaIntType.NotNull())
				.Attribute("PostDate", "Дата установления применяемого должностного оклада", MetaDateType.Null())
				.Attribute("PostPartCondition", "Условия отбора должностей федеральных служащих", MetaIntType.NotNull())
				.Attribute("RFSubjectCondition", "Условие отбора субъектов РФ", MetaIntType.Null())
				.Attribute("SendingOrgUnit", "Отправка уведомлений Управлением", MetaBooleanType.NotNull())
				.Attribute("StatusDate", "Дата установления текущего статуса", MetaDateTimeType.Null())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.PersistentComputedAttribute("Status", "Статус", MetaStringType.Null())
				.Reference<ICitizen>("Citizens", "Граждане для перерасчета", x => x.Multiple())
				.Reference<IEmployee>("Employee", "Исполнитель")
				.Reference<IC_PostSalaryIndexing>("Indexing", "Коэффициент индексации")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnits", "Органы государственного управления", x => x.Multiple())
				.Reference<IC_PaymentStatus>("PaymentStatuses", "Состояния ГПО", x => x.Multiple())
				.Reference<IC_PensionerCategory>("PensionerCategory", "Категория получателей ГПО")
				.Reference<IC_PostPart>("PostParts", "Должности федеральных служащих", x => x.Multiple())
				.Reference<IC_Post>("Posts", "Государственные должности", x => x.Multiple())
				.Reference<IC_RaiseRatio>("RaiseRatio", "Коэффициент увеличения СМЗ")
				.Reference<IC_RestrictionRatio>("RestrictionRatio", "Коэффициент ограничения СМЗ")
				.Reference<IC_RFSubject>("RFSubjects", "Субъекты РФ", x => x.Multiple())
				.Reference<IC_SpecialNote>("SpecialNote", "Особые отметки", x => x.Multiple())
			;	
			p.AddClass<IControlTask>()
				.IntKey()
				.Attribute("CalcAmount", "Рассчитанный размер", MetaDecimalType.Null())
				.Attribute("ControlTaskID", "Ид", MetaIntType.NotNull())
				.Attribute("CreateDate", "Дата создания", MetaDateTimeType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ICitizen>("Citizen", "Гражданин")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IMassCalc>("MassCalc", "Результат массового перерасчета")
			;	
			p.AddClass<IInfoDoc>()
				.IntKey()
				.Attribute("AccessCondition", "Доступ к документу", MetaIntType.NotNull())
				.Attribute("Author", "Источник", MetaStringType.Null())
				.Attribute("BeginDate", "Дата начала действия", MetaDateType.Null())
				.Attribute("Comment", "Комментарий", MetaStringType.Null())
				.Attribute("CreateDate", "Дата выпуска", MetaDateType.Null())
				.Attribute("EndDate", "Дата прекращения действия", MetaDateType.Null())
				.Attribute("File", "Электронный образ документа", MetaFileType.Null())
				.Attribute("InfoDocID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PublishDate", "Дата размещения", MetaDateType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<IEmployee>("Access", "Перечень пользователей для доступа к документу", x => x.Multiple())
				.Reference<IEmployee>("Employee", "Сотрудник, разместивший документ")
				.Reference<IC_InfoDocType>("InfoDocType", "Тип документа")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IComplaint>()
				.IntKey()
				.Attribute("ComplaintDate", "Дата подачи", MetaDateType.Null())
				.Attribute("ComplaintID", "Ид", MetaIntType.NotNull())
				.Attribute("DecisionDate", "Дата судебного решения", MetaDateType.Null())
				.Attribute("DecisionText", "Содержание судебного решения", MetaStringType.Null())
				.Attribute("ExternalFileNo", "Номер дела в судебном органе", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Содержание жалобы", MetaStringType.NotNull())
				.PersistentComputedAttribute("DisplayTitle", "Отображаемое наименование", MetaStringType.Null())
				.Reference<IC_RequestCategory>("Category", "Категория жалобы")
				.Reference<IC_JuridicalInstance>("Instance", "Инстанция")
				.Reference<IJuridicalCase>("JuridicalCase", "Судебное дело")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<ICourtSession>("Sessions", "Судебные заседания", x => x.Multiple().InverseProperty("Complaint"))
			;	
			p.AddClass<ICourtSession>()
				.IntKey()
				.Attribute("CourtSessionID", "Ид", MetaIntType.NotNull())
				.Attribute("FIO", "Ф.И.О. контактного лица", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Phone", "Телефон", MetaStringType.Null())
				.Attribute("Post", "Должность контактного лица", MetaStringType.Null())
				.Attribute("SessionDate", "Дата", MetaDateType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<IComplaint>("Complaint", "Жалоба", x => x.InverseProperty("Sessions"))
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_CourtSessionStatus>("Status", "Статус")
			;	
			p.AddClass<IDocTaskComplaint>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IComplaint>("Complaint", "Жалоба")
				.Reference<IDocTask>("DocTask", "Ид")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IOutDocSend>()
				.IntKey()
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("NoCalc", "Номер перерасчета", MetaIntType.NotNull())
				.Attribute("NoUnload", "Номер выгрузки", MetaIntType.Null())
				.Attribute("OutDocSendID", "Ид", MetaIntType.NotNull())
				.Attribute("SendDate", "Дата отправки пакета", MetaDateType.Null())
				.Attribute("SendType", "Тип отправки", MetaIntType.NotNull())
				.Attribute("SignedDate", "Дата подписания", MetaDateType.Null())
				.Attribute("SigningDate", "Дата выгрузки", MetaDateType.Null())
				.Attribute("Title", "Номер пакета", MetaStringType.NotNull())
				.PersistentComputedAttribute("UnloadTitle", "Наименование выгрузки", MetaStringType.Null())
				.Reference<IWF_Activity>("Activity", "Статус")
				.Reference<IDoc>("Doc", "Документы", x => x.Multiple())
				.Reference<IC_DocType>("DocType", "Вид документов")
				.Reference<IEmployee>("Employee", "Исполнитель")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("Recipient", "Отделение ПФР")
				.Reference<IOrgUnitResponsible>("Responsible", "Ответственный в ОПФР")
				.Reference<IC_RFSubject>("RFSubject", "Субъект РФ")
			;	
			p.AddClass<IOfficeNote>()
				.IntKey()
				.Attribute("AddresseeFIO", "Ф.И.О. адресата", MetaStringType.Null())
				.Attribute("AddresseePost", "Должность адресата", MetaStringType.Null())
				.Attribute("CreateDate", "Дата создания", MetaDateType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OfficeNoteID", "Ид", MetaIntType.NotNull())
				.Attribute("OperationType", "Тип операции", MetaIntType.Null())
				.Attribute("SignDate", "Дата подписания", MetaDateType.Null())
				.Attribute("SignerFIO", "Ф.И.О. подписанта", MetaStringType.Null())
				.Attribute("SignerPost", "Должность подписанта", MetaStringType.Null())
				.Attribute("Title", "Номер", MetaStringType.NotNull())
				.Reference<IDoc>("Docs", "Документы", x => x.Multiple())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PaymentType>("PaymentType", "Вид ГПО")
			;	
			p.AddClass<IMassOperationQueue>()
				.IntKey()
				.Attribute("AbortDate", "Дата прерывания операции", MetaDateTimeType.Null())
				.Attribute("CancelDate", "Дата отмены операции", MetaDateTimeType.Null())
				.Attribute("ChangeDate", "Дата последнего изменения операции", MetaDateTimeType.Null())
				.Attribute("Creator", "Сотрудник", MetaGuidType.Null())
				.Attribute("FinishDate", "Дата завершения операции", MetaDateTimeType.Null())
				.Attribute("InitDate", "Дата инициации операции", MetaDateTimeType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MassCalcID", "Ид массового перерасчета", MetaIntType.NotNull())
				.Attribute("MassOperationQueueID", "Ид", MetaIntType.NotNull())
				.Attribute("ProcessedCount", "Кол-во обработанных карточек", MetaIntType.NotNull())
				.Attribute("StartDate", "Дата начала операции", MetaDateTimeType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TotalCount", "Кол-во карточек для операции", MetaIntType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_MassOperationType>("Operation", "Операция")
				.Reference<IC_MassOperationState>("State", "Состояние операции")
			;	
			return p;
		}
	}
	public partial interface IC_RFSubject { }
	public partial interface IC_CitizenCategory { }
	public partial interface IC_Post { }
	public partial interface IC_ExtraPayPost { }
	public partial interface IC_RegionalRatio { }
	public partial interface IC_OperationReason { }
	public partial interface IC_DocName { }
	public partial interface IC_RegLog { }
	public partial interface IC_DocType { }
	public partial interface IC_ProvisionMode { }
	public partial interface IC_RequestCategory { }
	public partial interface IC_RequestResultCategory { }
	public partial interface IC_DocClass { }
	public partial interface IC_PostSalary { }
	public partial interface IC_PostType { }
	public partial interface IC_OperationType { }
	public partial interface IC_SenderCategory { }
	public partial interface IC_PensionType { }
	public partial interface IC_PostSalaryIndexing { }
	public partial interface IC_PensionerCategory { }
	public partial interface IC_PaymentStatus { }
	public partial interface IC_PaymentType { }
	public partial interface IC_RestrictionRatio { }
	public partial interface IC_RaiseRatio { }
	public partial interface IC_RequestMethod { }
	public partial interface IC_Seniority { }
	public partial interface IC_PostPart { }
	public partial interface IC_MassCalcStatus { }
	public partial interface IC_DocTaskType { }
	public partial interface IC_Sign { }
	public partial interface IC_InfoDocType { }
	public partial interface IC_JuridicalInstance { }
	public partial interface IC_CourtSessionStatus { }
	public partial interface IC_MassOperationType { }
	public partial interface IC_MassOperationState { }
	public partial interface IC_SpecialNote { }

	public class DictModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Dict");
			p.AddClass<IC_RFSubject>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала действия", MetaDateTimeType.NotNull())
				.Attribute("Capital", "Административный центр", MetaStringType.Null())
				.Attribute("Code", "Код", MetaStringType.NotNull())
				.Attribute("EndDate", "Дата окончания действия", MetaDateTimeType.NotNull())
				.Attribute("FDCode", "Код ферерального округа", MetaIntType.Null())
				.Attribute("LastModifiedDate", "Дата последней модификации", MetaDateTimeType.NotNull())
				.Attribute("MasterObjectGUID", "Идентификатор версионного объекта", MetaGuidType.NotNull())
				.Attribute("OKATO", "OKATO", MetaStringType.Null())
				.Attribute("RFSubjectID", "Идентификатор", MetaIntType.NotNull())
				.Attribute("ShortTitle", "Краткое наименование", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitleDative", "Наименование (дательный падеж)", MetaStringType.Null())
				.Attribute("TitleGenitive", "Наименование (родительный падеж)", MetaStringType.Null())
				.Attribute("TitleLocative", "Наименование (предложный падеж)", MetaStringType.Null())
				.ComputedAttribute("DisplayTitle", "Отображаемое имя", MetaStringType.Null())
				.PersistentComputedAttribute("IsDeleted", "Удален", MetaBooleanType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IN_TimeZone>("TimeZone", "Часовой пояс")
			;	
			p.AddClass<IC_CitizenCategory>()
				.IntKey()
				.Attribute("CitizenCategoryID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_Post>()
				.IntKey()
				.Attribute("BeginDate", "Дата учреждения", MetaDateType.Null())
				.Attribute("Category", "Категория", MetaStringType.Null())
				.Attribute("Chapter", "Глава", MetaIntType.Null())
				.Attribute("Code", "Код", MetaStringType.Null())
				.Attribute("EndDate", "Дата упразднения", MetaDateType.Null())
				.Attribute("Group", "Группа", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Part", "Раздел", MetaIntType.Null())
				.Attribute("PostID", "Ид", MetaIntType.NotNull())
				.Attribute("PTK", "Код ПТК", MetaIntType.Null())
				.Attribute("Subpart", "Подраздел", MetaIntType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitleGenetive", "Наименование (родительный падеж)", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Государственный, законодательный или международный орган")
				.Reference<IC_Post>("ParentPost", "Должность для расчета доплаты")
				.Reference<IC_PostType>("ParentType", "Тип должности - соответствия")
				.Reference<IC_PensionerCategory>("PensionerCategory", "Категория пенсионера")
				.Reference<IC_PostPart>("PostPart", "Раздел")
				.Reference<IC_PostSalary>("Salary", "Размер должностного оклада", x => x.Multiple().InverseProperty("Post"))
				.Reference<IC_PostType>("Type", "Тип Государственная/Федеральная")
			;	
			p.AddClass<IC_ExtraPayPost>()
				.IntKey()
				.Attribute("BeginDate", "Дата учреждения", MetaDateType.Null())
				.Attribute("EndDate", "Дата упразднения", MetaDateType.Null())
				.Attribute("ExtraPayPostID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IOrgUnit>("OrgUnit", "Государственный, законодательный или международный орган")
				.Reference<IC_Post>("Post", "Должность для расчета доплаты")
				.Reference<IC_PostPart>("PostPart", "Раздел")
				.Reference<IC_PostType>("PostType", "Тип должности")
			;	
			p.AddClass<IC_RegionalRatio>()
				.IntKey()
				.Attribute("Act", "НПА", MetaStringType.Null())
				.Attribute("ATE", "Административно-территориальные единицы", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PTK", "ПТК", MetaIntType.Null())
				.Attribute("RegionalRatioID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("Value", "Коэффициент", MetaDecimalType.NotNull())
				.PersistentComputedAttribute("DisplayTitle", "Отображаемое наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_RFSubject>("RFSubject", "Субьект РФ")
			;	
			p.AddClass<IC_OperationReason>()
				.IntKey()
				.Attribute("Act", "Акт", MetaBooleanType.NotNull())
				.Attribute("Claim", "Личное заявление", MetaBooleanType.NotNull())
				.Attribute("DecisionType", "Вид решения", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OperationReasonID", "Ид", MetaIntType.NotNull())
				.Attribute("PTK", "ПТК", MetaStringType.Null())
				.Attribute("ShortTitle", "Краткое наименование", MetaStringType.Null())
				.Attribute("Title", "Наименование основания", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_OperationType>("Type", "Наименование операции")
			;	
			p.AddClass<IC_DocName>()
				.IntKey()
				.Attribute("DocNameID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitleGenitive", "Наименование (родительный падеж)", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_RegLog>()
				.IntKey()
				.Attribute("Code", "Код", MetaIntType.Null())
				.Attribute("CurrentNo", "Текущий номер документа", MetaIntType.NotNull())
				.Attribute("FormatClass", "Формат номера документа", MetaStringType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Postfix", "Постфикс", MetaStringType.Null())
				.Attribute("Prefix", "Префикс", MetaStringType.Null())
				.Attribute("RegLogID", "Ид", MetaIntType.NotNull())
				.Attribute("SpecialWork", "Специальное делопроизводство", MetaBooleanType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_DocType>()
				.IntKey()
				.Attribute("CheckPeriod", "Срок проверки", MetaIntType.Null())
				.Attribute("CompleteWarning", "Предупреждение о сроке выполнения ", MetaIntType.NotNull())
				.Attribute("DocTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("FormWarning", "Предупреждение о сроке оформления ", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PlanExecutionPeriod", "Плановый срок выполнения", MetaIntType.Null())
				.Attribute("SendNeeded", "Включается в пакет отправки", MetaBooleanType.NotNull())
				.Attribute("SendType", "Вид отправки", MetaIntType.NotNull())
				.Attribute("SignNeeded", "Требуется вторая подпись", MetaBooleanType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IC_DocName>("Appendix", "Приложения", x => x.Multiple())
				.Reference<IC_DocClass>("DocClass", "Тип")
				.Reference<IC_DocName>("DocName", "Наименование документа")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_RegLog>("RegLog", "Журнал регистрации документов")
				.Reference<IC_SenderCategory>("SenderCategory", "Категория отправителя")
			;	
			p.AddClass<IC_ProvisionMode>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("ProvisionModeID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_RequestCategory>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RequestCategoryID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_RequestResultCategory>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RequestResultCategoryID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_DocClass>()
				.IntKey()
				.Attribute("DocClassID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_PostSalary>()
				.IntKey()
				.Attribute("Amount", "Сумма", MetaDecimalType.NotNull())
				.Attribute("CreateDate", "Дата установления", MetaDateType.NotNull())
				.Attribute("EndDate", "Дата прекращения действия", MetaDateType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PostSalaryID", "Ид", MetaIntType.NotNull())
				.Attribute("PublishDate", "Дата ввода в действие", MetaDateType.NotNull())
				.Attribute("Ratio", "Коэффициент индексации", MetaDecimalType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<IC_PostSalaryIndexing>("Indexing", "Является результатом индексации")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_Post>("ParentPost", "Соответствующая должность")
				.Reference<IC_Post>("Post", "Должность", x => x.InverseProperty("Salary"))
				.Reference<IC_PostPart>("PostPart", "Раздел")
			;	
			p.AddClass<IC_PostType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PostTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_OperationType>()
				.IntKey()
				.Attribute("Action", "Действие операции", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OperationTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("Result", "Результат", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitlePrepositional", "Наименование операции (предложный падеж)", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_SenderCategory>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SenderCategoryID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_PensionType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PensionTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_PostSalaryIndexing>()
				.IntKey()
				.Attribute("ActDate", "Дата НПА", MetaDateType.Null())
				.Attribute("Condition", "Условие применения", MetaIntType.NotNull())
				.Attribute("IndexingDate", "Дата индексации", MetaDateType.Null())
				.Attribute("IsCalcComplete", "Применение выполнено", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PostSalaryIndexingID", "Ид", MetaIntType.NotNull())
				.Attribute("PTK", "ПТК", MetaStringType.Null())
				.Attribute("Title", "Нормативно-правовой акт", MetaStringType.NotNull())
				.Attribute("TitleAblative", "НПА (творительный падеж)", MetaStringType.Null())
				.Attribute("Value", "Коэффициент", MetaDecimalType.Null())
				.PersistentComputedAttribute("DisplayTitle", "Отображаемое наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PostPart>("PostParts", "Индексируемые разделы", x => x.Multiple())
				.Reference<IC_Post>("Posts", "Индексируемые должности", x => x.Multiple())
				.Reference<IC_PostType>("PostType", "Тип должности")
			;	
			p.AddClass<IC_PensionerCategory>()
				.IntKey()
				.Attribute("AddInfo", "Дополнение", MetaStringType.Null())
				.Attribute("Amounts", "Учитываемые суммы", MetaStringType.Null())
				.Attribute("AmountsInstrumental", "Учитываемые суммы (творительный падеж)", MetaStringType.Null())
				.Attribute("ExceptFull", "Исключение полное", MetaStringType.Null())
				.Attribute("Exception", "Исключение", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("LegalAct", "Нормативно-правовой акт", MetaStringType.Null())
				.Attribute("PensionerCategoryID", "Ид", MetaIntType.NotNull())
				.Attribute("ReasonChange", "Основание для изменения", MetaStringType.Null())
				.Attribute("ReceiverStatus", "Статус получателя", MetaStringType.Null())
				.Attribute("SignFio", "Подпись - ФИО", MetaStringType.Null())
				.Attribute("SignPost", "Подпись - должность", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PaymentType>("PaymentType", "Вид ГПО")
				.Reference<IC_PostType>("PostType", "Тип должности")
			;	
			p.AddClass<IC_PaymentStatus>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PaymentStatusID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_PaymentType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PaymentTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("ShortTitleAblative", "Краткое наименование (творительный падеж)", MetaStringType.Null())
				.Attribute("ShortTitleGenitive", "Краткое наименование (родительный падеж)", MetaStringType.Null())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Attribute("TitleAblative", "Наименование (творительный падеж)", MetaStringType.Null())
				.Attribute("TitleAccusative", "Наименование (винительный падеж)", MetaStringType.Null())
				.Attribute("TitleGenitive", "Наименование (родительный падеж)", MetaStringType.Null())
				.Attribute("TitlePrepositional", "Наименование (предложный падеж)", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_RestrictionRatio>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RestrictionRatioID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Примечание", MetaStringType.Null())
				.Attribute("Value", "Коэффициент", MetaDecimalType.NotNull())
				.PersistentComputedAttribute("DisplayTitle", "Отображаемое наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PostType>("Type", "Тип получателя ГПО")
			;	
			p.AddClass<IC_RaiseRatio>()
				.IntKey()
				.Attribute("EndDate", "Дата окончания действия", MetaDateType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RaiseRatioID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Примечание", MetaStringType.Null())
				.Attribute("Value", "Коэффициент", MetaDecimalType.NotNull())
				.PersistentComputedAttribute("DisplayTitle", "Отображаемое наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_PostType>("Type", "Тип получателя ГПО")
			;	
			p.AddClass<IC_RequestMethod>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("RequestMethodID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_Seniority>()
				.IntKey()
				.Attribute("BeginDate", "Дата начала действия", MetaDateType.Null())
				.Attribute("Comment", "Примечание", MetaStringType.Null())
				.Attribute("CreateDate", "Дата создания записи", MetaDateType.Null())
				.Attribute("DocDate", "Дата документа", MetaDateType.Null())
				.Attribute("DocNo", "Номер документа", MetaStringType.Null())
				.Attribute("EndDate", "Дата окончания действия", MetaDateType.Null())
				.Attribute("Folder", "Папка", MetaStringType.Null())
				.Attribute("IsCountedToward", "Признак стаж засчитывается/не засчитывается", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("OrgUnitTitle", "Наименование органа ГУ", MetaStringType.Null())
				.Attribute("Reason", "Основание", MetaStringType.Null())
				.Attribute("SeniorityID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование организации", MetaStringType.NotNull())
				.Reference<IEmployee>("Employee", "Исполнитель")
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_PostPart>()
				.IntKey()
				.Attribute("Chapter", "Глава", MetaStringType.NotNull())
				.Attribute("Description", "Описание", MetaStringType.Null())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Part", "Раздел", MetaStringType.NotNull())
				.Attribute("PostPartID", "Ид", MetaIntType.NotNull())
				.Attribute("ShortDescription", "Краткое описание", MetaStringType.Null())
				.Attribute("Subpart", "Подраздел", MetaStringType.NotNull())
				.PersistentComputedAttribute("ShortTitle", "Краткое наименование", MetaStringType.Null())
				.PersistentComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_MassCalcStatus>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MassCalcStatusID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_DocTaskType>()
				.IntKey()
				.Attribute("DocTaskTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_Sign>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Post", "Должность", MetaStringType.Null())
				.Attribute("PostDative", "Должность (дательный падеж)", MetaStringType.Null())
				.Attribute("Sign1PostType1", "1 подпись для типа Госдолжность", MetaBooleanType.NotNull())
				.Attribute("Sign1PostType2", "1 подпись для типа Федеральные служащие", MetaBooleanType.NotNull())
				.Attribute("Sign2PostType1", "2 подпись для типа Госдолжность", MetaBooleanType.NotNull())
				.Attribute("Sign2PostType2", "2 подпись для типа Федеральные служащие", MetaBooleanType.NotNull())
				.Attribute("SignComplaint", "Подпись для ответов в СО", MetaBooleanType.NotNull())
				.Attribute("SignID", "Ид", MetaIntType.NotNull())
				.Attribute("SignRequest", "Подпись для ответов на обращения", MetaBooleanType.NotNull())
				.Attribute("Title", "Ф.И.О.", MetaStringType.NotNull())
				.Attribute("TitleDative", "Ф.И.О. (дательный падеж)", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_InfoDocType>()
				.IntKey()
				.Attribute("InfoDocTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_JuridicalInstance>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("JuridicalInstanceID", "Ид", MetaIntType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_CourtSessionStatus>()
				.IntKey()
				.Attribute("CourtSessionStatusID", "Ид", MetaIntType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_MassOperationType>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MassOperationTypeID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_MassOperationState>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("MassOperationStateID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IC_SpecialNote>()
				.IntKey()
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("SpecialNoteID", "Ид", MetaIntType.NotNull())
				.Attribute("Title", "Наименование", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			return p;
		}
	}

	public class ReportsModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("Reports");
			return p;
		}
	}
	public partial interface IC_Scanner { }
	public partial interface IScanUserSettings { }

	public class NetScanModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("NetScan");
			p.AddClass<IC_Scanner>()
				.IntKey()
				.Attribute("FileFormat", "Формат файла", MetaEnum.NotNull())
				.Attribute("IsAvailable", "Доступен", MetaBooleanType.NotNull())
				.Attribute("IsColoredScan", "Цветное сканирование", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("Location", "Расположение сканера", MetaStringType.Null())
				.Attribute("Model", "Марка/модель сканера", MetaStringType.Null())
				.Attribute("PaperFormat", "Формат бумаги", MetaEnum.NotNull())
				.Attribute("Resolution", "Разрешение", MetaEnum.NotNull())
				.Attribute("ScannerID", "Ид", MetaIntType.NotNull())
				.Attribute("SysName", "Системное имя", MetaStringType.NotNull())
				.Attribute("Title", "Имя сканера", MetaStringType.NotNull())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
			;	
			p.AddClass<IScanUserSettings>()
				.IntKey()
				.Attribute("FileFormat", "Формат файла", MetaEnum.NotNull())
				.Attribute("IsColoredScan", "Цветное сканирование", MetaBooleanType.NotNull())
				.Attribute("IsDeleted", "Удален", MetaBooleanType.NotNull())
				.Attribute("LastModifiedDate", "Дата последнего изменения", MetaDateTimeType.NotNull())
				.Attribute("PaperFormat", "Формат бумаги", MetaEnum.NotNull())
				.Attribute("Resolution", "Разрешение", MetaEnum.NotNull())
				.Attribute("ScanUserSettingsID", "Ид", MetaIntType.NotNull())
				.ComputedAttribute("Title", "Наименование", MetaStringType.Null())
				.Reference<ISPM_Subject>("LastModifiedUser", "Последний редактировавший пользователь")
				.Reference<IC_Scanner>("Scanner", "Сканер")
				.Reference<ISPM_Subject>("Subject", "Пользователь")
			;	
			return p;
		}
	}

	public class AssemblyGenModule
	{
		public MetaPackage Init()
		{
			var p = new MetaPackage("AssemblyGen");
			return p;
		}
	}
}